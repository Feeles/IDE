import Assets from 'hackforplay/Assets';
import {
	gameclear
} from 'utils';
import extra from '../extra';


function gameStart() {

	// 解説の youtube を開く
	feeles.openMedia({
		url: 'https://www.youtube.com/embed/od61KliPeJI'
	});

	// 説明書を表示する
	// feeles.openReadme('stages/1/README.md');

	// map1 を読み込む
	Hack.maps['map1'].load();


	// プレイヤー（騎士）
	const player = Hack.player = new Player();
	player.mod(_kきし);
	// プレイヤーを　3,　5 の位置に移動する
	player.locate(3, 5);
	// プレイヤーの体力
	player.hp = 3;
	// プレイヤーの攻撃力
	player.atk = 1;
	// プレイヤーがやられたら...
	player.onたおれたとき = function() {
		// プレイヤーを削除
		this.destroy();
		// ゲームオーバー
		Hack.gameover();
	};

	// スライム
	const item1 = new RPGObject();
	item1.mod(_sスライム);
	// スライムの体力
	item1.hp = 3;
	// スライムの攻撃力
	item1.atk = 1;
	// スライムを 9, 5 の位置に移動する ( map1 )
	item1.locate(9, 5, 'map1');
	// スライムが攻撃されたら
	item1.on('attacked', () => {
		// 1.4秒後に...
		setTimeout(() => {
			if (item1.behavior === BehaviorTypes.Idle) {
				// 反撃する！（攻撃する）
				item1.attack();
			}
		}, 1400);
		// 1400 は、 1.4 秒のこと
	});



	// 階段
	const item2 = new RPGObject();
	item2.mod(_kくだりかいだん);
	// 階段を 12, 5 の位置に移動 ( map1 )
	item2.locate(12, 5, 'map1');
	// 階段にプレイヤーが乗ったら...
	item2.onのった = () => {
		// 次のステージに！
		feeles.replace('stages/2/index.html');
	};


	// このステージを改造
	extra(6, 9, 'map1', 'stages/1/main.js');
}


function createMap() {

	// map1 というマップを作る
	const mapName = 'map1';

	// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )
	const map = new RPGMap(32, 32, 15, 10);

	map.imagePath = 'enchantjs/x2/dotmat.gif';
	const ___ = -1;

	// マップの地形をつくる
	map.bmap.loadData([
		[322, 322, 322, 322, 322, 322, 322, 204, 205, 205, 205, 205, 205, 205, 205],
		[322, 322, 322, 322, 322, 322, 322, 204, 205, 205, 205, 205, 205, 205, 205],
		[322, 322, 322, 322, 322, 322, 322, 204, 205, 205, 205, 205, 205, 205, 205],
		[322, 322, 322, 322, 322, 322, 322, 204, 205, 205, 166, 225, 225, 225, 167],
		[322, 322, 322, 322, 322, 322, 322, 224, 225, 225, 226, 322, 322, 322, 204],
		[322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 204],
		[322, 322, 322, 322, 322, 322, 322, 184, 185, 185, 186, 322, 322, 322, 204],
		[322, 322, 322, 322, 322, 322, 322, 204, 205, 205, 164, 185, 185, 185, 165],
		[322, 322, 322, 322, 322, 24., 26., 204, 205, 205, 205, 205, 205, 205, 205],
		[322, 322, 322, 322, 322, 64., 66., 204, 205, 205, 205, 205, 205, 205, 205],
	], [
		[462, 461, 462, 461, 462, 461, 462, ___, ___, ___, ___, ___, ___, ___, ___],
		[482, 481, 482, 481, 482, 481, 482, ___, ___, ___, ___, ___, ___, ___, ___],
		[462, ___, ___, 421, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___],
		[482, ___, 421, ___, ___, 421, ___, ___, ___, ___, ___, ___, ___, ___, ___],
		[___, 421, ___, ___, 421, ___, 421, ___, ___, ___, ___, ___, ___, ___, ___],
		[___, ___, 421, ___, 421, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___],
		[462, ___, ___, 421, 421, ___, 421, ___, ___, ___, ___, ___, ___, ___, ___],
		[482, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___],
		[462, ___, ___, 461, 462, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___],
		[482, ___, ___, 481, 482, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___],
	]);

	// マップの歩ける場所を決める
	// 1 なら歩けないし、 0 なら歩ける
	map.cmap = [
		[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		[1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
		[1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
		[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
		[1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
		[1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
	];



	Hack.maps[mapName] = map;

}




game.onload = gameStart;
Hack.on('load', createMap);
Hack.start();
