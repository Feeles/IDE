[{"name":".babelrc","type":"application/octet-stream","lastModified":1492756455000,"composed":"ewogICJwcmVzZXRzIjogWyJlczIwMTUiLCAic3RhZ2UtMyJdLAogICJwbHVnaW5zIjogWyJ0cmFuc2Zvcm0tY2xhc3MtcHJvcGVydGllcyJdCn0K","options":{"isTrashed":false},"credits":[]},{"name":".env","type":"application/octet-stream","lastModified":1492756455000,"composed":"ewogICAgIkRFQlVHIjogWwogICAgICAgIHRydWUsCiAgICAgICAgImJvb2xlYW4iLAogICAgICAgICJBIGZsYWcgbWVhbnMgdGVzdCBtb2RlIgogICAgXSwKICAgICJUSVRMRSI6IFsKICAgICAgICAiTWF0dGVySlNTYW1wbGUiLAogICAgICAgICJzdHJpbmciLAogICAgICAgICJBIG5hbWUgb2YgdGhpcyBhcHAiCiAgICBdCn0KCgoKCgoK","options":{"isTrashed":false},"credits":[]},{"name":".palette","type":"application/octet-stream","lastModified":1492756455000,"composed":"ewogICAgImNhbnZhc0NvbG9yIjogInJnYmEoMjU1LCAyNTUsIDI1NSwgMSkiLAogICAgInByaW1hcnkxQ29sb3IiOiAicmdiYSgxNzEsIDE4NCwgMTk1LCAxKSIsCiAgICAiYWNjZW50MUNvbG9yIjogIiM3QkRDQjUiLAogICAgImJhY2tncm91bmRDb2xvciI6ICJyZ2JhKDE2NywgMjU1LCAyMzUsIDAuMTUpIgp9","options":{"isTrashed":false},"credits":[]},{"name":".provider","type":"application/octet-stream","lastModified":1492756455000,"composed":"ewogICAgInB1Ymxpc2hVcmwiOiAiaHR0cHM6Ly9oYWNraXQtZmVlbGVzLmF6dXJld2Vic2l0ZXMubmV0L2RlcGxveW1lbnRzLzkzIgp9","options":{"isTrashed":false},"credits":[]},{"name":"README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg6Ljg47jga7li5XjgY3jgrfjg5/jg6Xjg6zjg7zjgr8g8J+agvCfkqgKCgojIyDkvZXjgYzjgafjgY3jgovjga7vvJ8KCuepuumWk+OBq+eJqeOCkuOBiuOBhOOBn+OCiuOAgeWLleOBi+OBl+OBn+OCiuOAgeOBtuOBpOOBkeOBn+OCiuOAgeOBj+OBo+OBpOOBkeOBn+OCiuKApuKApiAgCuOBquOBqeOBquOBqeOAgeiJsuOCk+OBquOBk+OBqOOCkuOCq+ODs+OCv+ODs+OBq+ippuOBmeOBk+OBqOOBjOOBp+OBjeOBvuOBmQoKCiMjIOS9v+OBo+OBpuOBv+OCiOOBhgoK5Y+z44Gu44Oh44OL44Ol44O844GL44KJ44CB44G/44Gm44G/44Gf44GE44KC44Gu44KS44Kv44Oq44OD44Kv44GX44Gm44GtICAK6Kmm44GX44Gm44G/44Gf44GE44GT44Go44GM44GC44KM44Gw44CB44Gp44KT44Gp44KTICoq5pS56YCgKiog44GX44Gm44G/44KI44GG77yBCgotIC0gLQojIyDlhYjnlJ/jg7vjg6Hjg7Pjgr/jg7zjga7mlrnjgbgKCuOBk+OBruOCt+ODn+ODpeODrOODvOOCv+OBryBMaWFtIEJydW1taXR0IOawj+OBjOmWi+eZuuOBl+OBnyAgCk1hdHRlci5qcyDjgajjgYTjgYbjg6njgqTjg5bjg6njg6rjgafli5XjgYTjgabjgYTjgb7jgZkKPiDjg57jgr/jg7wg44OJ44OD44OIIOOCuOOCp+ODvOOCqOOCuSAgCk1hdHRlci5qcwoKIyMjIOOCguOBo+OBqOips+OBl+OBj+efpeOCiuOBn+OBhOS6uuOBrwoKLSBb5YWs5byP44OJ44Kt44Ol44Oh44Oz44OIXShodHRwOi8vYnJtLmlvL21hdHRlci1qcy9kb2NzLynjgIAqKuiLseiqnuOBruOBvyoqICAKTWF0dGVyLmpzIOOBruWFrOW8j+ODieOCreODpeODoeODs+ODiOOAguWFqOmDqOi8ieOBo+OBpuOBhOOCiwoKLSAhW+ODrOODs+ODgOODqeOBruOCquODl+OCt+ODp+ODs10ocmVuZGVyLmpzKeOAgCoq5LiK57Sa6ICF5ZCR44GRKiogIArlhajjgabjga7jgrXjg7Pjg5fjg6vjga7opovjgZ/nm67jgavplqLjgZnjgovntLDjgYvjgYToqK3lrprjgpLooYzjgYYKCi0gIVvjgqjjg7Pjgrjjg7Pjga7jgqrjg5fjgrfjg6fjg7NdKGVuZ2luZS5qcynjgIAqKuS4iue0muiAheWQkeOBkSoqICAK5YWo44Gm44Gu44K144Oz44OX44Or44Gu6KiI566X5Yem55CG44Gr6Zai44GZ44KL57Sw44GL44GE6Kit5a6a44KS6KGM44GGCgotICFbTWF0dGVyLmpzXShtYXR0ZXIuanMp44CAKirotoXkuIrntJrogIXlkJHjgZEqKiAgCk1hdHRlci5qcyDjga7mnKzkvZPjgILjg5Djg7zjgrjjg6fjg7MgMC4xMS4xLWFscGhhIOOBruOCquODvOODq+OCpOODs+ODr+ODsyDjg5Pjg6vjg4kuICAKYGRlY29tcGAg44Gu5L6d5a2Y6Kej5rG644Gu44G/44CB44OT44Or44OJ5b6M44Gr6L+96KiY44GX44Gm44GE44G+44GZCgoKIyMg5Y6f5L2c6ICFCgpbTGlhbSBCcnVtbWl0dF0oaHR0cDovL2JybS5pby8pCgpbTWF0dGVyLmpzIOOBriBHaXRIdWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWFicnUvbWF0dGVyLWpzKQoK","options":{"isTrashed":false},"credits":[]},{"name":"airFriction/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDnqbrmsJfjgabjgYTjgZPjgYYKPiDjgY/jgYbjgY0t44Gm44GE44GT44GGICAK56m65rCX5oq15oqXCgrjgqrjg5bjgrjjgqfjgq/jg4jjga4gW+epuuawl+OBpuOBhOOBk+OBhl0oaHR0cHM6Ly9qYS53aWtpcGVkaWEub3JnL3dpa2kvJUU2JThBJTk3JUU1JThBJTlCKQrjgpLlpInjgYjjgabjgb/jgZ8KClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoKIyMg5pS56YCg44GX44Gm44G/44KLCgohW+OBk+OBk+OBi+OCieWni+OCgeOCi10oYWlyRnJpY3Rpb24vbWFpbi5qcykKCgp8fCDmhI/lkbMgfCDjga/jgpPjgYQgCi0tLSB8IC0tLSB8IC0tLSAKZnJpY3Rpb25BaXIgfCDjgabjgYTjgZPjgYbjga7lpKfjgY3jgZUgfCAwIH4gMS4wCgrjgoLjgaPjgajmlLnpgKAKIVvoqK3lrppdKGFpckZyaWN0aW9uL3NldHRpbmcuanMpCiFb44GL44G544O744KG44GLXShhaXJGcmljdGlvbi9zdGFnZS5qcykKCi0gLSAtCgojIyDlv5znlKjkvosKClvjg6Ljg7PjgrHjg7zjg7NdKHdyZWNraW5nQmFsbC9pbmRleC5odG1sKQoK","options":{"isTrashed":false},"credits":[]},{"name":"airFriction/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7nqbrmsJfmirXmipc8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJhaXJGcmljdGlvbi9tYWluLmpzIj48L3NjcmlwdD4KPC9oZWFkPgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"airFriction/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nLmpzJzsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g5bem44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDIwMCwgMTAwLCA2MCwgNjAsIHsKCQkvLyDnqbrmsJfjgabjgYTjgZPjgYYKCQlmcmljdGlvbkFpcjogMC4wMDEsCgkJCgl9KSwKCS8vIOS4reOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDEwMCwgNjAsIDYwLCB7CgkJLy8g56m65rCX44Gm44GE44GT44GGCgkJZnJpY3Rpb25BaXI6IDAuMDUsCgkJCgl9KSwKCS8vIOWPs+OBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg2MDAsIDEwMCwgNjAsIDYwLCB7CgkJLy8g56m65rCX44Gm44GE44GT44GGCgkJZnJpY3Rpb25BaXI6IDAuMSwKCQkKCX0pLAoJCl0pOwoKCmltcG9ydCAnLi9zdGFnZS5qcyc7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"airFriction/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVdvcmxkLAoJUnVubmVyLAoJTW91c2UsCglNb3VzZUNvbnN0cmFpbnQsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7CnJlbmRlci5vcHRpb25zLnNob3dWZWxvY2l0eSA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdhaXJGcmljdGlvbi9SRUFETUUubWQnKTsKCgpleHBvcnQgewoJZW5naW5lLAoJd29ybGQsCglyZW5kZXIsCn07Cg==","options":{"isTrashed":false},"credits":[]},{"name":"airFriction/settings.js","type":"application/javascript","lastModified":1492756455000,"composed":"CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK","options":{"isTrashed":false},"credits":[]},{"name":"airFriction/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOWjgQpXb3JsZC5hZGQod29ybGQsIFsKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KQpdKTsK","options":{"isTrashed":false},"credits":[]},{"name":"angle/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgYvjgZ/jgoDjgY0KCuOCquODluOCuOOCp+OCr+ODiOOBriAq44GL44Gf44KA44GNKiDjgpLlpInjgYjjgabjgb/jgZ8KClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoKIyMg5pS56YCg44GX44Gm44G/44KLCgohW+OBk+OBk+OBi+OCieWni+OCgeOCi10oYW5nbGUvbWFpbi5qcykKCgp8fCDmhI/lkbMgfCDjga/jgpPjgYQgCi0tLSB8IC0tLSB8IC0tLSAKYW5nbGUgfCDjgqrjg5bjgrjjgqfjgq/jg4jjga4gKirjg6njgrjjgqLjg7Pop5IqKiB8IOOBquOBlwoKIyMjIOODqeOCuOOCouODs+inkuOBruihqAoK44KI44GP5L2/44GG6KeS5bqmIHwg44Op44K444Ki44Oz6KeSCi0tLSAgfCAtLS0gCjDCsCAgIHwgMCAKNDXCsCAgfCAwLjc4NQo5MMKwICB8IDEuNTcKMTM1wrAgfCAyLjM2CjE4MMKwIHwgMy4xNAoyMjXCsCB8IDMuOTMKMjcwwrAgfCA0LjcxCjMxNcKwIHwgNS41MAozNjDCsCB8IDYuMjgKPiDlsJHmlbDku6XkuIvjga8gKirnhKHpmZDjgasqKiDntprjgY3jgb7jgZkKClvjg6njgrjjgqLjg7PjgaPjgabvvJ9dKGh0dHBzOi8vamEud2lraXBlZGlhLm9yZy93aWtpLyVFMyU4MyVBOSVFMyU4MiVCOCVFMyU4MiVBMiVFMyU4MyVCMykKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0oYW5nbGUvc2V0dGluZy5qcykKIVvjgYvjgbnjg7vjgobjgYtdKGFuZ2xlL3N0YWdlLmpzKQoKLSAtIC0KCiMjIOW/nOeUqOS+iwo=","options":{"isTrashed":false},"credits":[]},{"name":"angle/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgYvjgZ/jgoDjgY08L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJhbmdsZS9tYWluLmpzIj48L3NjcmlwdD4KPC9oZWFkPgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"angle/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nLmpzJzsKCldvcmxkLmFkZCh3b3JsZCwgWwoJCgkvLyDlt6bjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoMjAwLCA1MDAsIDEwLCA1MDAsIHsKCQkvLyDjgYvjgZ/jgoDjgY0KCQlhbmdsZTogMC4yLAoJCQoJfSksCgkKCS8vIOWPs+OBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSgzNTAsIDQ1MCwgMTAsIDcwMCwgewoJCS8vIOOBi+OBn+OCgOOBjQoJCWFuZ2xlOiAyLjM2LAoJCQoJfSksCgkKXSk7CgoKaW1wb3J0ICcuL3N0YWdlLmpzJzsK","options":{"isTrashed":false},"credits":[]},{"name":"angle/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVdvcmxkLAoJUnVubmVyLAoJTW91c2UsCglNb3VzZUNvbnN0cmFpbnQsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7CnJlbmRlci5vcHRpb25zLnNob3dBbmdsZUluZGljYXRvciA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdhbmdsZS9SRUFETUUubWQnKTsKCgpleHBvcnQgewoJZW5naW5lLAoJd29ybGQsCglyZW5kZXIsCn07Cg==","options":{"isTrashed":false},"credits":[]},{"name":"angle/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOWjgQpXb3JsZC5hZGQod29ybGQsIFsKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KQpdKTsK","options":{"isTrashed":false},"credits":[]},{"name":"attractors/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDkuIfmnInlvJXlipsKCgros6rph4/jga7jgYLjgovkuJbnlYzjgafjga/jgIHjgZnjgbnjgabjga7jgqrjg5bjgrjjgqfjgq/jg4jjga/kupLjgYTjgavlvLHjgYTlipvjgafkupLjgYTjgavlvJXjgY3ku5jjgZHlkIjjgaPjgabjgYTjgovjgoggIArjgZPjga7lipvjgpIgKirkuIfmnInlvJXlipvvvIjjgbDjgpPjgobjgYbjgYTjgpPjgorjgofjgY/vvIkqKiDjgajlkbzjgbbjgpPjgaDjgIIgIArjg4vjg6Xjg7zjg4jjg7PjgYznmbropovjgZfjgZ/jgajjgZfjgabmnInlkI3jgaDjgojjga3vvIEgIArjgaHjgarjgb/jgavjgIHph43lipvjgoLkuIfmnInlvJXlipvjga7jgbLjgajjgaTjgafjgIHlnLDnkIPjgavlvJXjgY3ku5jjgZHjgonjgozjgabjgYTjgovlipvjga7jgZPjgajjgaDjgoggIAoK44Gd44Gu5LiH5pyJ5byV5Yqb44KS44CB44GG44KT44Go5by344GP44GX44Gm44G/44Gf44KJ44CB44GT44KT44Gq5oSf44GY44Gr44Gq44KL44G/44Gf44GE44Gg44KICgoKIyMg44OR44Op44Oh44O844K/CuODkeODqeODoeODvOOCvyB8IOaEj+WRsyB8IOWNmOS9jSB8IOacgOWwjyB8IOacgOWkpyAKLS0tIHwgLS0tIHwgLS0tIHwgLS0tIHwgLS0tCkcgfCDkuIfmnInlvJXlipvlrprmlbAgfCAqbV4zIGtnXi0xIHNeLTIqIHwgMCB8IEluZmluaXR5IAptYXNzIHwg6LOq6YePIHwgKmtnKiB8IDAgfCBJbmZpbml0eSAKZnJpY3Rpb25BaXIgfCDmirXmipfjga7lpKfjgY3jgZUgfCDlgI0gfCAwIHwgMS4wIAppc1N0YXRpYyB8IOmdmeatouOBmeOCi+OBi+OBqeOBhuOBiyB8IOODleODqeOCsCB8IGZhbHNlIHwgdHJ1ZSAKCgojIyAhW+aUuemAoOOBmeOCi10oYXR0cmFjdG9ycy9tYWluLmpzKQoKClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoK","options":{"isTrashed":false},"credits":[]},{"name":"attractors/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7kuIfmnInlvJXlips8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJhdHRyYWN0b3JzL21haW4uanMiPjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5Pgo8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"attractors/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IE1hdHRlciwgewoJRW5naW5lLAoJUmVuZGVyLAoJUnVubmVyLAoJQm9keSwKCUNvbW1vbiwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCglCb2RpZXMsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCAncGx1Z2lucy9hdHRyYWN0b3JzUGx1Z2luLmpzJzsKaW1wb3J0ICdwbHVnaW5zL2dyYXZpdHlQbHVnaW4uanMnOwppbXBvcnQgJ3BsdWdpbnMvd3JhcFBsdWdpbi5qcyc7CgpNYXR0ZXIudXNlKAoJJ21hdHRlci1ncmF2aXR5JywKCSdtYXR0ZXItd3JhcCcKKTsKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKZW5naW5lLnRpbWluZy50aW1lU2NhbGUgPSAxLjU7CgkKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CndvcmxkLmdyYXZpdHkuc2NhbGUgPSAwOwoJCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKLy8gY3JlYXRlIHJ1bm5lcgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoJCgpjb25zdCBHID0gMC4wMDE7CmNvbnN0IHNwZWVkID0gNTsKCgkKZm9yIChjb25zdCBfIG9mIFsuLi5BcnJheSgxNTApXSkgewoJY29uc3QgcmFkaXVzID0gQ29tbW9uLnJhbmRvbSg2LCAxMCk7CgoJY29uc3QgYm9keSA9IEJvZGllcy5jaXJjbGUoCgkJQ29tbW9uLnJhbmRvbSgxMCwgcmVuZGVyLm9wdGlvbnMud2lkdGgpLAoJCUNvbW1vbi5yYW5kb20oMTAsIHJlbmRlci5vcHRpb25zLmhlaWdodCksCgkJcmFkaXVzLCB7CgkJCW1hc3M6IENvbW1vbi5yYW5kb20oMTAsIDE1KSwKCQkJZnJpY3Rpb25BaXI6IDAsCgkJCXBsdWdpbjogewoJCQkJZ3Jhdml0eTogRywKCQkJCXdyYXA6IHsKCQkJCQltaW46IHsKCQkJCQkJeDogMCwKCQkJCQkJeTogMAoJCQkJCX0sCgkJCQkJbWF4OiB7CgkJCQkJCXg6IHJlbmRlci5vcHRpb25zLndpZHRoLAoJCQkJCQl5OiByZW5kZXIub3B0aW9ucy5oZWlnaHQKCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgkpOwoKCUJvZHkuc2V0VmVsb2NpdHkoYm9keSwgewoJCXg6IENvbW1vbi5yYW5kb20oLXNwZWVkLCBzcGVlZCksCgkJeTogQ29tbW9uLnJhbmRvbSgtc3BlZWQsIHNwZWVkKQoJfSk7CgoJV29ybGQuYWRkKHdvcmxkLCBib2R5KTsKfQoKLy8gYWRkIG1vdXNlIGNvbnRyb2wKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgoJCmZlZWxlcy5vcGVuUmVhZG1lKCdhdHRyYWN0b3JzL1JFQURNRS5tZCcpOwo=","options":{"isTrashed":false},"credits":[]},{"name":"avalanche/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDlnYLpgZMKCuWCvuOBhOOBn+mBk+OCkuS9nOOCi+OBq+OBryBgYW5nbGVgIOOBruS4reOBq+inkuW6puOCkuWFpeOCjOOCi+OCiCAgCuOBk+OBk+OBp+OBryAqKuODqeOCuOOCouODsyoqIOOBqOWRvOOBsOOCjOOCi+OAgeaVsOWtpuOBp+OCiOOBj+S9v+OCj+OCjOOCi+inkuW6puOCkuS9v+OBo+OBpuOBv+OCiOOBhgoK44G144Gk44GG6KeS5bqm44GvIGAwYCDjgYvjgonlp4vjgb7jgaPjgabjgIHlj43lr77lkJHjgY3jgYwgYDE4MGAg44Gg44KI44Gt77yfICAK44Gd44KM44KS44CBIGAwYCDjgYvjgonlp4vjgoHjgablj43lr77jgpIgYM+AYCwg44Gk44G+44KKIGAzLjE04oCmYCDjgavjgZfjgZ/jga7jgYzjgIEgIArjg6njgrjjgqLjg7Pop5LjgajlkbzjgbDjgozjgovop5LluqbjgarjgpPjgaAKCgojIyDjg5Hjg6njg6Hjg7zjgr8K44OR44Op44Oh44O844K/IHwg5oSP5ZGzIHwg5Y2Y5L2NIHwg5pyA5bCPIHwg5pyA5aSnIAotLS0gfCAtLS0gfCAtLS0gfCAtLS0gfCAtLS0KZnJpY3Rpb24gfCDjgb7jgZXjgaTkv4LmlbAgfCDlgI0gfCAwIHwgMQpyZXN0aXR1dGlvbiB8IOWPjeeZuuS/guaVsCB8IOWAjSB8IDAgfCAxCmRlbnNpdHkgfCDlr4bluqYgfCAqa2cgbV4tMiogfCAwIHwgSW5maW5pdHkKYW5nbGUgfCDop5LluqYgfCAqcmFkKiB8IC1NYXRoLlBJIHwgTWF0aC5QSQppc1N0YXRpYyB8IOmdmeatouOBmeOCi+OBi+OBqeOBhuOBiyB8IOODleODqeOCsCB8IGZhbHNlIHwgdHJ1ZSAKCgojIyAhW+aUuemAoOOBmeOCi10oYXZhbGFuY2hlL21haW4uanMpCgoKIyMg5aSJ5o+b6KGoCgrjgbXjgaTjgYbjga7op5LluqYgfCDjg6njgrjjgqLjg7Pop5IKLS0tIHwgLS0tIAowIHwgMCAKNDUgfCBNYXRoLlBJICogMC4yNQo5MCB8IE1hdGguUEkgKiAwLjUKMTgwIHwgTWF0aC5QSQoyNzAgfCBNYXRoLlBJICogMS41CjM2MCB8IE1hdGguUEkgKiAyCi0xODAgfCAtTWF0aC5QSQoKClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoK","options":{"isTrashed":false},"credits":[]},{"name":"avalanche/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7lnYLpgZM8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJhdmFsYW5jaGUvbWFpbi5qcyI+PC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+CjwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"avalanche/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCXVzZSwKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZSwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgJ3BsdWdpbnMvd3JhcFBsdWdpbic7Cgp1c2UoCgknbWF0dGVyLXdyYXAnCik7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgovLyDou6LjgYzjgaPjgabjgYTjgovjg5zjg7zjg6sKY29uc3Qgc3RhY2sgPSBDb21wb3NpdGVzLnN0YWNrKDIwLCAyMCwgMjAsIDUsIDAsIDAsICh4LCB5KeOAgCA9PiB7CglyZXR1cm4gQm9kaWVzLmNpcmNsZSh4LCB5LCBDb21tb24ucmFuZG9tKDEwLCAyMCksIHsKCQlmcmljdGlvbjogMC4wMDAwMSwKCQlyZXN0aXR1dGlvbjogMC41LAoJCWRlbnNpdHk6IDAuMDAxCgl9KTsKfSk7CgpXb3JsZC5hZGQod29ybGQsIHN0YWNrKTsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g5Z2C6YGTCglCb2RpZXMucmVjdGFuZ2xlKDIwMCwgMTUwLCA3MDAsIDIwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgkJYW5nbGU6IE1hdGguUEkgKiAwLjA2Cgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoNTAwLCAzNTAsIDcwMCwgMjAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCQlhbmdsZTogLU1hdGguUEkgKiAwLjA2Cgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMzQwLCA1ODAsIDcwMCwgMjAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCQlhbmdsZTogTWF0aC5QSSAqIDAuMDQKCX0pCl0pOwoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgovLyDnlLvpnaLnq6/jgYvjgonlj43lr77jga7nq6/jgbjnp7vli5XjgZnjgovjg5fjg6njgrDjgqTjg7Pjga7oqK3lrpoKZm9yIChjb25zdCBib2R5IG9mIHN0YWNrLmJvZGllcykgewoJYm9keS5wbHVnaW4gPSBib2R5LnBsdWdpbiB8fCB7fTsKCWJvZHkucGx1Z2luLndyYXAgPSB7CgkJbWluOiB7CgkJCXg6IHJlbmRlci5ib3VuZHMubWluLngsCgkJCXk6IHJlbmRlci5ib3VuZHMubWluLnkKCQl9LAoJCW1heDogewoJCQl4OiByZW5kZXIuYm91bmRzLm1heC54LAoJCQl5OiByZW5kZXIuYm91bmRzLm1heC55CgkJfQoJfTsKfQoKCmZlZWxlcy5vcGVuUmVhZG1lKCdhdmFsYW5jaGUvUkVBRE1FLm1kJyk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"ballPool/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg5zjg7zjg6vjg5fjg7zjg6sKCmBtYXR0ZXItd3JhcGAg44OX44Op44Kw44Kk44Oz44KS5L2/44GG44Go44CB55S76Z2i56uv44GL44KJ5Ye644Gf44Kq44OW44K444Kn44Kv44OI44GMICAK5Y+N5a++44Gu56uv44GL44KJ5Ye644Gm44GP44KL44KI44GG44Gr44Gn44GN44KL44KIICAKCiMjIOODkeODqeODoeODvOOCvwrjg5Hjg6njg6Hjg7zjgr8gfCDmhI/lkbMgfCDljZjkvY0gfCDmnIDlsI8gfCDmnIDlpKcgCi0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8IC0tLQpyZXN0aXR1dGlvbiB8IOWPjeeZuuS/guaVsCB8IOWAjSB8IDAgfCAxCmZyaWN0aW9uIHwg44G+44GV44Gk5L+C5pWwIHwg5YCNIHwgMCB8IDEKaXNTdGF0aWMgfCDpnZnmraLjgZnjgovjgYvjganjgYbjgYsgfCDjg5Xjg6njgrAgfCBmYWxzZSB8IHRydWUgCgojIyAhW+aUuemAoOOBmeOCi10oYmFsbFBvb2wvbWFpbi5qcykKCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoKCg==","options":{"isTrashed":false},"credits":[]},{"name":"ballPool/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jg5zjg7zjg6vjg5fjg7zjg6s8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJiYWxsUG9vbC9tYWluLmpzIj48L3NjcmlwdD4KPC9oZWFkPgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"ballPool/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCXVzZSwKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZSwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgJ3BsdWdpbnMvd3JhcFBsdWdpbic7Cgp1c2UoCgknbWF0dGVyLXdyYXAnCik7CgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpSZW5kZXIucnVuKHJlbmRlcik7CgovLyBjcmVhdGUgcnVubmVyCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgovLyDluooKV29ybGQuYWRkKHdvcmxkLCBbCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCAxMjAwLCA1MC41LCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pCl0pOwoKLy8g5Li444Gf44GhCmNvbnN0IHN0YWNrID0gQ29tcG9zaXRlcy5zdGFjaygxMDAsIDAsIDEwLCA4LCAxMCwgMTAsICh4LCB5KSA9PiB7CglyZXR1cm4gQm9kaWVzLmNpcmNsZSh4LCB5LCBDb21tb24ucmFuZG9tKDE1LCAzMCksIHsKCQlyZXN0aXR1dGlvbjogMC42LAoJCWZyaWN0aW9uOiAwLjEKCX0pOwp9KTsKCldvcmxkLmFkZCh3b3JsZCwgWwoJc3RhY2ssCgkvLyAJ5LiJ6KeS5b2iCglCb2RpZXMucG9seWdvbigyMDAsIDQ2MCwgMywgNjApLAoJLy8gCeS6lOinkuW9ogoJQm9kaWVzLnBvbHlnb24oNDAwLCA0NjAsIDUsIDYwKSwKCS8vIAnmraPmlrnlvaIKCUJvZGllcy5yZWN0YW5nbGUoNjAwLCA0NjAsIDgwLCA4MCkKXSk7CgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgoKLy8g55S76Z2i56uv44GL44KJ5Y+N5a++44Gu56uv44Gr56e75YuV44GZ44KL44OX44Op44Kw44Kk44Oz44Gu6Kit5a6aCmNvbnN0IGFsbEJvZGllcyA9IENvbXBvc2l0ZS5hbGxCb2RpZXMod29ybGQpOwoKZm9yIChjb25zdCBib2R5IG9mIGFsbEJvZGllcykgewoJYm9keS5wbHVnaW4gPSB7CgkJd3JhcDogewoJCQltaW46IHsKCQkJCXg6IHJlbmRlci5ib3VuZHMubWluLnggLSAxMDAsCgkJCQl5OiByZW5kZXIuYm91bmRzLm1pbi55CgkJCX0sCgkJCW1heDogewoJCQkJeDogcmVuZGVyLmJvdW5kcy5tYXgueCArIDEwMCwKCQkJCXk6IHJlbmRlci5ib3VuZHMubWF4LnkKCQkJfQoJCX0KCX07Cn0KCgpmZWVsZXMub3BlblJlYWRtZSgnYmFsbFBvb2wvUkVBRE1FLm1kJyk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"bridge/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg5bjg6rjg4PjgrgKICAK5qmL5L2c44Gj44Gm44G/44GfCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoKCiMjIOOBqeOBhuOChOOBo+OBpuS9nOOBo+OBpuOCi+OBru+8nwoK44GT44KM44KJ44KS57WE44G/5ZCI44KP44Gb44Gm44GE44KL44KIICAKPiDjgq/jg6rjg4Pjgq/jgZnjgovjgajjgrXjg7Pjg5fjg6vjgavnp7vli5XjgZfjgb7jgZkKCuapi+OCkuS9nOOCi+OBq+OBr+KAplvjg5Djg41dKGNvbnN0cmFpbnQvaW5kZXguaHRtbCkg44GoIFvjg63jg7zjg5ddKGNoYWlucy9pbmRleC5odG1sKSAgCgojIyDmlLnpgKDjgavmjJHmiKbjgZfjgabjgb/jgosKCiFb5qmL44KS5L2c44KLXShicmlkZ2UvbWFpbi5qcykgIAohW+OCueODhuODvOOCuF0oYnJpZGdlL3N0YWdlLmpzKSAgCiFb6Kit5a6aXShicmlkZ2Uvc2V0dGluZy5qcykKCg==","options":{"isTrashed":false},"credits":[]},{"name":"bridge/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jg5bjg6rjg4Pjgrg8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJicmlkZ2UvbWFpbi5qcyI+PC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+CjwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"bridge/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUJvZHksCglDb21wb3NpdGVzLAoJQ29uc3RyYWludCwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgovLyDmqYvjga7kuK3jga7jgqrjg5bjgrjjgqfjgq/jg4jlkIzlo6vjgYzjgbbjgaTjgYvjgonjgarjgYTjgojjgYbjgavjgZnjgovjgZ/jgoHjga7jgrDjg6vjg7zjg5cKY29uc3QgZ3JvdXAxID0gQm9keS5uZXh0R3JvdXAodHJ1ZSk7CgovLyDmqYvjga7jgqrjg5bjgrjjgqfjgq/jg4jjga7jgrnjgr/jg4Pjgq8KY29uc3QgYnJpZGdlID0gQ29tcG9zaXRlcy5zdGFjaygxNTAsIDMwMCwgOSwgMSwgMTAsIDEwLCAoeCwgeSkgPT4gewoJcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgNTAsIDIwLCB7CgkJY29sbGlzaW9uRmlsdGVyOiB7CgkJCWdyb3VwOiBncm91cDEsCgkJfSwKCQkKCX0pOwp9KTsKCi8vIOapi+OBruOCquODluOCuOOCp+OCr+ODiOOCkuODgeOCp+ODvOODs+OBp+OBpOOBquOBkApDb21wb3NpdGVzLmNoYWluKGJyaWRnZSwgMC41LCAwLCAtMC41LCAwLCB7CgkvLyDjg5Djg43jga7lvLfjgZUKCXN0aWZmbmVzczogMC45LAoJCn0pOwoKCgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIOapi+OBruOCueOCv+ODg+OCrwoJYnJpZGdlLAoJCgkvLyAJ5bem5YG044KS5Zu65a6a44GZ44KLCglDb25zdHJhaW50LmNyZWF0ZSh7CgkJLy8g5Zu65a6a44GZ44KL54K5CgkJcG9pbnRBOiB7CgkJCXg6IDE0MCwKCQkJeTogMzAwCgkJfSwKCQkvLyDmqYvjga7kuIDnlarlt6bjga7jgqrjg5bjgrjjgqfjgq/jg4gKCQlib2R5QjogYnJpZGdlLmJvZGllc1swXSwKCQkvLyDjgqrjg5bjgrjjgqfjgq/jg4jjga7lt6bnq6/jgpLlm7rlrpoKCQlwb2ludEI6IHsKCQkJeDogLTI1LAoJCQl5OiAwCgkJfSwKCQkKCX0pLAoJCgkvLyAJ5Y+z5YG044KS5Zu65a6a44GZ44KLCglDb25zdHJhaW50LmNyZWF0ZSh7CgkJLy8g5Zu65a6a44GZ44KL54K5CgkJcG9pbnRBOiB7CgkJCXg6IDY2MCwKCQkJeTogMzAwCgkJfSwKCQkvLyDmqYvjga7kuIDnlarlj7Pjga7jgqrjg5bjgrjjgqfjgq/jg4gKCQlib2R5QjogYnJpZGdlLmJvZGllc1s4XSwKCQkvLyDjgqrjg5bjgrjjgqfjgq/jg4jjga7lj7Pnq6/jgpLlm7rlrpoKCQlwb2ludEI6IHsKCQkJeDogMjUsCgkJCXk6IDAKCQl9LAoJCQoJfSksCgkKXSk7CgoKCmltcG9ydCAnLi9zdGFnZSc7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"bridge/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpSZW5kZXIucnVuKHJlbmRlcik7CnJlbmRlci5vcHRpb25zLmJhY2tncm91bmQgPSAnI2FhYWFhYSc7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnYnJpZGdlL1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"bridge/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglXb3JsZCwKCUJvZGllcywKCUNvbW1vbiwKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgkvLyAJ5bem44Gu5aSn44GN44Gq5Zub6KeSCglCb2RpZXMucmVjdGFuZ2xlKDgwLCA0NDAsIDEyMCwgMjgwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCgkvLyAJ5Y+z44Gu5aSn44GN44Gq5Zub6KeSCglCb2RpZXMucmVjdGFuZ2xlKDcyMCwgNDQwLCAxMjAsIDI4MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCgoJLy8g5LiK44Gr5LmX44Gj44Gm44GE44KL44Kq44OW44K444Kn44Kv44OI44Gu44K544K/44OD44KvCglDb21wb3NpdGVzLnN0YWNrKDIwMCwgNDAsIDYsIDMsIDAsIDAsICh4LCB5KSA9PiB7CgkJcmV0dXJuIEJvZGllcy5wb2x5Z29uKHgsIHksIE1hdGgucm91bmQoQ29tbW9uLnJhbmRvbSgxLCA4KSksIENvbW1vbi5yYW5kb20oMjAsIDQwKSk7Cgl9KSwKCl0pOw==","options":{"isTrashed":false},"credits":[]},{"name":"broadphase/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg5bjg63jg7zjg4njg5Xjgqfjg7zjgroKCgpNYXR0ZXIuanMg44Gr44Gv44CB6auY6YCf5YyW44Gu44Gf44KB44GrICoq44OW44Ot44O844OJ44OV44Kn44O844K6Kiog44GM5Yip55So44GV44KM44Gm44GE44KL44KT44GgICAK44Gd44KM44KS55uu44Gn6KaL44GI44KL44KI44GG44Gr44GX44Gf44Gu44GM44CB6buE6Imy44GE5p6g44Gg44KICgojIyDjg5bjg63jg7zjg4njg5Xjgqfjg7zjgrrjgaPjgabvvJ8KCuOBguOCi+OCquODluOCuOOCp+OCr+ODiOOBqOWIpeOBruOCquODluOCuOOCp+OCr+ODiOOBjOmHjeOBquOBo+OBpuOBhOOCi+OBi++8iOOBtuOBpOOBi+OBo+OBn+OBi++8ieOBqOOBhOOBhuOBruOBr+OAgSAgCuWLleOBjeOCkuioiOeul+OBmeOCi+S4iuOBp+OAgeOBi+OBi+OBm+OBquOBhOaDheWgseOBoOOCiOOBrQoK44Gn44KC44CB55S76Z2i5LiK44Gr44GC44KL44Kq44OW44K444Kn44Kv44OI44KS44Gy44Go44Gk44Gy44Go44Gk6KiI566X44GX44Gm44GE44KL44Go44CBICAK44Kq44OW44K444Kn44Kv44OI44GMIDEwIOWAi+OBquOCieOAgeOBiuOCiOOBnSAxMDAg5ZueLiAgCuOCquODluOCuOOCp+OCr+ODiOOBjCAxMDAg5YCL44Gq44KJ44CB44GK44KI44GdIDEwMDAwIOWbni4gIArjgqrjg5bjgrjjgqfjgq/jg4jjgYwgMTAwMCDlgIvjgarjgonjgIHjgYrjgojjgZ0gMTAwMDAwMCDlm54uLi4gIArjgajjgIHjgajjgaPjgabjgoLjgZ/jgY/jgZXjgpPjga7jg5Hjgr/jg7zjg7PjgpLoqIjnrpfjgZnjgovlv4XopoHjgYzjgYLjgovjgpPjgaAKCuOBneOBk+OBp+OAgSAqKue1tuWvvuOBq+OBtuOBpOOBi+OCieOBquOBhOOBj+OCieOBhOOBq+mbouOCjOOBpuOBhOOCi+OCquODluOCuOOCp+OCr+ODiOWQjOWjq+OBr+OAgeioiOeul+OCkuecgeeVpeOBmeOCiyoqIOOCiCAgCuacrOadpeOBruOCquODluOCuOOCp+OCr+ODiOOBr+WkmuinkuW9ou+8iOS4ieinkuOAgeWbm+inkuOAgeS6lOinkuKApuKApu+8ieOBoOOBkeOBqeOAgSAgCuOBneOCjOOCieOCkiAqKuOBiuOBiuOBluOBo+OBseOBquW9oioqIO+8iOmVt+aWueW9ouOBq+OBmeOCi+OBk+OBqOOBjOWkmuOBhO+8ieOBq+OBl+OBpuOBi+OCieOAgeioiOeul+OBmeOCi+OCk+OBoCAgCuOBk+OBruW9ouOBr+W/heOBmiAqKuWFg+OBruW9ouOCiOOCiuWkp+OBjeOBj+OBquOBj+OBoeOCg+OBhOOBkeOBquOBhCoqIOOCiOOAgiAgCuODm+ODs+ODiOOBr+mHjeOBquOBo+OBpuOCi+OBruOBq+OAgeW9ouOBjOWkieOCj+OBo+OBn+OBm+OBhOOBp+mbouOCjOOBn+OCieOBhOOBkeOBquOBhOOBi+OCieOBrQo+IOOBk+OBrumDqOWIhuOBruioiOeul+OCkuOAjOODluODreODvOODieODleOCp+ODvOOCuuOAjeOBqOWRvOOBtuOCiPCfjJ8KCuODluODreODvOODieODleOCp+ODvOOCuuOBjOe1guOCj+OBo+OBn+OCieOAgeOAjOmHjeOBquOBo+OBpuOCi+OBi+OCguefpeOCjOOBquOBhOOAjeOCguOBruOBoOOBkeOCkumbhuOCgeOBpuOAgSAgCuOBoeOCg+OCk+OBqOOBl+OBn+ioiOeul+OCkuihjOOBhuOCiAo+IOOBk+OBrumDqOWIhuOBruioiOeul+OCkuOAjOODiuODreODvOODleOCp+ODvOOCuuOAjeOBqOWRvOOBtuOCiPCfjIoKCgojIyAhW+aUuemAoOOBmeOCi10oYnJvYWRwaGFzZS9tYWluLmpzKQoKCiMjIOODkeODqeODoeODvOOCvwrjg5Hjg6njg6Hjg7zjgr8gfCDmhI/lkbMgfCDljZjkvY0gfCDmnIDlsI8gfCDmnIDlpKcgCi0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8IC0tLQppc1N0YXRpYyB8IOmdmeatouOBmeOCi+OBi+OBqeOBhuOBiyB8IOODleODqeOCsCB8IGZhbHNlIHwgdHJ1ZSAKCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoK","options":{"isTrashed":false},"credits":[]},{"name":"broadphase/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jg5bjg63jg7zjg4njg5Xjgqfjg7zjgro8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJicm9hZHBoYXNlL21haW4uanMiPjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5Pgo8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"broadphase/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKcmVuZGVyLm9wdGlvbnMuc2hvd0Jyb2FkcGhhc2UgPSB0cnVlOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g5aOBCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCA2MDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDgwMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSkKXSk7CgovLyDkuK3jga7jgqrjg5bjgrjjgqfjgq/jg4gKY29uc3Qgc3RhY2sgPSBDb21wb3NpdGVzLnN0YWNrKDIwLCAyMCwgMTIsIDUsIDAsIDAsICh4LCB5KSA9PiB7Cglzd2l0Y2ggKE1hdGgucm91bmQoQ29tbW9uLnJhbmRvbSgwLCAxKSkpIHsKCgkJY2FzZSAwOgoJCQlpZiAoQ29tbW9uLnJhbmRvbSgpIDwgMC44KSB7CgkJCQlyZXR1cm4gQm9kaWVzLnJlY3RhbmdsZSh4LCB5LCBDb21tb24ucmFuZG9tKDIwLCA1MCksIENvbW1vbi5yYW5kb20oMjAsIDUwKSk7CgkJCX0gZWxzZSB7CgkJCQlyZXR1cm4gQm9kaWVzLnJlY3RhbmdsZSh4LCB5LCBDb21tb24ucmFuZG9tKDgwLCAxMjApLCBDb21tb24ucmFuZG9tKDIwLCAzMCkpOwoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgMToKCQkJcmV0dXJuIEJvZGllcy5wb2x5Z29uKHgsIHksIE1hdGgucm91bmQoQ29tbW9uLnJhbmRvbSgxLCA4KSksIENvbW1vbi5yYW5kb20oMjAsIDUwKSk7CgoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgc3RhY2spOwoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdicm9hZHBoYXNlL1JFQURNRS5tZCcpOwo=","options":{"isTrashed":false},"credits":[]},{"name":"car/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDou4oKCui7iuOBk+OCjeOBjOOBl+OBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCiMjIOaUuemAoOOBl+OBpuOBv+OCiwoKIVvjgZPjgZPjgYvjgonlp4vjgoHjgotdKGNhci9tYWluLmpzKQoKQ29tcG9zaXRlcy5jYXIoYDFgLCBgMmAsIGAzYCwgYDRgLCBgNWApCnwgfCDmhI/lkbMgfCDjga/jgpPjgYQKLS0tIHwgLS0tIHwgLS0tIAoxIHwg5bem44GL44KJ44Gu44Kt44On44OqIHwgMCB+IDgwMAoyIHwg5LiK44GL44KJ44Gu44Kt44On44OqIHwgMCB+IDYwMCAKMyB8IOi7iuOBruaoquW5hSB8IDAgfiAgCjQgfCDou4rjga7pq5jjgZUgfCAwIH4gIAo1IHwg44K/44Kk44Ok44Gu5aSn44GN44GVIHwgMCB+ICAKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0oY2FyL3NldHRpbmcuanMpCiFb44GL44G544O744KG44GLXShjYXIvc3RhZ2UuanMpCgo=","options":{"isTrashed":false},"credits":[]},{"name":"car/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7ou4o8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjYXIvbWFpbi5qcyI+PC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+CjwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"car/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgpXb3JsZC5hZGQod29ybGQsIFsKCgkvLyDou4oKCUNvbXBvc2l0ZXMuY2FyKDE1MCwgMTAwLCAxMDAsIDQwLCAzMCksCgpdKTsKCgoKCgoKCgoKCmltcG9ydCAnLi9zdGFnZSc7","options":{"isTrashed":false},"credits":[]},{"name":"car/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QW5nbGVJbmRpY2F0b3IgPSB0cnVlOwpyZW5kZXIub3B0aW9ucy5zaG93Q29sbGlzaW9ucyA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnY2FyL1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"car/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIAnlo4EKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCA2MDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCgkKCS8vIAnlnYLpgZMKCUJvZGllcy5yZWN0YW5nbGUoMjAwLCAxNTAsIDQwMCwgMjAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCQlhbmdsZTogTWF0aC5QSSAqIDAuMDYsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoNTUwLCAzNTAsIDY1MCwgMjAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCQlhbmdsZTogLU1hdGguUEkgKiAwLjA2LAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDMwMCwgNTYwLCA2MDAsIDIwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgkJYW5nbGU6IE1hdGguUEkgKiAwLjA0LAoJfSksCgkKXSk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"catapult/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDnmbrlsITlj7AKCuOBteOBo+OBqOOBsOOBl+OBpuOChOOBo+OBn+OBnPCfkqUKClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoKIyMg44Gp44GG44KE44Gj44Gm5L2c44Gj44Gm44KL44Gu77yfCgrjgZPjgozjgonjgpLntYTjgb/lkIjjgo/jgZvjgabjgYTjgovjgoggIAo+IOOCr+ODquODg+OCr+OBmeOCi+OBqOOCteODs+ODl+ODq+OBq+enu+WLleOBl+OBvuOBmQoK6YeN44GV44KS5aSJ44GI44KL44Gr44Gv4oCmW+OBiuOCguOBlV0oZGVuc2l0eS9pbmRleC5odG1sKSAgCuOCt+ODvOOCveODvOOCkuS9nOOCi+OBq+OBr+KAplvjg5Djg41dKGNvbnN0cmFpbnQvaW5kZXguaHRtbCkgIArjgrnjg4jjg4Pjg5Hjg7zjgpLkvZzjgovjgavjga/igKZb44GL44G544O744KG44GLXShpc1N0YXRpYy9pbmRleC5odG1sKSAgCgojIyDmlLnpgKDjgavmjJHmiKbjgZfjgabjgb/jgosKCiFb55m65bCE5Y+w44KS5L2c44KLXShjYXRhcHVsdC9tYWluLmpzKSAgCiFb44K544OG44O844K4XShjYXRhcHVsdC9zdGFnZS5qcykgIAohW+ioreWuml0oY2F0YXB1bHQvc2V0dGluZy5qcykKCg==","options":{"isTrashed":false},"credits":[]},{"name":"catapult/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7nmbrlsITlj7A8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjYXRhcHVsdC9tYWluLmpzIj48L3NjcmlwdD4KPC9oZWFkPgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"catapult/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglDb25zdHJhaW50LAoJV29ybGQsCglCb2RpZXMsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOWPsOOCkuOBpOOBj+OCiwpjb25zdCBjYXRhcHVsdCA9IEJvZGllcy5yZWN0YW5nbGUoNDAwLCA1MjAsIDMyMCwgMjApOwoKV29ybGQuYWRkKHdvcmxkLCBbCgkvLyDlj7Djga7jgqrjg5bjgrjjgqfjgq/jg4gKCWNhdGFwdWx0LAoKCS8vIOWPsOOCkuWbuuWumuOBmeOCi+ODkOODjSAxCglDb25zdHJhaW50LmNyZWF0ZSh7CgkJLy8g5Zu65a6a44GZ44KL44Kq44OW44K444Kn44Kv44OICgkJYm9keUE6IGNhdGFwdWx0LAoJCS8vIOWbuuWumuOBmeOCi+ODneOCpOODs+ODiAoJCXBvaW50QjogewoJCQl4OiAzOTAsCgkJCXk6IDU4MAoJCX0sCgoJfSksCgoJLy8g5Y+w44KS5Zu65a6a44GZ44KL44OQ44ONIDIKCUNvbnN0cmFpbnQuY3JlYXRlKHsKCQkvLyDlm7rlrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4gKCQlib2R5QTogY2F0YXB1bHQsCgkJLy8g5Zu65a6a44GZ44KL44Od44Kk44Oz44OICgkJcG9pbnRCOiB7CgkJCXg6IDQxMCwKCQkJeTogNTgwCgkJfSwKCgl9KSwKCgkvLyDlt6bkuIvjgavjgYLjgovjgrnjg4jjg4Pjg5Hjg7wKCUJvZGllcy5yZWN0YW5nbGUoMjUwLCA1NTUsIDIwLCA1MCwgewoJCS8vIOWbuuWumuOBmeOCiwoJCWlzU3RhdGljOiB0cnVlLAoKCX0pLAoKCS8vIOiQveOBoeOBpuOBj+OCi+Wkp+OBjeOBquWGhgoJQm9kaWVzLmNpcmNsZSg1NjAsIDEwMCwgNTAsIHsKCQkvLyDjgYrjgoLjgZUKCQlkZW5zaXR5OiAwLjAwMDAwMDAwMDUsCgoJfSksCgpdKTsKCgoKaW1wb3J0ICcuL3N0YWdlJzsK","options":{"isTrashed":false},"credits":[]},{"name":"catapult/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QW5nbGVJbmRpY2F0b3IgPSB0cnVlOwpyZW5kZXIub3B0aW9ucy5zaG93Q29sbGlzaW9ucyA9IHRydWU7CnJlbmRlci5vcHRpb25zLnNob3dWZWxvY2l0eSA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdjYXRhcHVsdC9SRUFETUUubWQnKTsKCgpleHBvcnQgewoJZW5naW5lLAoJd29ybGQsCglyZW5kZXIsCn07Cg==","options":{"isTrashed":false},"credits":[]},{"name":"catapult/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgkvLyDlsI/jgZXjgarjgqrjg5bjgrjjgqfjgq/jg4jjga7jgrnjgr/jg4Pjgq8KCUNvbXBvc2l0ZXMuc3RhY2soMjUwLCAyNTUsIDEsIDYsIDAsIDAsICh4LCB5KSA9PiB7CgkJcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgMzAsIDMwKTsKCX0pLAoKCS8vIOWcsOmdouOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MC41LCB7CgkJaXNTdGF0aWM6IHRydWUsCgoJfSksCgpdKTsK","options":{"isTrashed":false},"credits":[]},{"name":"chains/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg63jg7zjg5cKCuODgeOCp+ODvOODs+OBqOOCueOCv+ODg+OCr+OCkuS9v+OBo+OBpuOAgeOCquODluOCuOOCp+OCr+ODiOOBruODreODvOODl+OCkuS9nOOBo+OBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDjganjgYbjgoTjgaPjgabkvZzjgaPjgabjgovjga7vvJ8KCuOBk+OCjOOCieOCkue1hOOBv+WQiOOCj+OBm+OBpuOBhOOCi+OCiCAgCj4g44Kv44Oq44OD44Kv44GZ44KL44Go44K144Oz44OX44Or44Gr56e75YuV44GX44G+44GZCgrjgqrjg5bjgrjjgqfjgq/jg4jjgpLkuIDmsJfjgavkuKbjgbnjgovjgavjga/igKZb44K544K/44OD44KvXShzdGFjay9pbmRleC5odG1sKSAgCuODreODvOODl+OCkuepuuS4reOBq+WbuuWumuOBmeOCi+OBq+OBr+KAplvjg5Djg41dKGNvbnN0cmFpbnQvaW5kZXguaHRtbCkgIAoKIyMg5pS56YCg44Gr5oyR5oim44GX44Gm44G/44KLCgohW+ODreODvOODl+OCkuS9nOOCi10oY2hhaW5zL21haW4uanMpICAKIVvoqK3lrppdKGNoYWlucy9zZXR0aW5nLmpzKQoKLSAtIC0KCiMjIOW/nOeUqOS+iwoKW+ODluODquODg+OCuF0oYnJpZGdlL2luZGV4Lmh0bWwpCgo=","options":{"isTrashed":false},"credits":[]},{"name":"chains/image.png","type":"image/png","lastModified":1492756455000,"composed":"","options":{"isTrashed":false},"credits":[]},{"name":"chains/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jg63jg7zjg5c8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjaGFpbnMvbWFpbi5qcyI+PC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+CjwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"chains/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUJvZHksCglDb21wb3NpdGUsCglDb21wb3NpdGVzLAoJQ29uc3RyYWludCwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgovLyDjg63jg7zjg5fjga7kuK3jga7jgqrjg5bjgrjjgqfjgq/jg4jlkIzlo6vjgYzjgbbjgaTjgYvjgonjgarjgYTjgojjgYbjgavjgZnjgovjgZ/jgoHjga7jgrDjg6vjg7zjg5cKY29uc3Qgcm9wZUdyb3VwID0gQm9keS5uZXh0R3JvdXAodHJ1ZSk7CgovLyDjg63jg7zjg5fjga7jgqrjg5bjgrjjgqfjgq/jg4jjga7jgrnjgr/jg4Pjgq8KY29uc3Qgcm9wZUEgPSBDb21wb3NpdGVzLnN0YWNrKDQwMCwgMTAwLCAxLCA4LCAwLCAxMCwgKHgsIHkpID0+IHsKCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIDIwLCA1MCwgewoJCWNvbGxpc2lvbkZpbHRlcjogewoJCQlncm91cDogcm9wZUdyb3VwLAoJCX0sCgkJCgl9KTsKfSk7CldvcmxkLmFkZCh3b3JsZCwgcm9wZUEpOwoKLy8g44Ot44O844OX44KS44OB44Kn44O844Oz44Gn44Gk44Gq44GQCkNvbXBvc2l0ZXMuY2hhaW4ocm9wZUEsIDAsIDAuNSwgMCwgLTAuNSwgewoJc3RpZmZuZXNzOiAwLjgsCgkKfSk7CgovLyDlt6bjga7jg63jg7zjg5fjgpLnqbrkuK3jgavlm7rlrprjgZnjgosKQ29tcG9zaXRlLmFkZChyb3BlQSwgQ29uc3RyYWludC5jcmVhdGUoewoJYm9keUI6IHJvcGVBLmJvZGllc1swXSwKCXBvaW50QjogewoJCXg6IDAsCgkJeTogLTI1Cgl9LAoJcG9pbnRBOiB7CgkJeDogNDAwLAoJCXk6IDEwMAoJfSwKCXN0aWZmbmVzczogMC41LAp9KSk7Cgo=","options":{"isTrashed":false},"credits":[]},{"name":"chains/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QW5nbGVJbmRpY2F0b3IgPSB0cnVlOwpyZW5kZXIub3B0aW9ucy5zaG93Q29sbGlzaW9ucyA9IHRydWU7CnJlbmRlci5vcHRpb25zLnNob3dWZWxvY2l0eSA9IHRydWU7CnJlbmRlci5vcHRpb25zLmJhY2tncm91bmQgPSAnI2FhYWFhYSc7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdjaGFpbnMvUkVBRE1FLm1kJyk7CgoKZXhwb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAoJcmVuZGVyLAp9Ow==","options":{"isTrashed":false},"credits":[]},{"name":"chamfer/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDop5LkuLggMQoK44Kq44OW44K444Kn44Kv44OI44Gu6KeS44KS5Li444GP44GX44Gm44G/44GfCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoKCiMjIOaUuemAoOOBl+OBpuOBv+OCiwoKIVvjgZPjgZPjgYvjgonlp4vjgoHjgotdKGNoYW1mZXIvbWFpbi5qcykKCgp8fHwg5oSP5ZGzIHwg44Gv44KT44GEIAotLS0gfCAtLS0gfCAtLS0gfCAtLS0KY2hhbWZlciB8IHwg6KeS44KS5Li444GP44GZ44KL44GL44Gp44GG44GLIHwgYHRydWVgIOOBquOCieS4uOOBj+OBquOCiyAKY2hhbWZlciB8IHJhZGl1cyB8IOS4uOOBv+OBruWkp+OBjeOBlSB8IDAgfiAKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0oY2hhbWZlci9zZXR0aW5nLmpzKQohW+OBi+OBueODu+OChuOBi10oY2hhbWZlci9zdGFnZS5qcykKCuinkuOBlOOBqOOBq+S4uOOBv+OCkuWkieOBiOOCi+OBq+OBrwpb6KeS5Li4IDJdKHJvdW5kZWQvaW5kZXguaHRtbCkK44KS6KaL44Gm44GtCgotIC0gLQoKIyMg5b+c55So5L6LCg==","options":{"isTrashed":false},"credits":[]},{"name":"chamfer/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7op5LkuLggMTwvdGl0bGU+CgkJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJzdHlsZS5jc3MiIC8+CgkJPHNjcmlwdCBzcmM9ImNoYW1mZXIvbWFpbi5qcyI+PC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+CjwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"chamfer/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nLmpzJzsKCldvcmxkLmFkZCh3b3JsZCwgWwoJCgkvLyDlt6bjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoMjAwLCA0MDAsIDIwMCwgMjAwLCB7CgkJLy8g6KeS44KS5Li444GP44GZ44KLCgkJY2hhbWZlcjogdHJ1ZSwKCQkKCX0pLAoJCgkvLyDkuK3jga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAxMDAsIDE1MCwgMTUwLCB7CgkJLy8g5Li444G/44Gu5aSn44GN44GV44KS44GL44GI44KLCgkJY2hhbWZlcjogewoJCQlyYWRpdXM6IDIsCgkJfSwKCQkKCX0pLAoJCgkvLyDlj7Pjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoNTUwLCAzMDAsIDMwMCwgMzAwLCB7CgkJLy8g5Li444G/44Gu5aSn44GN44GV44KS44GL44GI44KLCgkJY2hhbWZlcjogewoJCQlyYWRpdXM6IDQwLAoJCX0sCgkJCgl9KSwKCQpdKTsKCgppbXBvcnQgJy4vc3RhZ2UuanMnOwo=","options":{"isTrashed":false},"credits":[]},{"name":"chamfer/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVdvcmxkLAoJUnVubmVyLAoJTW91c2UsCglNb3VzZUNvbnN0cmFpbnQsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdjaGFtZmVyL1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"chamfer/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOWjgQpXb3JsZC5hZGQod29ybGQsIFsKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKXSk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"circleStack/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDlhobjga7jgrnjgr/jg4Pjgq8KCuOCueOCv+ODg+OCr+OCkuS9v+OBo+OBpuWGhuOBruOCquODluOCuOOCp+OCr+ODiOOCkuS4gOawl+OBq+WHuuOBl+OBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXShjaXJjbGVTdGFjay9tYWluLmpzKQoKKipDb21wb3NpdGVzLnN0YWNrKGAxYCwgYDJgLCBgM2AsIGA0YCwgYDVgLCBgNmAsICh4LCB5KSA9PiB7ICAK44CA44CAcmV0dXJuIEJvZGllcy5jaXJjbGUoeCwgeSwgYDdgKTsgIAp9KTsqKgoKfHwg5oSP5ZGzIHwg44Gv44KT44GECi0tLSB8IC0tLSB8IC0tLSAKMSB8IOW3puOBi+OCieOBruOCreODp+ODqiB8IDAgfiA4MDAKMiB8IOS4iuOBi+OCieOBruOCreODp+ODqiB8IDAgfiA2MDAKMyB8IOWPs+OBq+OBhOOBj+OBpOWHuuOBmeOBi++8iOaoqu+8iSB8IDAgfiAKNCB8IOS4i+OBq+OBhOOBj+OBpOWHuuOBmeOBi++8iOOCv+ODhu+8iSB8IDAgfiAKNSB8IOWIl+OBrumWk+OBi+OBj++8iOaoqu+8iSB8IDAgfiAKNiB8IOihjOOBrumWk+OBi+OBj++8iOOCv+ODhu+8iSB8IDAgfiAKNyB8IOWGhuOBruWNiuW+hCB8IDAgfiAKCgrjgoLjgaPjgajmlLnpgKAKIVvoqK3lrppdKGNpcmNsZVN0YWNrL3NldHRpbmcuanMpCiFb44GL44G544O744KG44GLXShjaXJjbGVTdGFjay9zdGFnZS5qcykKCi0gLSAtCgojIyDlv5znlKjkvosKCg==","options":{"isTrashed":false},"credits":[]},{"name":"circleStack/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7lhobjga7jgrnjgr/jg4Pjgq88L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjaXJjbGVTdGFjay9tYWluLmpzIj48L3NjcmlwdD4KPC9oZWFkPgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"circleStack/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAoJQ29tcG9zaXRlcywKCQp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCQoJLy8g5YaG44Gu44K544K/44OD44KvCglDb21wb3NpdGVzLnN0YWNrKDEwMCwgMTg1LCAxMCwgMTAsIDIwLCAwLCAoeCwgeSkgPT4gewoJCXJldHVybiBCb2RpZXMuY2lyY2xlKHgsIHksIDIwKTsKCX0pLAoJCl0pOwoKCgoKCgoKCmltcG9ydCAnLi9zdGFnZSc7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"circleStack/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZXMsCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgoKZmVlbGVzLm9wZW5SZWFkbWUoJ2NpcmNsZVN0YWNrL1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"circleStack/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIOWjgQoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDgwMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKXSk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"cloth/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDluIMKCumdouOBq+S4puOBueOBn+OCueOCv+ODg+OCr+OCkuOCveODleODiOODnOODh+OCo+OBq+OBmeOCi+OBqOOAgeW4g+OBruOCiOOBhuOBquihqOePvuOBjOOBp+OBjeOCi+OCiCAgCuOBn+OBoOOBl+OAgeWFqOOBpuOCkuiHqueUseOBq+OBmeOCi+OBqOW6iuOBq+iQveOBoeOBpuOBl+OBvuOBhuOBruOBp+OAgSAgCuS4iuOBruihjCAoMCB+IDIwIOeVquOBvuOBpykg44Gu44Kq44OW44K444Kn44Kv44OI44Gg44GR44Gv5Zu65a6a44GX44Gf44KT44GgICAKCgojIyAhW+aUuemAoOOBmeOCi10oY2xvdGgvbWFpbi5qcykKCgojIyDjg5Hjg6njg6Hjg7zjgr8K44OR44Op44Oh44O844K/IHwg5oSP5ZGzIHwg5Y2Y5L2NIHwg5pyA5bCPIHwg5pyA5aSnIAotLS0gfCAtLS0gfCAtLS0gfCAtLS0gfCAtLS0KZnJpY3Rpb24gfCDjgb7jgZXjgaTkv4LmlbAgfCDlgI0gfCAwIHwgMS4wCmlzU3RhdGljIHwg6Z2Z5q2i44GZ44KL44GL44Gp44GG44GLIHwg44OV44Op44KwIHwgZmFsc2UgfCB0cnVlIAoKClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgotIC0gLQoKIyMg5b+F6KaB44Gq44KC44GuCgpb44K944OV44OI44Oc44OH44KjXShzb2Z0Qm9keS9pbmRleC5odG1sKQo=","options":{"isTrashed":false},"credits":[]},{"name":"cloth/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7luIM8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjbG90aC9tYWluLmpzIj48L3NjcmlwdD4KPC9oZWFkPgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"cloth/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUJvZHksCglDb21wb3NpdGVzLAoJTW91c2VDb25zdHJhaW50LAoJTW91c2UsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7CnJlbmRlci5vcHRpb25zLmJhY2tncm91bmQgPSAnIzBmMGYxMyc7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g5biD44Gu44Kq44OW44K444Kn44Kv44OICmNvbnN0IGdyb3VwID0gQm9keS5uZXh0R3JvdXAodHJ1ZSk7CmNvbnN0IHBhcnRpY2xlT3B0aW9ucyA9IHsKCWZyaWN0aW9uOiAwLjAwMDAxLAoJY29sbGlzaW9uRmlsdGVyOiB7CgkJZ3JvdXA6IGdyb3VwCgl9LAoJcmVuZGVyOiB7CgkJdmlzaWJsZTogZmFsc2UsCgl9Cn07CmNvbnN0IGNsb3RoID0gQ29tcG9zaXRlcy5zb2Z0Qm9keSgyMDAsIDIwMCwgMjAsIDEyLCA1LCA1LCBmYWxzZSwgOCwgcGFydGljbGVPcHRpb25zKTsKCi8vIOS4gOeVquS4iuOBruihjOOBoOOBkeOAgeWLleOBi+OBquOBhOOCiOOBhuOBqwpmb3IgKGxldCBpID0gMDsgaSA8IDIwOyBpKyspIHsKCUJvZHkuc2V0U3RhdGljKGNsb3RoLmJvZGllc1tpXSwgdHJ1ZSk7Cn0KCldvcmxkLmFkZCh3b3JsZCwgWwoJY2xvdGgsCgkvLyAJ5YaG44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMuY2lyY2xlKDMwMCwgNTAwLCA4MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCS8vIAnlm5vop5Ljga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoNTAwLCA0ODAsIDgwLCA4MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCS8vIAnluorjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCA2MDksIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSkKXSk7CgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjk4LAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdjbG90aC9SRUFETUUubWQnKTsK","options":{"isTrashed":false},"credits":[]},{"name":"coins/README.MD","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgrPjgqTjg7PjgrLjg7zjg6AKCuOCs+OCpOODs+OCsuODvOODoOS9nOOBo+OBpuOBv+OBn+OAgAoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgoKIyMg44Gp44GG44KE44Gj44Gm5L2c44Gj44Gm44KL44Gu77yfCgrjgZPjgozjgonjgpLntYTjgb/lkIjjgo/jgZvjgabjgrLjg7zjg6DjgavjgZfjgabjgYTjgovjgoggIAo+IOOCr+ODquODg+OCr+OBmeOCi+OBqOOCteODs+ODl+ODq+OBq+enu+WLleOBl+OBvuOBmQoK44OQ44O844KS5YuV44GL44GZ44Gr44Gv4oCmW+OCpOODmeODs+ODiF0oZXZlbnRzL2luZGV4Lmh0bWwpICAK44Kz44Kk44Oz44K744Oz44K144O844Gv4oCmW+OCu+ODs+OCteODvF0oc2Vuc29ycy9pbmRleC5odG1sKSAgCgojIyDmlLnpgKDjgavmjJHmiKbjgZfjgabjgb/jgosKCiFb5YuV44GP5Y+wXShjb2lucy9tYWluLmpzKSAgCiFb44Kz44Kk44Oz44K744Oz44K144O8XShjb2lucy9zZW5zb3IuanMpICAKIVvjgrnjg4bjg7zjgrhdKGNvaW5zL3N0YWdlLmpzKSAgCiFb6Kit5a6aXShjb2lucy9zZXR0aW5nLmpzKQo=","options":{"isTrashed":false},"credits":[]},{"name":"coins/REAMDE.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgrPjgqTjg7PjgrLjg7zjg6AKCuOCs+OCpOODs+OCsuODvOODoOS9nOOBo+OBpuOBv+OBn+OAgAoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDjganjgYbjgoTjgaPjgabkvZzjgaPjgabjgovjga7vvJ8KCuOBk+OCjOOCieOCkue1hOOBv+WQiOOCj+OBm+OBpuOCsuODvOODoOOBq+OBl+OBpuOBhOOCi+OCiCAgCj4g44Kv44Oq44OD44Kv44GZ44KL44Go44K144Oz44OX44Or44Gr56e75YuV44GX44G+44GZCgrph43jgZXjgpLlpInjgYjjgovjgavjga/igKZb44GK44KC44GVXShkZW5zaXR5L2luZGV4Lmh0bWwpICAK5bGx44KS5L2c44KL44Gr44Gv4oCmW+ODlOODqeODn+ODg+ODiV0ocHlyYW1pZC9pbmRleC5odG1sKSAgCuWyqeOCkuaUvuOBpOOBq+OBr+KAplvjgqTjg5njg7Pjg4hdKGV2ZW50cy9pbmRleC5odG1sKSAgCgojIyDmlLnpgKDjgavmjJHmiKbjgZfjgabjgb/jgosKCiFb5YuV44GP5Y+w44Go44Kz44Kk44Oz44K744Oz44K144O8XShjb2lucy9tYWluLmpzKSAgCiFb44K544OG44O844K4XShjb2lucy9zdGFnZS5qcykgIAohW+ioreWuml0oY29pbnMvc2V0dGluZy5qcykK","options":{"isTrashed":false},"credits":[]},{"name":"coins/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgrPjgqTjg7PjgrLjg7zjg6A8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjb2lucy9tYWluLmpzIj48L3NjcmlwdD4KPC9oZWFkPgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"coins/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUJvZHksCglFdmVudHMsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKLy8g44Kz44Kk44Oz44KS6YGL44G244OQ44O8CmNvbnN0IGJhcjEgPSBCb2RpZXMucmVjdGFuZ2xlKDcwMCwgMzUwLCAyNTAsIDUwLCB7CgkvLyDlm7rlrprjgZnjgosKCWlzU3RhdGljOiB0cnVlLAoJCn0pOwoKV29ybGQuYWRkKHdvcmxkLCBbCgkKCS8vIOOCs+OCpOODs+OCkumBi+OBtuODkOODvAoJYmFyMSwKCQoJLy8g44OQ44O844Gu5LiK44Gu44K544OI44OD44OR44O8CglCb2RpZXMucmVjdGFuZ2xlKDc1MCwgMzAwLCA3MCwgNTAsIHsKCQkvLyDlm7rlrprjgZnjgosKCQlpc1N0YXRpYzogdHJ1ZSwKCgl9KSwKCQpdKTsKCkV2ZW50cy5vbihlbmdpbmUsICdiZWZvcmVVcGRhdGUnLCAoZXZlbnQpID0+IHsKCQoJLy8g5aeL44G+44Gj44Gm44GL44KJ44Gu57WM6YGO5pmC6ZaTKOenkikKCWNvbnN0IHRpbWUgPSBldmVudC50aW1lc3RhbXAgLyAxMDAwOwoKCS8vIOODkOODvOOCkuW3puWPs+OBq+WLleOBi+OBmQoJY29uc3QgcHggPSA3MDAgKyAxNTAgKiBNYXRoLnNpbih0aW1lIC0gMSk7CglCb2R5LnNldFZlbG9jaXR5KGJhcjEsIHsKCQl4OiBweCAtIGJhcjEucG9zaXRpb24ueCwKCQl5OiAwCgl9KTsKCUJvZHkuc2V0UG9zaXRpb24oYmFyMSwgewoJCXg6IHB4LAoJCXk6IGJhcjEucG9zaXRpb24ueQoJfSk7CgkKfSk7CgoKaW1wb3J0ICcuL3N0YWdlJzsKaW1wb3J0ICcuL3NlbnNvcic7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"coins/sensor.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglCb2R5LAoJRXZlbnRzLAoJV29ybGQsCglCb2RpZXMsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOOCu+ODs+OCteODvOOBruOCquODluOCuOOCp+OCr+ODiOOCkuOBpOOBj+OCiwpjb25zdCBzZW5zb3IgPSBCb2RpZXMucmVjdGFuZ2xlKDc0MCwgNDAwLCA2MCwgMjAsIHsKCWlzU2Vuc29yOiB0cnVlLAoJaXNTdGF0aWM6IHRydWUsCglyZW5kZXI6IHsKCQlzdHJva2VTdHlsZTogJyNGRkZGMDAnLAoJCWZpbGxTdHlsZTogJ3RyYW5zcGFyZW50JywKCQlsaW5lV2lkdGg6IDEKCX0KfSk7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgoJLy8g44K744Oz44K144O844Gu44Kq44OW44K444Kn44Kv44OICglzZW5zb3IsCgoJLy8g44GV44GE44GX44KH44Gu44Kz44Kk44OzCglCb2RpZXMucmVjdGFuZ2xlKDc1MCwgMzUwLCA1MCwgMTAsIHsKCQljaGFtZmVyOiB7CgkJCXJhZGl1czogNCwKCQl9LAoJCXJlbmRlcjogewoJCQlmaWxsU3R5bGU6ICcjRkZGRjAwJywKCQkJc3Ryb2tlU3R5bGU6ICcjMDAwMDAwJywKCQkJbGluZVdpZHRoOiAxLAoJCX0sCgkJLy8g44OE44Or44OE44Or44Gr44GZ44KLCgkJc2xvcDogMC4wMDUsCgkJZnJpY3Rpb246IDAuMDEsCgkJZnJpY3Rpb25TdGF0aWM6IDEwLAoJCXJlc3RpdHV0aW9uOiAwLjMsCgkJLy8g44K/44OG44Gr44GZ44KLCgkJYW5nbGU6IDEuNTcsCgoJfSksCgpdKTsKCgoKRXZlbnRzLm9uKGVuZ2luZSwgJ2NvbGxpc2lvblN0YXJ0JywgZnVuY3Rpb24oZXZlbnQpIHsKCS8vIOOBl+OCh+OBhueqgeOBjOWni+OBvuOBo+OBn+OCieOAgeOBk+OBk+OBq+WFpeOCiwoKCWZvciAoY29uc3QgcGFpciBvZiBldmVudC5wYWlycykgewoJCWlmIChwYWlyLmJvZHlBID09PSBzZW5zb3IgfHwgcGFpci5ib2R5QiA9PT0gc2Vuc29yKSB7CgkJCS8vIOOCu+ODs+OCteODvOOBqOOBtuOBpOOBi+OBo+OBn+OCieOAgeOBk+OBk+OBq+WFpeOCiwoKCQkJV29ybGQuYWRkKHdvcmxkLCBbCgoJCQkJLy8g44Kz44Kk44Oz44Gu44Kq44OW44K444Kn44Kv44OI44Gu44K544K/44OD44KvCgkJCQlDb21wb3NpdGVzLnN0YWNrKDUwLCAzMDAsIDIsIDUsIDAsIDAsICh4LCB5KSA9PiB7CgkJCQkJcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgNTAsIDEwLCB7CgkJCQkJCWNoYW1mZXI6IHsKCQkJCQkJCXJhZGl1czogNCwKCQkJCQkJfSwKCQkJCQkJcmVuZGVyOiB7CgkJCQkJCQlmaWxsU3R5bGU6ICcjRkZGRjAwJywKCQkJCQkJCXN0cm9rZVN0eWxlOiAnIzAwMDAwMCcsCgkJCQkJCQlsaW5lV2lkdGg6IDEsCgkJCQkJCX0sCgkJCQkJCXNsb3A6IDAuMDA1LAoJCQkJCQlmcmljdGlvbjogMC4wMSwKCQkJCQkJZnJpY3Rpb25TdGF0aWM6IDEwLAoJCQkJCQlyZXN0aXR1dGlvbjogMC4zLAoJCQkJCQlyZXN0aXR1dGlvbjogMC4zLAoKCQkJCQl9KTsKCQkJCX0pLAoKCQkJXSk7CgoJCX0KCX0KCn0pOwo=","options":{"isTrashed":false},"credits":[]},{"name":"coins/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnY29pbnMvUkVBRE1FLm1kJyk7CgoKZXhwb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAoJcmVuZGVyLAp9Owo=","options":{"isTrashed":false},"credits":[]},{"name":"coins/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g44GL44G544Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDgwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgkJYW5nbGU6IC0wLjA1LAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDgwMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCQoJLy8g44OQ44O844Gu5LiL44Gu5Zyf5Y+wCglCb2RpZXMucmVjdGFuZ2xlKDQ1MCwgNDAwLCA1MjAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgkJY2hhbWZlcjogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgxODAsIDQ1MCwgMTUwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJCWNoYW1mZXI6IHRydWUsCgkJYW5nbGU6IC0xLjIsCgl9KSwKCQoJLy8g44Os44O844OzCglCb2RpZXMucmVjdGFuZ2xlKDI3MCwgMTgwLCAzNTAsIDIwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgkJY2hhbWZlcjogdHJ1ZSwKCQlhbmdsZTogMC41LAoJCWZyaWN0aW9uOiAwLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDEzMCwgMTkwLCAyMCwgMjAwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgkJY2hhbWZlcjogdHJ1ZSwKCX0pLAoJCl0pOwo=","options":{"isTrashed":false},"credits":[]},{"name":"collisionFiltering/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgqvjg4bjgrTjg6rjg7zjgZTjgajjga7jgZfjgofjgYbjgajjgaQKCgroibLku5jjgY3jga7jgqrjg5bjgrjjgqfjgq/jg4jjga/jgIEgIArlkIzjgZjoibLjga7nt5rjgpLjgoLjgaTjgqrjg5bjgrjjgqfjgq/jg4jjgajjgZfjgYvjgbbjgaTjgYvjgonjgarjgYTjgojjgYbjgasgIAoqKuOCq+ODhuOCtOODquODvOWIhuOBkSoqIOOBleOCjOOBpuOBhOOCi+OCiAoKCiMjICFb5pS56YCg44GZ44KLXShjb2xsaXNpb25GaWx0ZXJpbmcvbWFpbi5qcykKCgojIyDkvZXjgYzjgafjgY3jgovjga7vvJ8K44Kr44OG44K044Oq44O844GU44Go44Gu44GX44KH44GG44Go44Gk44KS5L2/44GE44GT44Gq44Gb44KL44KI44GG44Gr44Gq44KM44Gw44CBICAK44CM44GT44KM44Go44Gd44KM44Gv44G244Gk44GL44KL44CC44Gn44KC44CB44GC44KM44Go44GT44KM44Gv44G244Gk44GL44KJ44Gq44GE44CNICAK44Go44GE44GG44GT44Go44GM44CB6Ieq55Sx6Ieq5Zyo44Gr44Gn44GN44KL44KI44GG44Gr44Gq44KL44KICgoK5LuK5Zue44Gu5L6L44Gn44Gv44CBIOi1pOOCq+ODhuOCtOODquODvCwg6Z2S44Kr44OG44K044Oq44O8LCDnt5Hjgqvjg4bjgrTjg6rjg7wsICAK44Gd44GX44GmIOODh+ODleOCqeODq+ODiOOCq+ODhuOCtOODquODvO+8iOOCq+ODhuOCtOODquODvOOBquOBl++8ieOBqOOBhOOBhuOAgSAgCu+8lOOBpOOBruOCq+ODhuOCtOODquODvOOCkuS9v+OBhOWIhuOBkeOBpuOBhOOCi+OCk+OBoAoKCiMjIOODkeODqeODoeODvOOCvwrjg5Hjg6njg6Hjg7zjgr8gfCDmhI/lkbMgfCDljZjkvY0gfCDmnIDlsI8gfCDmnIDlpKcgCi0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8IC0tLQppc1N0YXRpYyB8IOmdmeatouOBmeOCi+OBi+OBqeOBhuOBiyB8IOODleODqeOCsCB8IGZhbHNlIHwgdHJ1ZSAKY29sbGlzaW9uRmlsdGVyIHwgfCB8IHwKY2F0ZWdvcnkgfCDjgZ3jga7jgqrjg5bjgrjjgqfjgq/jg4jjga7jgqvjg4bjgrTjg6rjg7wgfCDjg5Pjg4Pjg4jjg5Xjg6njgrAgfCBgMHgwMDAxYCAo44OH44OV44Kp44Or44OI44Kr44OG44K044Oq44O8KSB8IAptYXNrIHwg44Kq44OW44K444Kn44Kv44OI44GM44GX44KH44GG44Go44Gk44GZ44KL44Kr44OG44K044Oq44O8IHzjgIDjg5Pjg4Pjg4jjg5Xjg6njgrAgfCBgMHgwMDAwYCAo54ShKSB8IGAweEZGRkZgICjlhajjgaYpICAKcmVuZGVyIHwgfCB8IHwKc3Ryb2tlU3R5bGUgfCDnt5rjga7oibIgfCDoibIgfCAqIiMwMDAwMDAiKiAo6buSKSB8ICoiI0ZGRkZGRiIqICjnmb0pCmZpbGxTdHlsZSB8IOWhl+OCiuOBpOOBtuOBl+OBruiJsiB8IOiJsiB8ICoiIzAwMDAwMCIqICjpu5IpIHwgKiIjRkZGRkZGIiogKOeZvSkKbGluZVdpZHRoIHwg57ea44Gu5aSq44GVIHwgcHggfCAwIHwgSW5maW5pdHkKCiMjIHwg44Gu5oSP5ZGzCmBkZWZhdWx0Q2F0ZWdvcnkgfCBncmVlbkNhdGVnb3J5YCDjga/jgIEgIArjg4fjg5Xjgqnjg6vjg4jjgqvjg4bjgrTjg6rjg7wgKirjgajjgIEqKiDnt5Hjgqvjg4bjgrTjg6rjg7wgIArjgajjgYTjgYbmhI/lkbPjgpLooajjgZfjgabjgYTjgovjgogKCiMjIOODk+ODg+ODiOODleODqeOCsOOBruaEj+WRswoK44OT44OD44OI44Go44Gv44CBIDAg44GLIDEg44Gu5oOF5aCx44GX44GL44KC44Gf44Gq44GE44CB5oOF5aCx44Gu5pyA5bCP5Y2Y5L2N44Gu44GT44GoICAKYDB4MDAwMWAg44GvIDE26YCy5pWw44Go44GE44GG54m55Yil44Gq5pWw5a2X44Gu5pu444GN5pa544Gn44CB5a6f6Zqb44Gr44Gv44G144Gk44GG44Gu5pWw5a2X44Go5ZCM44GY44Gg44KICgoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCg==","options":{"isTrashed":false},"credits":[]},{"name":"collisionFiltering/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgqvjg4bjgrTjg6rjg7zjgZTjgajjga7jgZfjgofjgYbnqoE8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjb2xsaXNpb25GaWx0ZXJpbmcvbWFpbi5qcyI+PC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+CjwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"collisionFiltering/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZSwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKcmVuZGVyLm9wdGlvbnMuYmFja2dyb3VuZCA9ICcjMTExJzsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgovLyDjgqvjg4bjgrTjg6rjg7zjgIAo77yR44Gk44Gu44Kr44OG44K044Oq44O844GvIDEgYml0IOOBp+ihqOOBleOCjOOCi+OBruOBp+OAgeihqOOBm+OCi+OCq+ODhuOCtOODquODvOOBryAzMiDjgb7jgacpCmNvbnN0IGRlZmF1bHRDYXRlZ29yeSA9IDB4MDAwMTsKY29uc3QgcmVkQ2F0ZWdvcnkgPSAweDAwMDI7CmNvbnN0IGdyZWVuQ2F0ZWdvcnkgPSAweDAwMDQ7CmNvbnN0IGJsdWVDYXRlZ29yeSA9IDB4MDAwODsKCi8vIOOCq+ODqeODvO+8iOS4iuOBi+OCiSDotaQsIOmdkiwg57eR77yJCmNvbnN0IHJlZENvbG9yID0gJyNDNDRENTgnOwpjb25zdCBibHVlQ29sb3IgPSAnIzRFQ0RDNCc7CmNvbnN0IGdyZWVuQ29sb3IgPSAnI0M3RjQ2NCc7CgovLyDluooKV29ybGQuYWRkKHdvcmxkLCBCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA5MDAsIDUwLCB7Cglpc1N0YXRpYzogdHJ1ZSwKCXJlbmRlcjogewoJCWZpbGxTdHlsZTogJ3RyYW5zcGFyZW50JywKCQlsaW5lV2lkdGg6IDEKCX0KfSkpOwoKLyoqCiAqIOmAj+aYjuOBquWGhuOBruOCueOCv+ODg+OCrwogKiAwIH4gMiDotaTjgYTjg5Xjg4EKICogMyB+IDUg57eR44Gu44OV44OBCiAqIDYgfiA5IOmdkuOBhOODleODgQogKi8KV29ybGQuYWRkKHdvcmxkLAoJQ29tcG9zaXRlcy5zdGFjaygyNzUsIDEwMCwgNSwgOSwgMTAsIDEwLCAoeCwgeSwgY29sdW1uLCByb3cpID0+IHsKCgkJcmV0dXJuIEJvZGllcy5jaXJjbGUoeCwgeSwgMjAsIHsKCQkJY29sbGlzaW9uRmlsdGVyOiB7CgkJCQljYXRlZ29yeTogcm93IDw9IDIgPyByZWRDYXRlZ29yeSA6IHJvdyA8PSA1ID8gZ3JlZW5DYXRlZ29yeSA6IGJsdWVDYXRlZ29yeQoJCQl9LAoJCQlyZW5kZXI6IHsKCQkJCXN0cm9rZVN0eWxlOiByb3cgPD0gMiA/IHJlZENvbG9yIDogcm93IDw9IDUgPyBncmVlbkNvbG9yIDogYmx1ZUNvbG9yLAoJCQkJZmlsbFN0eWxlOiAndHJhbnNwYXJlbnQnLAoJCQkJbGluZVdpZHRoOiAxCgkJCX0KCQl9KTsKCQoJfSkKKTsKCi8vIOe3keOCq+ODhuOCtOODquODvOOBruOCquODluOCuOOCp+OCr+ODiOOBq+OBl+OBi+OBtuOBpOOBi+OCieOBquOBhOOAgee3keOBruWGhgpXb3JsZC5hZGQod29ybGQsCglCb2RpZXMuY2lyY2xlKDMxMCwgNDAsIDMwLCB7CgkJY29sbGlzaW9uRmlsdGVyOiB7CgkJCW1hc2s6IGRlZmF1bHRDYXRlZ29yeSB8IGdyZWVuQ2F0ZWdvcnkKCQl9LAoJCXJlbmRlcjogewoJCQlzdHJva2VTdHlsZTogQ29tbW9uLnNoYWRlQ29sb3IoZ3JlZW5Db2xvciwgLTIwKSwKCQkJZmlsbFN0eWxlOiBncmVlbkNvbG9yCgkJfQoJfSkKKTsKCi8vIOi1pOOCq+ODhuOCtOODquODvOOBruOCquODluOCuOOCp+OCr+ODiOOBq+OBl+OBi+OBtuOBpOOBi+OCieOBquOBhOOAgei1pOOBruWGhgpXb3JsZC5hZGQod29ybGQsCglCb2RpZXMuY2lyY2xlKDQwMCwgNDAsIDMwLCB7CgkJY29sbGlzaW9uRmlsdGVyOiB7CgkJCW1hc2s6IGRlZmF1bHRDYXRlZ29yeSB8IHJlZENhdGVnb3J5CgkJfSwKCQlyZW5kZXI6IHsKCQkJc3Ryb2tlU3R5bGU6IENvbW1vbi5zaGFkZUNvbG9yKHJlZENvbG9yLCAtMjApLAoJCQlmaWxsU3R5bGU6IHJlZENvbG9yCgkJfQoJfSkKKTsKCi8vIOmdkuOCq+ODhuOCtOODquODvOOBruOCquODluOCuOOCp+OCr+ODiOOBq+OBl+OBi+OBtuOBpOOBi+OCieOBquOBhOOAgemdkuOBruWGhgpXb3JsZC5hZGQod29ybGQsCglCb2RpZXMuY2lyY2xlKDQ4MCwgNDAsIDMwLCB7CgkJY29sbGlzaW9uRmlsdGVyOiB7CgkJCW1hc2s6IGRlZmF1bHRDYXRlZ29yeSB8IGJsdWVDYXRlZ29yeQoJCX0sCgkJcmVuZGVyOiB7CgkJCXN0cm9rZVN0eWxlOiBDb21tb24uc2hhZGVDb2xvcihibHVlQ29sb3IsIC0yMCksCgkJCWZpbGxTdHlsZTogYmx1ZUNvbG9yCgkJfQoJfSkKKTsKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCi8vIOi1pOOCq+ODhuOCtOODquODvOOBruOCquODluOCuOOCp+OCr+ODiOOCkuODnuOCpuOCueOBp+ODieODqeODg+OCsOOBleOBm+OBquOBhAptb3VzZUNvbnN0cmFpbnQuY29sbGlzaW9uRmlsdGVyLm1hc2sgPSBkZWZhdWx0Q2F0ZWdvcnkgfCBibHVlQ2F0ZWdvcnkgfCBncmVlbkNhdGVnb3J5OwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdjb2xsaXNpb25GaWx0ZXJpbmcvUkVBRE1FLm1kJyk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"compositeManipulation/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgrnjgr/jg4Pjgq/lhajkvZPjga7mk43kvZwKCgpgQ29tcG9zaXRlYCDjgpLkvb/jgYbjgajjgIHjgrnjgr/jg4Pjgq/jgavjgbXjgY/jgb7jgozjgosgIArlhajjgabjga7jgqrjg5bjgrjjgqfjgq/jg4jjgpLlkIzmmYLjgavli5XjgYvjgZvjgovjgogKCgojIyAhW+aUuemAoOOBmeOCi10oY29tcG9zaXRlTWFuaXB1bGF0aW9uL21haW4uanMpCgoKIyMjIENvbXBvc2l0ZS50cmFuc2xhdGUoc3RhY2ssIHsgeDogYHhgLCB5OiBgeWAgfSkKCuOCueOCv+ODg+OCr+WFqOS9k+OCkuenu+WLleOBleOBm+OCiwoK44OR44Op44Oh44O844K/IHwg5oSP5ZGzIHwg5Y2Y5L2NCi0tLSB8IC0tLSB8IC0tLQp4IHwg5Y+z44Gr56e75YuV44GZ44KL6YePIHwgcHgKeSB8IOS4i+OBq+enu+WLleOBmeOCi+mHjyB8IHB4CgojIyMgQ29tcG9zaXRlLnJvdGF0ZShzdGFjaywgYGFuZ2xlYCwgeyB4OiBgY2VudGVyWGAsIHk6IGBjZW50ZXJZYCB9KQoK44K544K/44OD44Kv5YWo5L2T44KS5Zue6Lui44GV44Gb44KLCgrjg5Hjg6njg6Hjg7zjgr8gfCDmhI/lkbMgfCDljZjkvY0KLS0tIHwgLS0tIHwgLS0tCmFuZ2xlIHwg54++5Zyo44Gu6KeS5bqm44GrICoq6Laz44GX566XKiog44GZ44KL6KeS5bqmIHwgKnJhZCoKY2VudGVyWCB8IOWbnui7ouOBruS4reW/g++8iCAwIOOBquOCieOCueOCv+ODg+OCr+OBruW3puerr++8iSB8IHB4CmNlbnRlclkgfCDlm57ou6Ljga7kuK3lv4PvvIggMCDjgarjgonjgrnjgr/jg4Pjgq/jga7kuIrnq6/vvIkgfCBweAoKIyMjIENvbXBvc2l0ZS5zY2FsZShzdGFjaywgYHNjYWxlWGAsIGBzY2FsZVlgLCAgeyB4OiBgY2VudGVyWGAsIHk6IGBjZW50ZXJZYCB9KQoK44K544K/44OD44Kv5YWo5L2T44KS5ouh5aSn44GV44Gb44KLCgrjg5Hjg6njg6Hjg7zjgr8gfCDmhI/lkbMgfCDljZjkvY0KLS0tIHwgLS0tIHwgLS0tCnNjYWxlWCB8IOaoquaWueWQkeOBqyAqKuOBi+OBkeeulyoqIOOBmeOCi+Wkp+OBjeOBlSAoIDEg44Gq44KJ5aSJ5YyW44Gq44GXKSB8IOWAjQpzY2FsZVkgfCDnuKbmlrnlkJHjgasgKirjgYvjgZHnrpcqKiDjgZnjgovlpKfjgY3jgZUgKCAxIOOBquOCieWkieWMluOBquOBlykgfCDlgI0KY2VudGVyWCB8IOaLoeWkp+OBruS4reW/g++8iCAwIOOBquOCieOCueOCv+ODg+OCr+OBruW3puerr++8iSB8IHB4CmNlbnRlclkgfCDmi6HlpKfjga7kuK3lv4PvvIggMCDjgarjgonjgrnjgr/jg4Pjgq/jga7kuIrnq6/vvIkgfCBweAoKClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoK","options":{"isTrashed":false},"credits":[]},{"name":"compositeManipulation/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgrnjgr/jg4Pjgq/lhajkvZPjga7mk43kvZw8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjb21wb3NpdGVNYW5pcHVsYXRpb24vbWFpbi5qcyI+PC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+CjwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"compositeManipulation/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUV2ZW50cywKCUNvbXBvc2l0ZSwKCUNvbXBvc2l0ZXMsCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKLy8g5LiL5pa55ZCR44G444Gu6YeN5YqbCndvcmxkLmdyYXZpdHkueSA9IDA7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7CnJlbmRlci5vcHRpb25zLnNob3dBbmdsZUluZGljYXRvciA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgkvLyDlo4EKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KQpdKTsKCi8vIOOCquODluOCuOOCp+OCr+ODiOOBruOCueOCv+ODg+OCrwpjb25zdCBzdGFjayA9IENvbXBvc2l0ZXMuc3RhY2soMjAwLCAyMDAsIDQsIDQsIDAsIDAsICh4LCB5KSA9PiB7CglyZXR1cm4gQm9kaWVzLnJlY3RhbmdsZSh4LCB5LCA0MCwgNDApOwp9KTsKCldvcmxkLmFkZCh3b3JsZCwgc3RhY2spOwoKRXZlbnRzLm9uKGVuZ2luZSwgJ2FmdGVyVXBkYXRlJywgKGV2ZW50KSA9PiB7CgkvLyDmr47jg5Xjg6zjg7zjg6DjgZPjgZPjgavlhaXjgosKCWNvbnN0IHRpbWUgPSBlbmdpbmUudGltaW5nLnRpbWVzdGFtcDsKCglDb21wb3NpdGUudHJhbnNsYXRlKHN0YWNrLCB7CgkJeDogTWF0aC5zaW4odGltZSAqIDAuMDAxKSAqIDIsCgkJeTogMAoJfSk7CgoJQ29tcG9zaXRlLnJvdGF0ZShzdGFjaywgTWF0aC5zaW4odGltZSAqIDAuMDAxKSAqIDAuMDEsIHsKCQl4OiAzMDAsCgkJeTogMzAwCgl9KTsKCgljb25zdCBzY2FsZSA9IDEgKyAoTWF0aC5zaW4odGltZSAqIDAuMDAxKSAqIDAuMDEpOwoKCUNvbXBvc2l0ZS5zY2FsZShzdGFjaywgc2NhbGUsIHNjYWxlLCB7CgkJeDogMzAwLAoJCXk6IDMwMAoJfSk7Cn0pOwoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdjb21wb3NpdGVNYW5pcHVsYXRpb24vUkVBRE1FLm1kJyk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"compound/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgqrjg5bjgrjjgqfjgq/jg4jjga7lkIjmiJAKCuOCquODluOCuOOCp+OCr+ODiOOCkuWQiOaIkOOBl+OBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXShjb21wb3VuZC9tYWluLmpzKQoKKipCb2R5LmNyZWF0ZSh7ICAK44CA44CAcGFydHM6IFsgIArjgIDjgIDjgIDjgIBgMWAsICAK44CA44CA44CA44CAYDJgLCAgCuOAgOOAgOOAgOOAgGAuLi5gLCAgCuOAgOOAgF0sICAK44CAfSk7KioKCnx8IOaEj+WRsyB8IOOBr+OCk+OBhAotLS0gfCAtLS0gfCAtLS0gCjEgfCDjgqrjg5bjgrjjgqfjgq/jg4ggfCDjgarjgZcKMiB8IOOCquODluOCuOOCp+OCr+ODiCB8IOOBquOBlwouLi4gfCDjgqrjg5bjgrjjgqfjgq/jg4ggfCDjgarjgZcKCgrjgoLjgaPjgajmlLnpgKAKIVvoqK3lrppdKGNvbXBvdW5kL3NldHRpbmcuanMpCiFb44GL44G544O744KG44GLXShjb21wb3VuZC9zdGFnZS5qcykKCgotIC0gLQoKIyMg5b+c55So5L6LCgo=","options":{"isTrashed":false},"credits":[]},{"name":"compound/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgqrjg5bjgrjjgqfjgq/jg4jjga7lkIjmiJA8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjb21wb3VuZC9tYWluLmpzIj48L3NjcmlwdD4KPC9oZWFkPgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"compound/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUJvZHksCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKCi8vIOaoquajkgpjb25zdCBwYXJ0QSA9IEJvZGllcy5yZWN0YW5nbGUoMjAwLCAzMDAsIDIwMCwgNDApOwovLyDjgr/jg4bmo5IKY29uc3QgcGFydEIgPSBCb2RpZXMucmVjdGFuZ2xlKDIwMCwgMzAwLCA0MCwgMjAwLCB7CgkvLyDmqKrmo5Ig44Go6Imy44KS5ZCM44GY44Gr44GZ44KLCglyZW5kZXI6IHBhcnRBLnJlbmRlciwKCQp9KTsKCi8vIHBhcnRBIOOBqCBwYXJ0QiDjgpLlkIjmiJAKY29uc3QgcGFydEFCID0gQm9keS5jcmVhdGUoewoJcGFydHM6IFsKCQlwYXJ0QSwgCgkJcGFydEIsCgkJCgldCn0pOwoKV29ybGQuYWRkKHdvcmxkLCBbCgkvLyDvvIsg44Gu44Kq44OW44K444Kn44Kv44OICglwYXJ0QUIsCgkKXSk7CgoKLy8g5LiK44Gu54K5CmNvbnN0IHBhcnQxID0gQm9kaWVzLmNpcmNsZSg2MDAsIDIyMCwgMzApOwovLyDmqKrmo5IKY29uc3QgcGFydDIgPSBCb2RpZXMucmVjdGFuZ2xlKDYwMCwgMzAwLCAyMDAsIDQwLCB7CgkvLyDkuIrjga7ngrkg44Go6Imy44KS5ZCM44GY44Gr44GZ44KLCglyZW5kZXI6IHBhcnQxLnJlbmRlciwKCQp9KTsKLy8g5LiL44Gu54K5CmNvbnN0IHBhcnQzID0gQm9kaWVzLmNpcmNsZSg2MDAsIDM4MCwgMzAsIHsKCS8vIOS4iuOBrueCuSDjgajoibLjgpLlkIzjgZjjgavjgZnjgosKCXJlbmRlcjogcGFydDEucmVuZGVyLAoJCn0pOwoKLy8gcGFydEMg44GoIHBhcnREIOOBqCBwYXJ0RSDjgpLlkIjmiJAKY29uc3QgcGFydDEyMyA9IEJvZHkuY3JlYXRlKHsKCXBhcnRzOiBbCgkJcGFydDEsIAoJCXBhcnQyLAoJCXBhcnQzLAoJCQoJXQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8gw7cg44Gu44Kq44OW44K444Kn44Kv44OICglwYXJ0MTIzLAoJCl0pOwoKCmltcG9ydCAnLi9zdGFnZSc7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"compound/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QXhlcyA9IHRydWU7CnJlbmRlci5vcHRpb25zLnNob3dQb3NpdGlvbnMgPSB0cnVlOwpyZW5kZXIub3B0aW9ucy5zaG93Q29udmV4SHVsbHMgPSB0cnVlOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnY29tcG91bmQvUkVBRE1FLm1kJyk7CgoKZXhwb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAoJcmVuZGVyLAp9Owo=","options":{"isTrashed":false},"credits":[]},{"name":"compound/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g44GL44G544Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJCl0pOwo=","options":{"isTrashed":false},"credits":[]},{"name":"compoundStack/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDlkIjmiJDjgZfjgZ/jgqrjg5bjgrjjgqfjgq/jg4jjga7jgrnjgr/jg4Pjgq8KCuWQiOaIkOOBl+OBn+OCquODluOCuOOCp+OCr+ODiOOCkuS4gOawl+OBq+WHuuOBl+OBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCiMjIOaUuemAoOOBl+OBpuOBv+OCiwoKIVvjgZPjgZPjgYvjgonlp4vjgoHjgotdKGNvbXBvdW5kU3RhY2svbWFpbi5qcykKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0oY29tcG91bmRTdGFjay9zZXR0aW5nLmpzKQohW+OBi+OBueODu+OChuOBi10oY29tcG91bmRTdGFjay9zdGFnZS5qcykKCg==","options":{"isTrashed":false},"credits":[]},{"name":"compoundStack/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7lkIjmiJDjgZfjgZ/jgqrjg5bjgrjjgqfjgq/jg4jjga7jgrnjgr/jg4Pjgq88L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjb21wb3VuZFN0YWNrL21haW4uanMiPjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5Pgo8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"compoundStack/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUJvZHksCglDb21wb3NpdGVzLAoJV29ybGQsCglCb2RpZXMsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOWQiOaIkOOBl+OBn+OCquODluOCuOOCp+OCr+ODiOOBruOCueOCv+ODg+OCrwpjb25zdCBzdGFjayA9IENvbXBvc2l0ZXMuc3RhY2soMTAwLCAyODAsIDEyLCA2LCAwLCAwLCAoeCwgeSkgPT4gewoJLy8g5qiq5qOSCgljb25zdCBwYXJ0QSA9IEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgNTAsIDEwKTsKCS8vIOOCv+ODhuajkgoJY29uc3QgcGFydEIgPSBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIDEwLCA1MCwgewoJCS8vIOaoquajkuOBqOimi+OBn+ebruOCkuWQjOOBmOOBq+OBmeOCiwoJCXJlbmRlcjogcGFydEEucmVuZGVyLAoJCQoJfSk7CgkKCS8vIOWQiOaIkOOBleOCjOOBn+OCquODluOCuOOCp+OCr+ODiOOBruOBsuOBqOOBpAoJcmV0dXJuIEJvZHkuY3JlYXRlKHsKCQlwYXJ0czogWwoJCQlwYXJ0QSwgCgkJCXBhcnRCLAoJCV0KCX0pOwp9KTsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g44K544K/44OD44KvCglzdGFjaywKCQpdKTsKCgppbXBvcnQgJy4vc3RhZ2UnOwo=","options":{"isTrashed":false},"credits":[]},{"name":"compoundStack/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QW5nbGVJbmRpY2F0b3IgPSB0cnVlOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnY29tcG91bmRTdGFjay9SRUFETUUubWQnKTsKCgpleHBvcnQgewoJZW5naW5lLAoJd29ybGQsCglyZW5kZXIsCn07Cg==","options":{"isTrashed":false},"credits":[]},{"name":"compoundStack/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g44GL44G544Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJCl0pOwo=","options":{"isTrashed":false},"credits":[]},{"name":"concave/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDlpb3jgY3jgarlvaLjga7jgqrjg5bjgrjjgqfjgq/jg4gKCgpgVmVydGljZXMuZnJvbVBhdGhgIOOBqCBgQm9kaWVzLmZyb21WZXJ0aWNlc2Ag44KS5L2/44GI44Gw44CBICAK5aW944GN44Gq5b2i44Gu44Kq44OW44K444Kn44Kv44OI44KS5L2c44KL44GT44Go44GM44Gn44GN44KL44KICgoK5aSn44G+44GL44Gq5Y6f55CG44Gv44CBIFNWRyDjgpLkvb/jgYbjgajjgY3jgajlkIzjgZjjgarjgpPjgaDjgIIgIArjgZPjgZPjgafjga8gU1ZHIOW9ouW8j+OBrueUu+WDj+OCkuS9v+OBhuS7o+OCj+OCiuOBq+OAgSAgCuODmeOCr+ODiOODq++8iOaVsOWtl+OBrumbhuOBvuOCiu+8ieOCkuebtOaOpeaJi+OBp+abuOOBj+aWueazleOCkuS9v+OBhuOCiAoKIyMg5rWB44KMCgoxLiBgVmVydGljZXMuZnJvbVBhdGhgIOOBp+OAgeODmeOCr+ODiOODq+ODh+ODvOOCv+OCkuOBpOOBj+OCiwoyLiBgQm9kaWVzLmZyb21WZXJ0aWNlc2Ag44Gn44CB44Kq44OW44K444Kn44Kv44OI44KS44Gk44GP44KLCjMuIOOCquODluOCuOOCp+OCr+ODiOOCkuOBvuOBqOOCgeOBn+OCueOCv+ODg+OCr+OCkuOBpOOBj+OCiwoKCiMjICFb5pS56YCg44GZ44KLXShjb25jYXZlL21haW4uanMpCgoKIyMjIEJvZGllcy5mcm9tVmVydGljZXMoYHhgLCBgeWAsIGB2ZXJ0aWNlc2AsIHsgcmVuZGVyOiBgcmVuZGVyYCB9KQrjg5Hjg6njg6Hjg7zjgr8gfCDmhI/lkbMgfCDljZjkvY0gfCDmnIDlsI8gfCDmnIDlpKcgCi0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8IC0tLQp4IHwg44Kq44OW44K444Kn44Kv44OI44Gu5L2N572u77yI5qiq77yJIHwgcHggfCAwIHwgODAwCnkgfCDjgqrjg5bjgrjjgqfjgq/jg4jjga7kvY3nva7vvIjnuKbvvIkgfCBweCB8IDAgfCA2MDAgCnZlcnRpY2VzIHwg44OZ44Kv44OI44Or44OH44O844K/IHwgIHwgfCAKcmVuZGVyIHwgfCB8IHwKZmlsbFN0eWxlIHwg5aGX44KK44Gk44G244GX44Gu6ImyIHwg6ImyIHwgfCAKc3Ryb2tlU3R5bGUgfCDnt5rjga7oibIgfCDoibIgfCB8IApsaW5lV2lkdGggfCDnt5rjga7lpKrjgZUgfCBweCB8IDAgfCBJbmZpbml0eQoKCiMjIOODmeOCr+ODiOODq+ODh+ODvOOCv+OBruabuOOBjeaWuQoKYCc0MCAwIDQwIDIwIC4uLiAwIDUwJ2Ag44Go44GE44GG5paH5a2X5YiX44Gu6YOo5YiG44GM44OZ44Kv44OI44Or44OH44O844K/44Gg44KIICAK44G+44Ga44Gv44CB44Gd44KM44Ge44KM44Gu5pWw5a2X44KS5LqM44Gk44Ga44Gk44Gr5Yy65YiH44Gj44Gm44G/44Gm44G/44KI44GGICAKYDQwIDBgIGA0MCAyMGAgLi4uIGAwIDUwYCDjgb/jgZ/jgYTjgavjga0gIArlrp/jga/jgIHjgZPjga7jgYvjgZ/jgb7jgorkuIDjgaTkuIDjgaTjgYzjgIHngrnjga7kvY3nva7jgpLooajjgZfjgabjgYTjgovjgpPjgaAKCuS4gOi+uuOBrumVt+OBleOBjCAxMDAg44Gu5q2j5pa55b2i44KS44Kk44Oh44O844K444GX44Gm44G/44KI44GGICAK44Gd44Gu5q2j5pa55b2i44Gu5Lit44GnIGA0MCAwYCBgNDAgMjBgIC4uLiBgMCA1MGAg44GMICAK44Gd44KM44Ge44KM44Gp44Gu5L2N572u44Gr5p2l44KL44Gu44GL44KS6ICD44GI44Gm44G/44KI44GGCgrliIbjgYvjgorjgavjgY/jgYTjgajjgY3jga/jgIHjgajjgorjgYLjgYjjgZrmm7jjgYTjgabjgb/jgabjgIEgIArjganjgYbjgarjgovjgYvoqabjgZfjgabjgb/jgojjgYYKCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoK","options":{"isTrashed":false},"credits":[]},{"name":"concave/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7lpb3jgY3jgarlvaLjga7jgqrjg5bjgrjjgqfjgq/jg4g8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjb25jYXZlL21haW4uanMiPjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5Pgo8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"concave/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJVmVydGljZXMsCglCb2RpZXMsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g5aOBCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCA2MDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDgwMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSkKXSk7CgovLyDjg5njgq/jg4jjg6vjg4fjg7zjgr8KY29uc3QgYXJyb3cgPSBWZXJ0aWNlcy5mcm9tUGF0aCgnNDAgMCA0MCAyMCAxMDAgMjAgMTAwIDgwIDQwIDgwIDQwIDEwMCAwIDUwJyk7CmNvbnN0IGNoZXZyb24gPSBWZXJ0aWNlcy5mcm9tUGF0aCgnMTAwIDAgNzUgNTAgMTAwIDEwMCAyNSAxMDAgMCA1MCAyNSAwJyk7CmNvbnN0IHN0YXIgPSBWZXJ0aWNlcy5mcm9tUGF0aCgnNTAgMCA2MyAzOCAxMDAgMzggNjkgNTkgODIgMTAwIDUwIDc1IDE4IDEwMCAzMSA1OSAwIDM4IDM3IDM4Jyk7CmNvbnN0IGhvcnNlU2hvZSA9IFZlcnRpY2VzLmZyb21QYXRoKCczNSA3IDE5IDE3IDE0IDM4IDE0IDU4IDI1IDc5IDQ1IDg1IDY1IDg0IDY1IDY2IDQ2IDY3IDM0IDU5IDMwIDQ0IDMzIDI5IDQ1IDIzIDY2IDIzIDY2IDcgNTMgNycpOwoKLy8g44OZ44Kv44OI44Or44OH44O844K/44GL44KJ44Kq44OW44K444Kn44Kv44OI44KS5L2c44Gj44Gm44CBIDI0IOWAi+OBruOCueOCv+ODg+OCr+OBq+OBmeOCiwpjb25zdCBzdGFjayA9IENvbXBvc2l0ZXMuc3RhY2soNTAsIDUwLCA2LCA0LCAxMCwgMTAsIGZ1bmN0aW9uKHgsIHkpIHsKCWNvbnN0IGNvbG9yID0gQ29tbW9uLmNob29zZShbJyM1NTYyNzAnLCAnIzRFQ0RDNCcsICcjQzdGNDY0JywgJyNGRjZCNkInLCAnI0M0NEQ1OCddKTsKCXJldHVybiBCb2RpZXMuZnJvbVZlcnRpY2VzKHgsIHksIENvbW1vbi5jaG9vc2UoW2Fycm93LCBjaGV2cm9uLCBzdGFyLCBob3JzZVNob2VdKSwgewoJCXJlbmRlcjogewoJCQlmaWxsU3R5bGU6IGNvbG9yLAoJCQlzdHJva2VTdHlsZTogY29sb3IsCgkJCWxpbmVXaWR0aDogMQoJCX0KCX0sIHRydWUpOwp9KTsKCldvcmxkLmFkZCh3b3JsZCwgc3RhY2spOwoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdjb25jYXZlL1JFQURNRS5tZCcpOwo=","options":{"isTrashed":false},"credits":[]},{"name":"constraint/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg5Djg40KCuODkOODjeOBo+OBveOBhOWLleOBjeOCkuS9nOOBo+OBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXShjb25zdHJhaW50L21haW4uanMpCgoqKkNvbnN0cmFpbnQuY3JlYXRlKHsgIArjgIDjgIBib2R5QTogYDFgLCAgCuOAgOOAgHBvaW50QjogeyAgCuOAgOOAgOOAgOOAgHg6IGAyYCwgIArjgIDjgIDjgIDjgIB5OiBgM2AsICAK44CA44CAfSwgIArjgIDjgIBzdGlmZm5lc3M6IGA0YCwgIAp9KTsqKgoKfHwg5oSP5ZGzIHwg44Gv44KT44GECi0tLSB8IC0tLSB8IC0tLSAKMSB8IOOCquODluOCuOOCp+OCr+ODiCB8IOOBquOBlwoyIHwg5bem44GL44KJ44Gu44Kt44On44OqIHwgMCB+IDgwMAozIHwg5LiK44GL44KJ44Gu44Kt44On44OqIHwgMCB+IDYwMAo0IHwg44OQ44ON44Gu5by344GVIHwgMCB+IDEuMAoKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0oY29uc3RyYWludC9zZXR0aW5nLmpzKQoKIyMg44Kz44Op44OgIOOAjOODleODg+OCr+OBruazleWJh+OAjQoK44OV44OD44Kv44Gu5rOV5YmH44Gr44KI44KL44GoIOODkOODjSDjgYzlhYPjgavmiLvjgo3jgYbjgajjgZnjgovlipvjga/jgIEgIArjg5Djg43jgYzkvLjjgbPjgZ/plbfjgZXjgavjgIHjgYLjgovlrprmlbDjgpLjgYvjgZHjgZ/jgoLjga7jgarjgpPjgaAgIArkvLjjgbPjgZ/plbfjgZXjgYzlgI3jgavjgarjgozjgbDjgIHmiLvjgo3jgYbjgajjgZnjgovlipvjgoLlgI3jgavjgarjgovjgpPjgaDjga0KCuOBguOCi+WumuaVsOOBruOBk+OBqOOCkiAqKuODkOODjeWumuaVsCoqIOOBqOiogOOBo+OBpuOAgSAgCuODkeODqeODoeODvOOCv+OBp+OBryBgc3RpZmZuZXNzYCDjga7jgZPjgajjgaDjgogKCi0gLSAtCgojIyDlv5znlKjkvosKClvjgrnjg6rjg7PjgrDjgrfjg6fjg4Pjg4hdKHNsaW5nc2hvdC9pbmRleC5odG1sKQpb44Oi44Oz44Kx44O844OzXSh3cmVja2luZ0JhbGwvaW5kZXguaHRtbCkKW+ODluODquODg+OCuF0oYnJpZGdlL2luZGV4Lmh0bWwpClvnmbrlsITlj7BdKGNhdGFwdWx0L2luZGV4Lmh0bWwpCg==","options":{"isTrashed":false},"credits":[]},{"name":"constraint/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jg5Djg408L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJjb25zdHJhaW50L21haW4uanMiPjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5Pgo8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"constraint/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAoJQ29uc3RyYWludCwKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKLy8g44Kq44OW44K444Kn44Kv44OI44KS44Gk44GP44KLCmNvbnN0IHNxdWFyZTEgPSBCb2RpZXMucmVjdGFuZ2xlKDIwMCwgMTAwLCAxMDAsIDEwMCk7CgovLyDjgqrjg5bjgrjjgqfjgq/jg4jjgpLnqbrkuK3jgavlm7rlrprjgZnjgovjg5Djg40KY29uc3Qgc3ByaW5nMSA9IENvbnN0cmFpbnQuY3JlYXRlKHsKCS8vIOWbuuWumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiAoJYm9keUE6IHNxdWFyZTEsCgkvLyDlm7rlrprjgZnjgovkvY3nva4KCXBvaW50Qjoge+OAgOOAgAoJCXg6IDQwMCwKCQl5OiAxMDAsCgl9LAoJLy8g44OQ44ON44Gu5by344GVCglzdGlmZm5lc3M6IDAuMDAxLAp9KTsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g44Kq44OW44K444Kn44Kv44OICglzcXVhcmUxLAoJLy8g44OQ44ONCglzcHJpbmcxLAoJCl0pOwoKCgo=","options":{"isTrashed":false},"credits":[]},{"name":"constraint/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QXhlcyA9IHRydWU7CnJlbmRlci5vcHRpb25zLmJhY2tncm91bmQgPSAnIzAwMDAwMCc7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdjb25zdHJhaW50L1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"constraint/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK","options":{"isTrashed":false},"credits":[]},{"name":"density/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgYrjgoLjgZUKCuOCquODluOCuOOCp+OCr+ODiOOBriBb44G/44Gk5bqmXShodHRwczovL2phLndpa2lwZWRpYS5vcmcvd2lraS8lRTUlQUYlODYlRTUlQkElQTYpCuOCkuWkieOBiOOBpuOAgemHjeOBj+OBl+OBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXShkZW5zaXR5L21haW4uanMpCgoKfHwg5oSP5ZGzIHwg44Gv44KT44GEIAotLS0gfCAtLS0gfCAtLS0gCmRlbnNpdHkgfCDjgYrjgoLjgZXjga7jgb/jgaTluqYgfCAwIH4gCgrjgoLjgaPjgajmlLnpgKAKIVvoqK3lrppdKGRlbnNpdHkvc2V0dGluZy5qcykKIVvjgYvjgbnjg7vjgobjgYtdKGRlbnNpdHkvc3RhZ2UuanMpCgotIC0gLQoKIyMg5b+c55So5L6LCgpb44K544Oq44Oz44Kw44K344On44OD44OIXShzbGluZ3Nob3QvaW5kZXguaHRtbCkgIApb44Oi44Oz44Kx44O844OzXSh3cmVja2luZ0JhbGwvaW5kZXguaHRtbCkgIApb55m65bCE5Y+wXShjYXRhcHVsdC9pbmRleC5odG1sKSAgCg==","options":{"isTrashed":false},"credits":[]},{"name":"density/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgYrjgoLjgZU8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJkZW5zaXR5L21haW4uanMiPjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5Pgo8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"density/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nLmpzJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCQoJLy8g44GL44KL44GE44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDMwMCwgNDMwLCAzMCwgNTAwLCB7CgkJLy8g44G/44Gk5bqm77yI44GK44KC44GV77yJCgkJZGVuc2l0eTogMTAwLAoJCS8vIOWwkeOBl+OBoOOBkeWCvuOBkeOCiwoJCWFuZ2xlOiAwLjEsCgkJCgl9KSwKCQoJLy8g44GK44KC44GE44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNDMwLCAzMCwgNTAwLCB7CgkJLy8g44G/44Gk5bqm77yI44GK44KC44GV77yJCgkJZGVuc2l0eTogMTUsCgkJCgl9KSwKCQpdKTsKCgppbXBvcnQgJy4vc3RhZ2UuanMnOwo=","options":{"isTrashed":false},"credits":[]},{"name":"density/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVdvcmxkLAoJUnVubmVyLAoJTW91c2UsCglNb3VzZUNvbnN0cmFpbnQsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdkZW5zaXR5L1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"density/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgovLyDlo4EKV29ybGQuYWRkKHdvcmxkLCBbCgkKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCA2MDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCgkKXSk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"engine.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCUdyaWQsCn0gZnJvbSAnbWF0dGVyLmpzJzsKCi8vIGNyZWF0ZSBhbiBlbmdpbmUKZXhwb3J0IGRlZmF1bHQgRW5naW5lLmNyZWF0ZSh7Cglwb3NpdGlvbkl0ZXJhdGlvbnM6IDYsCgl2ZWxvY2l0eUl0ZXJhdGlvbnM6IDQsCgljb25zdHJhaW50SXRlcmF0aW9uczogMiwKCWVuYWJsZVNsZWVwaW5nOiB0cnVlLAoJZXZlbnRzOiBbXSwKCXRpbWluZzogewoJCXRpbWVzdGFtcDogMCwKCQl0aW1lU2NhbGU6IDEKCX0sCglicm9hZHBoYXNlOiB7CgkJY29udHJvbGxlcjogR3JpZAoJfQp9KTsK","options":{"isTrashed":false},"credits":[]},{"name":"engineConfigs.js","type":"application/javascript","lastModified":1492756455000,"composed":"ZXhwb3J0IGRlZmF1bHQgewoJcG9zaXRpb25JdGVyYXRpb25zOiA2LAoJdmVsb2NpdHlJdGVyYXRpb25zOiA0LAoJY29uc3RyYWludEl0ZXJhdGlvbnM6IDIsCgllbmFibGVTbGVlcGluZzogdHJ1ZSwKCWV2ZW50czogW10sCgl0aW1pbmc6IHsKCQl0aW1lc3RhbXA6IDAsCgkJdGltZVNjYWxlOiAxCgl9LAoJYnJvYWRwaGFzZTogewoJCWNvbnRyb2xsZXI6IEdyaWQKCX0KfTsK","options":{"isTrashed":false},"credits":[]},{"name":"events/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgqTjg5njg7Pjg4gKCgrjgYLjgovlh7rmnaXkuovjgYzotbfjgZPjgaPjgZ/jgajjgY3jgIEgIArjgYLjgonjgYvjgZjjgoHoqK3lrprjgZfjgabjgYrjgYTjgZ/plqLmlbDjgpLlrp/ooYzjgZnjgovku5XntYTjgb/jga7jgZPjgajjgpLjgIEgIArjgqTjg5njg7Pjg4jjgajlkbzjgbbjgogKCuOBk+OBruOCteODs+ODl+ODq+OBp+OBr+OAgSAgCi0g44Oe44Km44K544Gn44Kv44Oq44OD44Kv44GV44KM44GfCi0g77yV56eS44Gf44Gj44Gf77yI57mw44KK6L+U44GZ77yJICAK44Gu44Gp44Gh44KJ44GL44Gu5Ye65p2l5LqL44GM6LW344GT44Gj44Gf44Go44GN44CB55S76Z2i5YWo5L2T44KS44K344Kn44Kk44Kv44GZ44KL44KICgojIyAhW+aUuemAoOOBmeOCi10oZXZlbnRzL21haW4uanMpCgojIyDjgqTjg5njg7Pjg4jjga7nqK7poZ4KCuiqsOOBjOi1t+OBk+OBmeOCpOODmeODs+ODiOOBiyB8IOOCpOODmeODs+ODiOOBruWQjeWJjSB8IOaEj+WRswotLS0gfCAtLS0gfCAtLS0Kd29ybGQgfCBhZnRlckFkZCB8IOOCquODluOCuOOCp+OCr+ODiOOChOOCueOCv+ODg+OCr+OBjOaWsOOBl+OBj+i/veWKoOOBleOCjOOBn+OBqOOBjQplbmdpbmUgfCBiZWZvcmVVcGRhdGUgfCDlrp/ooYzkuK3jga/luLjjgavmr47jg5Xjg6zjg7zjg6AKZW5naW5lIHwgY29sbGlzaW9uU3RhcnQgfCDjgYTjgZrjgozjgYvjga7jgqrjg5bjgrjjgqfjgq/jg4jjgYzjgZfjgofjgYbnqoHjgZfjgZ/jgajjgY0KZW5naW5lIHwgY29sbGlzaW9uQWN0aXZlIHwg44GE44Ga44KM44GL44Gu44Kq44OW44K444Kn44Kv44OI44GM44GX44KH44GG56qB44GX57aa44GR44Gm44GE44KL6ZaT5bi444GrCmVuZ2luZSB8IGNvbGxpc2lvbkVuZCB8IOOBl+OCh+OBhueqgeOBjOe1guOCj+OBo+OBn++8iOmbouOCjOOBn++8ieOBqOOBjQptb3VzZUNvbnN0cmFpbnQgfCBtb3VzZWRvd24gfCDjg57jgqbjgrnjgYzmirzjgZXjgozjgZ/jgajjgY0KbW91c2VDb25zdHJhaW50IHwgbW91c2V1cCB8IOODnuOCpuOCueOBjOmbouOCjOOBn+OBn+OBqOOBjQptb3VzZUNvbnN0cmFpbnQgfCBzdGFydGRyYWcgfCDjg57jgqbjgrnjgYzjg4njg6njg4PjgrDjgpLlp4vjgoHjgZ/jgajjgY0KbW91c2VDb25zdHJhaW50IHwgZW5kZHJhZyB8IOODnuOCpuOCueOBjOODieODqeODg+OCsOOCkue1guOBiOOBn+OBqOOBjQoKCiMjIGNvbnNvbGUubG9nIOOBq+OBpOOBhOOBpgoK44GC44KL5aSJ5pWw44Gu5Lit6Lqr44KS44CB44Kz44Oz44K944O844Or44Go44GE44GG6YOo5YiG44Gr6KGo56S644GZ44KL5qmf6IO944Gg44KIICAK56K66KqN44GZ44KL44Gr44Gv44CB44OW44Op44Km44K244GuICoq6ZaL55m66ICF44OE44O844OrKiog44KS6ZaL44GT44GGCgotIFdpbmRvd3Mg44Gu5aC05ZCIIEYxMiDjgq3jg7wKLSBNYWMg44Gu5aC05ZCIIEFsdCArIENtZCArIEkg44Kt44O8CgoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgotIC0gLQoKIyMg5b+c55So5L6LCgpb44K544Oq44Oz44Kw44K344On44OD44OIXShzbGluZ3Nob3QvaW5kZXguaHRtbCkKCg==","options":{"isTrashed":false},"credits":[]},{"name":"events/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgqTjg5njg7Pjg4g8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJldmVudHMvbWFpbi5qcyI+PC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHk+CjwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"events/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUJvZHksCglFdmVudHMsCglDb21wb3NpdGUsCglDb21wb3NpdGVzLAoJQ29tbW9uLAoJTW91c2VDb25zdHJhaW50LAoJTW91c2UsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgpFdmVudHMub24od29ybGQsICdhZnRlckFkZCcsIChldmVudCkgPT4gewoJLy8g44Kq44OW44K444Kn44Kv44OI44KE44K544K/44OD44Kv44GM5paw44GX44GP6L+95Yqg44GV44KM44Gf44Go44GN44CB44GT44GT44Gr5YWl44KLCgljb25zb2xlLmxvZygnYWRkZWQgdG8gd29ybGQ6JywgZXZlbnQub2JqZWN0KTsKCn0pOwoKRXZlbnRzLm9uKGVuZ2luZSwgJ2JlZm9yZVVwZGF0ZScsIChldmVudCkgPT4gewoJLy8g5a6f6KGM5Lit44Gv5bi444Gr5q+O44OV44Os44O844Og44CB44GT44GT44Gr5YWl44KLCgljb25zdCBlbmdpbmUgPSBldmVudC5zb3VyY2U7CglpZiAoZXZlbnQudGltZXN0YW1wICUgNTAwMCA8IDUwKSB7CgoJCS8vIDXnp5LjgYrjgY3jgavjgIHjgZPjgZPjgavlhaXjgosKCQlzaGFrZVNjZW5lKGVuZ2luZSk7CgoJfQoKfSk7CgpFdmVudHMub24oZW5naW5lLCAnY29sbGlzaW9uU3RhcnQnLCAoZXZlbnQpID0+IHsKCS8vIOOBhOOBmuOCjOOBi+OBruOCquODluOCuOOCp+OCr+ODiOOBjOOBl+OCh+OBhueqgeOBl+OBn+OBqOOBjeOAgeOBk+OBk+OBq+WFpeOCiwoKCS8vIOOBl+OCh+OBhueqgeOBl+OBn+S4oeaWueOBruOCquODluOCuOOCp+OCr+ODiOOBruiJsuOCkuWkieOBiOOCiwoJZm9yIChjb25zdCBwYWlyIG9mIGV2ZW50LnBhaXJzKSB7CgkJcGFpci5ib2R5QS5yZW5kZXIuZmlsbFN0eWxlID0gJyMzMzMnOwoJCXBhaXIuYm9keUIucmVuZGVyLmZpbGxTdHlsZSA9ICcjMzMzJzsKCX0KCn0pOwoKRXZlbnRzLm9uKGVuZ2luZSwgJ2NvbGxpc2lvbkFjdGl2ZScsIChldmVudCkgPT4gewoJLy8g44GE44Ga44KM44GL44Gu44Kq44OW44K444Kn44Kv44OI44GM44GX44KH44GG56qB44GX57aa44GR44Gm44GE44KL6ZaT5bi444Gr44CB44GT44GT44Gr5YWl44KLCgoJLy8g44GX44KH44GG56qB44GX44Gm44GE44KL5Lih5pa544Gu44Kq44OW44K444Kn44Kv44OI44Gu6Imy44KS5aSJ44GI44KLCglmb3IgKGNvbnN0IHBhaXIgb2YgZXZlbnQucGFpcnMpIHsKCQlwYWlyLmJvZHlBLnJlbmRlci5maWxsU3R5bGUgPSAnIzMzMyc7CgkJcGFpci5ib2R5Qi5yZW5kZXIuZmlsbFN0eWxlID0gJyMzMzMnOwoJfQoKfSk7CgpFdmVudHMub24oZW5naW5lLCAnY29sbGlzaW9uRW5kJywgKGV2ZW50KSA9PiB7CgkvLyDjgZfjgofjgYbnqoHjgYzntYLjgo/jgaPjgZ/vvIjpm6LjgozjgZ/vvInjgajjgY3jgIHjgZPjgZPjgavlhaXjgosKCgkvLyDpm6LjgozjgZ/kuKHmlrnjga7jgqrjg5bjgrjjgqfjgq/jg4jjga7oibLjgpLlpInjgYjjgosJCglmb3IgKGNvbnN0IHBhaXIgb2YgZXZlbnQucGFpcnMpIHsKCQlwYWlyLmJvZHlBLnJlbmRlci5maWxsU3R5bGUgPSAnIzIyMic7CgkJcGFpci5ib2R5Qi5yZW5kZXIuZmlsbFN0eWxlID0gJyMyMjInOwoJfQoKfSk7Cgpjb25zdCBib2R5U3R5bGUgPSB7CglmaWxsU3R5bGU6ICcjMjIyJwp9OwoKV29ybGQuYWRkKHdvcmxkLCBbCgkvLyDlo4EKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgkJcmVuZGVyOiBib2R5U3R5bGUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJCXJlbmRlcjogYm9keVN0eWxlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCQlyZW5kZXI6IGJvZHlTdHlsZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJCXJlbmRlcjogYm9keVN0eWxlCgl9KQpdKTsKCi8vIOmjm+OBs+WbnuOBo+OBpuOBhOOCi+WGhuOBruOCueOCv+ODg+OCrwpjb25zdCBzdGFjayA9IENvbXBvc2l0ZXMuc3RhY2soNzAsIDEwMCwgOSwgNCwgNTAsIDUwLCAoeCwgeSkgPT4gewoJcmV0dXJuIEJvZGllcy5jaXJjbGUoeCwgeSwgMTUsIHsKCQlyZXN0aXR1dGlvbjogMSwKCQlyZW5kZXI6IGJvZHlTdHlsZQoJfSk7Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBzdGFjayk7CgovLyDnlLvpnaLlhajkvZPjgpLjgrfjgqfjgqTjgq/vvIEKY29uc3Qgc2hha2VTY2VuZSA9IChlbmdpbmUpID0+IHsKCWNvbnN0IGJvZGllcyA9IENvbXBvc2l0ZS5hbGxCb2RpZXMoZW5naW5lLndvcmxkKTsKCglmb3IgKGNvbnN0IGJvZHkgb2YgYm9kaWVzKSB7CgkJaWYgKCFib2R5LmlzU3RhdGljICYmIGJvZHkucG9zaXRpb24ueSA+PSA1MDApIHsKCQkJY29uc3QgZm9yY2VNYWduaXR1ZGUgPSAwLjAyICogYm9keS5tYXNzOwoKCQkJQm9keS5hcHBseUZvcmNlKGJvZHksIGJvZHkucG9zaXRpb24sIHsKCQkJCXg6IChmb3JjZU1hZ25pdHVkZSArIENvbW1vbi5yYW5kb20oKSAqIGZvcmNlTWFnbml0dWRlKSAqIENvbW1vbi5jaG9vc2UoWzEsIC0xXSksCgkJCQl5OiAtZm9yY2VNYWduaXR1ZGUgKyBDb21tb24ucmFuZG9tKCkgKiAtZm9yY2VNYWduaXR1ZGUKCQkJfSk7CgkJfQoJfQp9OwoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKRXZlbnRzLm9uKG1vdXNlQ29uc3RyYWludCwgJ21vdXNlZG93bicsIChldmVudCkgPT4gewoJLy8g44Oe44Km44K544GM5oq844GV44KM44Gf44Go44GN44CB44GT44GT44Gr5YWl44KLCgljb25zdCBtb3VzZVBvc2l0aW9uID0gZXZlbnQubW91c2UucG9zaXRpb247Cgljb25zb2xlLmxvZygnbW91c2Vkb3duIGF0ICcgKyBtb3VzZVBvc2l0aW9uLnggKyAnICcgKyBtb3VzZVBvc2l0aW9uLnkpOwoJc2hha2VTY2VuZShlbmdpbmUpOwoKfSk7CgpFdmVudHMub24obW91c2VDb25zdHJhaW50LCAnbW91c2V1cCcsIChldmVudCkgPT4gewoJLy8g44Oe44Km44K544GM6Zui44KM44Gf44Go44GN44CB44GT44GT44Gr5YWl44KLCgljb25zdCBtb3VzZVBvc2l0aW9uID0gZXZlbnQubW91c2UucG9zaXRpb247Cgljb25zb2xlLmxvZygnbW91c2V1cCBhdCAnICsgbW91c2VQb3NpdGlvbi54ICsgJyAnICsgbW91c2VQb3NpdGlvbi55KTsKCn0pOwoKRXZlbnRzLm9uKG1vdXNlQ29uc3RyYWludCwgJ3N0YXJ0ZHJhZycsIChldmVudCkgPT4gewoJLy8g44Oe44Km44K544GM44OJ44Op44OD44Kw44KS5aeL44KB44Gf44Go44GN44CB44GT44GT44Gr5YWl44KLCgljb25zb2xlLmxvZygnc3RhcnRkcmFnJywgZXZlbnQpOwoKfSk7CgpFdmVudHMub24obW91c2VDb25zdHJhaW50LCAnZW5kZHJhZycsIChldmVudCkgPT4gewoJLy8g44Oe44Km44K544GM44OJ44Op44OD44Kw44KS57WC44GI44Gf44Go44GN44CB44GT44GT44Gr5YWl44KLCgljb25zb2xlLmxvZygnZW5kZHJhZycsIGV2ZW50KTsKCn0pOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdldmVudHMvUkVBRE1FLm1kJyk7","options":{"isTrashed":false},"credits":[]},{"name":"feeles/card.json","type":"application/json","lastModified":1492756455000,"composed":"ewogICAgIk1vbml0b3JDYXJkIjogewogICAgICAgICJ2aXNpYmxlIjogdHJ1ZSwKICAgICAgICAib3JkZXIiOiAwLAogICAgICAgICJmcmFtZSI6IHsKICAgICAgICAgICAgInNyYyI6ICJpbmRleC5odG1sIiwKICAgICAgICAgICAgInNpemUiOiBbCiAgICAgICAgICAgICAgICA4MDAsCiAgICAgICAgICAgICAgICA2MDAKICAgICAgICAgICAgXQogICAgICAgIH0KICAgIH0sCiAgICAiU2hvdENhcmQiOiB7CiAgICAgICAgInZpc2libGUiOiBmYWxzZSwKICAgICAgICAib3JkZXIiOiAxLAogICAgICAgICJpbml0IjogewogICAgICAgICAgICAiZmlsZU5hbWUiOiAibWFpbi5qcyIKICAgICAgICB9CiAgICB9LAogICAgIkVkaXRvckNhcmQiOiB7CiAgICAgICAgInZpc2libGUiOiBmYWxzZSwKICAgICAgICAib3JkZXIiOiAyCiAgICB9LAogICAgIk1lZGlhQ2FyZCI6IHsKICAgICAgICAidmlzaWJsZSI6IGZhbHNlLAogICAgICAgICJvcmRlciI6IDMKICAgIH0sCiAgICAiQ3JlZGl0c0NhcmQiOiB7CiAgICAgICAgInZpc2libGUiOiBmYWxzZSwKICAgICAgICAib3JkZXIiOiA0CiAgICB9LAogICAgIlJlYWRtZUNhcmQiOiB7CiAgICAgICAgInZpc2libGUiOiB0cnVlLAogICAgICAgICJvcmRlciI6IDUsCiAgICAgICAgImluaXQiOiB7CiAgICAgICAgICAgICJmaWxlTmFtZSI6ICJSRUFETUUubWQiCiAgICAgICAgfQogICAgfSwKICAgICJQYWxldHRlQ2FyZCI6IHsKICAgICAgICAidmlzaWJsZSI6IGZhbHNlLAogICAgICAgICJvcmRlciI6IDYKICAgIH0sCiAgICAiU25pcHBldENhcmQiOiB7CiAgICAgICAgInZpc2libGUiOiBmYWxzZSwKICAgICAgICAib3JkZXIiOiA3CiAgICB9LAogICAgIkVudkNhcmQiOiB7CiAgICAgICAgInZpc2libGUiOiBmYWxzZSwKICAgICAgICAib3JkZXIiOiA4CiAgICB9LAogICAgIkhpZXJhcmNoeUNhcmQiOiB7CiAgICAgICAgInZpc2libGUiOiBmYWxzZSwKICAgICAgICAib3JkZXIiOiA5CiAgICB9LAogICAgIkN1c3RvbWl6ZUNhcmQiOiB7CiAgICAgICAgInZpc2libGUiOiBmYWxzZSwKICAgICAgICAib3JkZXIiOiAxMAogICAgfSwKCQkiU2NyZWVuU2hvdENhcmQiOiB7CgkJCSJ2aXNpYmxlIjogdHJ1ZSwKCQkJCSJvcmRlciI6IDExCgkJfQp9","options":{"isTrashed":false},"credits":[]},{"name":"feeles/codemirror.css","type":"text/css","lastModified":1492756455000,"composed":"LkNvZGVNaXJyb3IgewoJZm9udC1mYW1pbHk6IENvbnNvbGFzLCAiTGliZXJhdGlvbiBNb25vIiwgTWVubG8sIENvdXJpZXIsIG1vbm9zcGFjZTsKCWJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ1LCAyNDUsIDI0NSwgMS4wKTsKCS8qIDEwMCXjgIDjgavjgZnjgovjgajjgIHjg4Djg7zjgq/jg6Ljg7zjg4njgavjgarjgovjgoggKi8KCWZpbHRlcjogaW52ZXJ0KDAlKTsKfQoKLkNvZGVNaXJyb3IgLmNtLXRhYjpiZWZvcmUgewoJdmlzaWJpbGl0eTogaGlkZGVuOwoJY29udGVudDogJ+KAouKAouKAouKAoic7Cgljb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpOwoJYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7Cglwb3NpdGlvbjogYWJzb2x1dGU7Cn0KCi5Db2RlTWlycm9yLWxpbmVudW1iZXIgewoJY29sb3I6IHJnYmEoMTUzLCAxNTMsIDE1MywgMS4wKTsKfQoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg==","options":{"isTrashed":false},"credits":[]},{"name":"feeles/codemirror.json","type":"application/json","lastModified":1492756455000,"composed":"ewoJImxpbmVOdW1iZXJzIjogdHJ1ZSwKCSJpbmRlbnRVbml0IjogNCwKCSJpbmRlbnRXaXRoVGFicyI6IHRydWUsCgkibWF0Y2hCcmFja2V0cyI6IHRydWUsCgkiYXV0b0Nsb3NlQnJhY2tldHMiOiB0cnVlLAoJImtleU1hcCI6ICJzdWJsaW1lIiwKCSJzY3JvbGxiYXJTdHlsZSI6ICJzaW1wbGUiLAoJImZvbGRHdXR0ZXIiOiB0cnVlLAoJImZvbGRPcHRpb25zIjogewoJCSJ3aWRnZXQiOiAi4pyn4p+j4p2D4p+i4pynIiwKCQkibWluRm9sZFNpemUiOiAxLAoJCSJzY2FuVXAiOiBmYWxzZQoJfQp9","options":{"isTrashed":false},"credits":[]},{"name":"feeles/ogp.json","type":"application/json","lastModified":1492756455000,"composed":"ewogICAgIm9nOnRpdGxlIjogIuODouODjuOBruWLleOBjeOCt+ODn+ODpeODrOODvOOCvyIsCiAgICAib2c6dXJsIjogImh0dHBzOi8vdGVyYW1vdG9kYWlraS5naXRodWIuaW8vbWF0dGVyanMtb24tZmVlbGVzLyIsCiAgICAib2c6ZGVzY3JpcHRpb24iOiAi6aOb44Gw44GX44Gf44KKIOOBtuOBpOOBkeOBn+OCiiDlm57jgZfjgZ/jgoog44Gk44Gq44GS44Gf44KK4oCm4oCm54mp55CG44Gu5LiW55WM44KS44OX44Ot44Kw44Op44Of44Oz44Kw44Gn5L2T6aiT44GX44KI44GG77yBIiwKICAgICJvZzphdXRob3IiOiAiIiwKICAgICJvZzppbWFnZSI6ICJodHRwczovL2VtYmVkLmhhY2tmb3JwbGF5Lnh5ei9vcGVuLXNvdXJjZS9vZ3AvbWF0dGVyLW9ncC1pbWFnZS5wbmciLAogICAgIm9nOmltYWdlOndpZHRoIjogMTIwMCwKICAgICJvZzppbWFnZTpoZWlnaHQiOiA2MzMsCiAgICAidHdpdHRlcjpjYXJkIjogInN1bW1hcnlfbGFyZ2VfaW1hZ2UiLAogICAgInR3aXR0ZXI6c2l0ZSI6ICJAdGVyYW1vdG9kYWlraSIsCiAgICAidHdpdHRlcjp0aXRsZSI6ICLjg6Ljg47jga7li5XjgY3jgrfjg5/jg6Xjg6zjg7zjgr8iLAogICAgInR3aXR0ZXI6ZGVzY3JpcHRpb24iOiAi6aOb44Gw44GX44Gf44KKIOOBtuOBpOOBkeOBn+OCiiDlm57jgZfjgZ/jgoog44Gk44Gq44GS44Gf44KK4oCm4oCm54mp55CG44Gu5LiW55WM44KS44OX44Ot44Kw44Op44Of44Oz44Kw44Gn5L2T6aiT44GX44KI44GG77yBIiwKICAgICJ0d2l0dGVyOmltYWdlIjogImh0dHBzOi8vZW1iZWQuaGFja2ZvcnBsYXkueHl6L29wZW4tc291cmNlL29ncC9tYXR0ZXItb2dwLWltYWdlLnBuZyIsCiAgICAidHdpdHRlcjphdXRob3IiOiAiIiwKICAgICJmYjphcHBfaWQiOiAxODYyNjg1NDgzOTQzODAyCn0=","options":{"isTrashed":false},"credits":[]},{"name":"free/Assets.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAoJUmVuZGVyLAoJRW5naW5lLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7CgoKLy8gcnVuIHRoZSBlbmdpbmUKRW5naW5lLnJ1bihlbmdpbmUpOwoKLy8gcnVuIHRoZSByZW5kZXJlcgpSZW5kZXIucnVuKHJlbmRlcik7CgoKY29uc3QgQXNzZXRzID0ge307CgpPYmplY3Qua2V5cyhCb2RpZXMpLmZvckVhY2goKHNoYXBlKSA9PiB7CgoJQXNzZXRzW3NoYXBlXSA9ICguLi5hcmdzKSA9PiB7CgkJY29uc3Qgc2VsZiA9IEJvZGllc1tzaGFwZV0oLi4uYXJncyk7CgkJV29ybGQuYWRkKGVuZ2luZS53b3JsZCwgc2VsZik7CgkJcmV0dXJuIFByb21pc2UucmVzb2x2ZShzZWxmKTsKCX07CgoJQXNzZXRzW3NoYXBlICsgJ1N5bmMnXSA9ICguLi5hcmdzKSA9PiB7CgkJY29uc3Qgc2VsZiA9IEJvZGllc1tzaGFwZV0oLi4uYXJncyk7CgkJV29ybGQuYWRkKGVuZ2luZS53b3JsZCwgc2VsZik7CgkJcmV0dXJuIHNlbGY7Cgl9OwoKfSk7CgpleHBvcnQgZGVmYXVsdCBBc3NldHM7Cgo=","options":{"isTrashed":false},"credits":[]},{"name":"free/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDoh6rnlLHjgrPjg7zjg4rjg7wKCuOBk+OBk+OBp+OBr+WQm+OBruS9nOOCiuOBn+OBhOOCguOBruOCkuOCvOODreOBi+OCieS9nOOCiuWni+OCgeOCi+OBk+OBqOOBjOOBp+OBjeOCi+OCiCAgCuaAneOBhuWtmOWIhuOAgeeglOeptuOCkualveOBl+OCguOBhu+8ge+8gQoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDkvZzjgosKCiFb44Oh44Kk44Oz44OX44Ot44Kw44Op44OgXShmcmVlL21haW4uanMpICAKIVvjgYvjgbnjg7vjgobjgYtdKGZyZWUvc3RhZ2UuanMpICAKIVvoqK3lrppdKGZyZWUvc2V0dGluZy5qcykgIAo=","options":{"isTrashed":false},"credits":[]},{"name":"free/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT4u6Ieq55Sx44Kz44O844OK44O8PC90aXRsZT4KCQk8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9InN0eWxlLmNzcyIgLz4KCQk8c2NyaXB0IHNyYz0iZnJlZS9tYWluLmpzIj48L3NjcmlwdD4KCTwvaGVhZD4KCTxib2R5PgoJPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"free/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAoJCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCldvcmxkLmFkZCh3b3JsZCwgWwoJCgkvLyDjgZPjgZPjgavjgqrjg5bjgrjjgqfjgq/jg4jjgpLov73liqDjgZnjgosKCQoJCgkKCQoJCgkKCQoJCgkKCQpdKTsKCgoKaW1wb3J0ICcuL3N0YWdlJzsK","options":{"isTrashed":false},"credits":[]},{"name":"free/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnZnJlZS9SRUFETUUubWQnKTsKCgpleHBvcnQgewoJZW5naW5lLAoJd29ybGQsCglyZW5kZXIsCn07Cg==","options":{"isTrashed":false},"credits":[]},{"name":"free/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g44GL44G544Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJCl0pOwo=","options":{"isTrashed":false},"credits":[]},{"name":"friction/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgb7jgZXjgaTlipsKPiDjgb7jgZXjgaQt44KK44KH44GPICAK5pGp5pOm5YqbCgrjgqrjg5bjgrjjgqfjgq/jg4jjga4gW+OBvuOBleOBpOWKm10oaHR0cHM6Ly9qYS53aWtpcGVkaWEub3JnL3dpa2kvJUU2JTkxJUE5JUU2JTkzJUE2JUU1JThBJTlCKQrjgpLlpInjgYjjgabjgb/jgZ8KClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoKIyMg5pS56YCg44GX44Gm44G/44KLCgohW+OBk+OBk+OBi+OCieWni+OCgeOCi10oZnJpY3Rpb24vbWFpbi5qcykKCnx8IOaEj+WRsyB8IOevhOWbsgotLS0gfCAtLS0gfCAtLS0gCmZyaWN0aW9uIHwg44G+44GV44Gk44Gu5aSn44GN44GVIHwgMCB+IDEuMAoK44KC44Gj44Go5pS56YCgCiFb6Kit5a6aXShmcmljdGlvbi9zZXR0aW5nLmpzKQohW+OBi+OBueODu+OChuOBi10oZnJpY3Rpb24vc3RhZ2UuanMpCgotIC0gLQoKIyMg5b+c55So5L6LCgoKCgoKCg==","options":{"isTrashed":false},"credits":[]},{"name":"friction/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7mkanmk6blips8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJmcmljdGlvbi9tYWluLmpzIj48L3NjcmlwdD4KPC9oZWFkPgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"friction/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCgkvLyDkuIrjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoMzAwLCA3MCwgNDAsIDQwLCB7CgkJLy8g44G+44GV44Gk5YqbCgkJZnJpY3Rpb246IDAuMDAxLAoJCQoJfSksCgkKCS8vIOS4reOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSgzMDAsIDI1MCwgNDAsIDQwLCB7CgkJLy8g44G+44GV44Gk5YqbCgkJZnJpY3Rpb246IDAuMDAwNSwKCQkKCX0pLAoJCgkvLyDkuIvjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoMzAwLCA0MzAsIDQwLCA0MCwgewoJCS8vIOOBvuOBleOBpOWKmwoJCWZyaWN0aW9uOiAwLAoJCQoJfSksCgkKXSk7CgoKaW1wb3J0ICcuL3N0YWdlJzsK","options":{"isTrashed":false},"credits":[]},{"name":"friction/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnZnJpY3Rpb24vUkVBRE1FLm1kJyk7CgoKZXhwb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAoJcmVuZGVyLAp9Owo=","options":{"isTrashed":false},"credits":[]},{"name":"friction/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOOBi+OBuQpXb3JsZC5hZGQod29ybGQsIFsKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KQpdKTsKCi8vIOOChuOBiwpXb3JsZC5hZGQod29ybGQsIFsKCUJvZGllcy5yZWN0YW5nbGUoMzAwLCAxODAsIDcwMCwgMjAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCQlhbmdsZTogTWF0aC5QSSAqIDAuMDYKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgzMDAsIDM1MCwgNzAwLCAyMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJCWFuZ2xlOiBNYXRoLlBJICogMC4wNgoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDMwMCwgNTIwLCA3MDAsIDIwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgkJYW5nbGU6IE1hdGguUEkgKiAwLjA2Cgl9KSwKXSk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"gravity/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDph43lipsKCuepuumWk+OBriAKW+mHjeWKm10oaHR0cHM6Ly9qYS53aWtpcGVkaWEub3JnL3dpa2kvJUU5JTg3JThEJUU1JThBJTlCKQrjgpLlpInjgYjjgabjgb/jgZ8KCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoKCiMjIOaUuemAoOOBl+OBpuOBv+OCiwoKIyMgIVvjgZPjgZPjgYvjgonlp4vjgoHjgotdKGdyYXZpdHkvbWFpbi5qcykKCnx8IOaEj+WRsyB8IAotLS0gfCAtLS0gIAp3b3JsZC5ncmF2aXR5LnggfCDlj7PlkJHjgY3jga7ph43lipsgCndvcmxkLmdyYXZpdHkueSB8IOS4i+WQkeOBjeOBrumHjeWKmyAKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0oZ3Jhdml0eS9zZXR0aW5nLmpzKQohW+OBi+OBueODu+OChuOBi10oZ3Jhdml0eS9zdGFnZS5qcykKIVvjgrnjgr/jg4Pjgq9dKGdyYXZpdHkvc3RhY2suanMpCgo=","options":{"isTrashed":false},"credits":[]},{"name":"gravity/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7ph43lips8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJncmF2aXR5L21haW4uanMiPjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5Pgo8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"gravity/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgovLyDph43lipsKd29ybGQuZ3Jhdml0eS54ID0gMDsKd29ybGQuZ3Jhdml0eS55ID0gLTE7CgoKCgoKCgoKCgoKaW1wb3J0ICcuL3N0YWdlJzsKaW1wb3J0ICcuL3N0YWNrJzsK","options":{"isTrashed":false},"credits":[]},{"name":"gravity/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93VmVsb2NpdHkgPSB0cnVlOwpyZW5kZXIub3B0aW9ucy5zaG93QW5nbGVJbmRpY2F0b3IgPSB0cnVlOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnZ3Jhdml0eS9SRUFETUUubWQnKTsKCgpleHBvcnQgewoJZW5naW5lLAoJd29ybGQsCglyZW5kZXIsCn07Cg==","options":{"isTrashed":false},"credits":[]},{"name":"gravity/stack.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglDb21tb24sCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgkKCS8vIOS4reOBruOCquODluOCuOOCp+OCr+ODiOOBruOCueOCv+ODg+OCrwoJQ29tcG9zaXRlcy5zdGFjayg1MCwgMTIwLCAxMSwgNSwgMCwgMCwgKHgsIHkpID0+IHsKCQkKCQkvLyDjg6njg7Pjg4Djg6DjgavlvaLjgoTlpKfjgY3jgZXjgpLlpInjgYjjgosKCQlpZiAoQ29tbW9uLnJhbmRvbSgwLCAxKSA8IDAuNSkgewoJCQlpZiAoQ29tbW9uLnJhbmRvbSgpIDwgMC44KSB7CgkJCQlyZXR1cm4gQm9kaWVzLnJlY3RhbmdsZSh4LCB5LCBDb21tb24ucmFuZG9tKDIwLCA1MCksIENvbW1vbi5yYW5kb20oMjAsIDUwKSk7CgkJCX0gZWxzZSB7CgkJCQlyZXR1cm4gQm9kaWVzLnJlY3RhbmdsZSh4LCB5LCBDb21tb24ucmFuZG9tKDgwLCAxMjApLCBDb21tb24ucmFuZG9tKDIwLCAzMCkpOwoJCQl9CgkJfSBlbHNlIHsKCQkJcmV0dXJuIEJvZGllcy5wb2x5Z29uKHgsIHksIE1hdGgucm91bmQoQ29tbW9uLnJhbmRvbSgxLCA4KSksIENvbW1vbi5yYW5kb20oMjAsIDUwKSk7CgkJfQoJCQoJfSksCgkKXSk7Cgo=","options":{"isTrashed":false},"credits":[]},{"name":"gravity/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIOWjgQoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MC41LCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pCl0pOwoK","options":{"isTrashed":false},"credits":[]},{"name":"gyro/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgrjjg6PjgqTjg63jgrvjg7PjgrXjg7wKCgrjgrnjg57jg7zjg4jjg5Xjgqnjg7Pjga7jgrjjg6PjgqTjg63jgrvjg7PjgrXjg7zjgpLkvb/jgaPjgabjgIHph43lipvjgpLmk43kvZzjgZnjgovjgogKCuODkeOCveOCs+ODs+OBi+OCieOBr+OCuOODo+OCpOODreOCu+ODs+OCteODvOOCkuS9v+OBiOOBquOBhOOBruOBp+OAgeazqOaEj+OBl+OBpuOBrQoKCiMjICFb5pS56YCg44GZ44KLXShneXJvL21haW4uanMpCgoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgo=","options":{"isTrashed":false},"credits":[]},{"name":"gyro/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgrjjg6PjgqTjg63jgrvjg7PjgrXjg7w8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJneXJvL21haW4uanMiPjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5Pgo8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"gyro/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKcmVuZGVyLm9wdGlvbnMuc2hvd0FuZ2xlSW5kaWNhdG9yID0gdHJ1ZTsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgovLyDkuK3jga7jgqrjg5bjgrjjgqfjgq/jg4jjga7jgrnjgr/jg4Pjgq8KY29uc3Qgc3RhY2sgPSBDb21wb3NpdGVzLnN0YWNrKDIwLCAyMCwgMTAsIDUsIDAsIDAsICh4LCB5KSA9PiB7Cgljb25zdCBfc2lkZXMgPSBNYXRoLnJvdW5kKENvbW1vbi5yYW5kb20oMSwgOCkpOwoKCS8vIDMg44Gg44Go6Imv44GP44Gq44GE44Gu44Gn44CB5Luj44KP44KK44GrIDQg44Gr44GZ44KLCgljb25zdCBzaWRlcyA9IChfc2lkZXMgPT09IDMpID8gNCA6IF9zaWRlczsKCgkvLyDjgZ/jgb7jgavop5LjgpLkuLjjgY/jgZnjgosKCWNvbnN0IGNoYW1mZXIgPSBzaWRlcyA+IDIgJiYgQ29tbW9uLnJhbmRvbSgpID4gMC43ID8gewoJCXJhZGl1czogMTAKCX0gOiBudWxsOwoKCXN3aXRjaCAoTWF0aC5yb3VuZChDb21tb24ucmFuZG9tKDAsIDEpKSkgewoJCWNhc2UgMDoKCQkJaWYgKENvbW1vbi5yYW5kb20oKSA8IDAuOCkgewoJCQkJcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgQ29tbW9uLnJhbmRvbSgyNSwgNTApLCBDb21tb24ucmFuZG9tKDI1LCA1MCksIHsKCQkJCQljaGFtZmVyOiBjaGFtZmVyCgkJCQl9KTsKCQkJfSBlbHNlIHsKCQkJCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIENvbW1vbi5yYW5kb20oODAsIDEyMCksIENvbW1vbi5yYW5kb20oMjUsIDMwKSwgewoJCQkJCWNoYW1mZXI6IGNoYW1mZXIKCQkJCX0pOwoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgMToKCQkJcmV0dXJuIEJvZGllcy5wb2x5Z29uKHgsIHksIHNpZGVzLCBDb21tb24ucmFuZG9tKDI1LCA1MCksIHsKCQkJCWNoYW1mZXI6IGNoYW1mZXIKCQkJfSk7Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBbCglzdGFjaywKCS8vIOWjgQoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pCl0pOwoKLy8g44K444Oj44Kk44Ot44K744Oz44K144O844Gu5pON5L2cCmNvbnN0IHVwZGF0ZUdyYXZpdHkgPSAoZXZlbnQpID0+IHsKCWNvbnN0IG9yaWVudGF0aW9uID0gdHlwZW9mIHdpbmRvdy5vcmllbnRhdGlvbiAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cub3JpZW50YXRpb24gOiAwOwoJY29uc3QgZ3Jhdml0eSA9IHdvcmxkLmdyYXZpdHk7CgoJaWYgKG9yaWVudGF0aW9uID09PSAwKSB7CgkJZ3Jhdml0eS54ID0gQ29tbW9uLmNsYW1wKGV2ZW50LmdhbW1hLCAtOTAsIDkwKSAvIDkwOwoJCWdyYXZpdHkueSA9IENvbW1vbi5jbGFtcChldmVudC5iZXRhLCAtOTAsIDkwKSAvIDkwOwoJfSBlbHNlIGlmIChvcmllbnRhdGlvbiA9PT0gMTgwKSB7CgkJZ3Jhdml0eS54ID0gQ29tbW9uLmNsYW1wKGV2ZW50LmdhbW1hLCAtOTAsIDkwKSAvIDkwOwoJCWdyYXZpdHkueSA9IENvbW1vbi5jbGFtcCgtZXZlbnQuYmV0YSwgLTkwLCA5MCkgLyA5MDsKCX0gZWxzZSBpZiAob3JpZW50YXRpb24gPT09IDkwKSB7CgkJZ3Jhdml0eS54ID0gQ29tbW9uLmNsYW1wKGV2ZW50LmJldGEsIC05MCwgOTApIC8gOTA7CgkJZ3Jhdml0eS55ID0gQ29tbW9uLmNsYW1wKC1ldmVudC5nYW1tYSwgLTkwLCA5MCkgLyA5MDsKCX0gZWxzZSBpZiAob3JpZW50YXRpb24gPT09IC05MCkgewoJCWdyYXZpdHkueCA9IENvbW1vbi5jbGFtcCgtZXZlbnQuYmV0YSwgLTkwLCA5MCkgLyA5MDsKCQlncmF2aXR5LnkgPSBDb21tb24uY2xhbXAoZXZlbnQuZ2FtbWEsIC05MCwgOTApIC8gOTA7Cgl9Cn07Cgp3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZGV2aWNlb3JpZW50YXRpb24nLCB1cGRhdGVHcmF2aXR5KTsKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnZ3lyby9SRUFETUUubWQnKTsK","options":{"isTrashed":false},"credits":[]},{"name":"index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT4u44Oh44OL44Ol44O8PC90aXRsZT4KCQk8c3R5bGU+CgkJCWh0bWwgeyAKCQkJCWJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IAoJCQl9CgkJCWEuYnRuIHsKCQkJCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCQkJCWJhY2tncm91bmQtY29sb3I6ICMzMzk5RkY7CgkJCQljb2xvcjogI0ZGRkZGRjsKCQkJCXRleHQtZGVjb3JhdGlvbjogbm9uZTsKCQkJCW1hcmdpbjogNHB4OwoJCQkJcGFkZGluZzogNHB4OwoJCQkJYm9yZGVyLXJhZGl1czogMnB4OwoJCQkJd2hpdGUtc3BhY2U6IG5vd3JhcDsKCQkJCXRyYW5zZm9ybTogcm90YXRlKC00ZGVnKTsKCQkJfQoJCTwvc3R5bGU+CgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0ibWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCQk8aDI+TWVudTwvaDI+CgkJPGgzPuWLleOBj+OCs+ODs+ODhuODs+ODhPCfjq48L2gzPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9InNsaW5nc2hvdC9pbmRleC5odG1sIj7jgrnjg6rjg7PjgrDjgrfjg6fjg4Pjg4g8L2E+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0iY29pbnMvaW5kZXguaHRtbCI+44Kz44Kk44Oz44Ky44O844OgPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9IndyZWNraW5nQmFsbC9pbmRleC5odG1sIj7jg6Ljg7PjgrHjg7zjg7M8L2E+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0iYnJpZGdlL2luZGV4Lmh0bWwiPuODluODquODg+OCuDwvYT4KPCEtLSAJCTxhIGNsYXNzPSJidG4iIGhyZWY9ImJhbGxQb29sL2luZGV4Lmh0bWwiPuODnOODvOODq+ODl+ODvOODqzwvYT4gLS0+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0iY2F0YXB1bHQvaW5kZXguaHRtbCI+55m65bCE5Y+wPC9hPgo8IS0tIAkJPGEgY2xhc3M9ImJ0biIgaHJlZj0iY2xvdGgvaW5kZXguaHRtbCI+5biDPC9hPiAtLT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJjaGFpbnMvaW5kZXguaHRtbCI+44Ot44O844OXPC9hPgo8IS0tIAkJPGEgY2xhc3M9ImJ0biIgaHJlZj0iYXZhbGFuY2hlL2luZGV4Lmh0bWwiPuWdgumBkzwvYT4gLS0+CjwhLS0gCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJzcHJpdGVzL2luZGV4Lmh0bWwiPuODk+ODvOODgeODnOODvOODq+OBqOacqOOBrueusTwvYT4gLS0+CjwhLS0gCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJtaXhlZC9pbmRleC5odG1sIj7jg5/jg4Pjgq/jgrk8L2E+IC0tPgo8IS0tIAkJPGEgY2xhc3M9ImJ0biIgaHJlZj0idGltZXNjYWxlL2luZGV4Lmh0bWwiPuOCueODreODvOODouODvOOCt+ODp+ODszwvYT4gLS0+CjwhLS0gCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJzdGF0aWNGcmljdGlvbi9pbmRleC5odG1sIj7pnZnmraLjgb7jgZXjgaTlips8L2E+IC0tPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9ImZyZWUvaW5kZXguaHRtbCI+6Ieq55Sx44Kz44O844OK44O8PC9hPgoJCTxoMz7jgY3jgbvjgpPjga7jg5Hjg6njg6Hjg7zjgr/wn5SwPC9oMz4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJyZWN0YW5nbGUvaW5kZXguaHRtbCI+5L2N572u44Go5aSn44GN44GVPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9ImlzU3RhdGljL2luZGV4Lmh0bWwiPuOBi+OBueODu+OChuOBizwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJhbmdsZS9pbmRleC5odG1sIj7jgYvjgZ/jgoDjgY08L2E+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0iZGVuc2l0eS9pbmRleC5odG1sIj7ph43jgZU8L2E+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0icmVzdGl0dXRpb24vaW5kZXguaHRtbCI+44Gv44Gt6L+U44KKPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9ImFpckZyaWN0aW9uL2luZGV4Lmh0bWwiPuepuuawl+OBpuOBhOOBk+OBhjwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJmcmljdGlvbi9pbmRleC5odG1sIj7jgb7jgZXjgaTlips8L2E+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0icmVuZGVyL2luZGV4Lmh0bWwiPuiJsjwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJjaGFtZmVyL2luZGV4Lmh0bWwiPuinkuS4uCAxPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9InJvdW5kZWQvaW5kZXguaHRtbCI+6KeS5Li4IDI8L2E+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0idGltZXNjYWxlU2ltcGxlL2luZGV4Lmh0bWwiPuaZgumWk+OBruaXqeOBlTwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJncmF2aXR5L2luZGV4Lmh0bWwiPumHjeWKmzwvYT4KCQk8aDM+44Kq44OW44K444Kn44Kv44OI44KS57WE44G/5ZCI44KP44Gb44KL4pqh77iPPC9oMz4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJzdGFjay9pbmRleC5odG1sIj7jgrnjgr/jg4Pjgq88L2E+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0iY2lyY2xlU3RhY2svaW5kZXguaHRtbCI+5YaG44Gu44K544K/44OD44KvPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9ImNvbnN0cmFpbnQvaW5kZXguaHRtbCI+44OQ44ONPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9InNvZnRCb2R5L2luZGV4Lmh0bWwiPuOCveODleODiOODnOODh+OCozwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJweXJhbWlkL2luZGV4Lmh0bWwiPuODlOODqeODn+ODg+ODiTwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJjYXIvaW5kZXguaHRtbCI+6LuKPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9Im5ld3RvbnNDcmFkbGUvaW5kZXguaHRtbCI+44OL44Ol44O844OI44Oz44Gu44KG44KK44GL44GUPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9ImNvbXBvdW5kL2luZGV4Lmh0bWwiPuOCquODluOCuOOCp+OCr+ODiOOBruWQiOaIkDwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJjb21wb3VuZFN0YWNrL2luZGV4Lmh0bWwiPuWQiOaIkOOBl+OBn+OCquODluOCuOOCp+OCr+ODiOOBruOCueOCv+ODg+OCrzwvYT4KCQk8aDM+44OP44Kk44Os44OZ44Or8J+SizwvaDM+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0iZXZlbnRzL2luZGV4Lmh0bWwiPuOCpOODmeODs+ODiDwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJzZW5zb3JzL2luZGV4Lmh0bWwiPuOCu+ODs+OCteODvDwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJtYW5pcHVsYXRpb24vaW5kZXguaHRtbCI+44Kq44OW44K444Kn44Kv44OI44KS55u05o6l5pON5L2c44GZ44KLPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9ImNvbXBvc2l0ZU1hbmlwdWxhdGlvbi9pbmRleC5odG1sIj7jgrnjgr/jg4Pjgq/lhajkvZPjga7mk43kvZw8L2E+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0iY29sbGlzaW9uRmlsdGVyaW5nL2luZGV4Lmh0bWwiPuOCq+ODhuOCtOODquODvOOBlOOBqOOBruOBl+OCh+OBhueqgTwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJjb25jYXZlL2luZGV4Lmh0bWwiPuWlveOBjeOBquW9ouOBruOCquODluOCuOOCp+OCr+ODiDwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJyYXljYXN0aW5nL2luZGV4Lmh0bWwiPue3muWIhuOBqOOBruOBl+OCh+OBhuOBqOOBpDwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJ2aWV3cy9pbmRleC5odG1sIj7jgrrjg7zjg6Djgajjgrnjgq/jg63jg7zjg6s8L2E+CgkJPGEgY2xhc3M9ImJ0biIgaHJlZj0iYXR0cmFjdG9ycy9pbmRleC5odG1sIj7kuIfmnInlvJXlips8L2E+CgkJPGgzPuOCs+ODqeODoPCfjqQ8L2gzPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9ImJyb2FkcGhhc2UvaW5kZXguaHRtbCI+44OW44Ot44O844OJ44OV44Kn44O844K6PC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9InNsZWVwaW5nL2luZGV4Lmh0bWwiPuOCueODquODvOODl+ODouODvOODiTwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJzdmcvaW5kZXguaHRtbCI+44OZ44Kv44K/55S75YOPPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9InRlcnJhaW4vaW5kZXguaHRtbCI+5Zyw5b2iPC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9Imd5cm8vaW5kZXguaHRtbCI+44K444Oj44Kk44Ot44K744Oz44K144O8PC9hPgoJCTxhIGNsYXNzPSJidG4iIGhyZWY9InN0cmVzcy9pbmRleC5odG1sIj7lnKflipsgMTwvYT4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJzdHJlc3MyL2luZGV4Lmh0bWwiPuWcp+WKmyAyPC9hPgoJCTxocj4KCQnjgZPjgozjgonjga7jgrXjg7Pjg5fjg6vjga8gTGlhbSBCcnVtbWl0dCDmsI/jga4KCQk8YSBjbGFzcz0iYnRuIiBocmVmPSJodHRwOi8vYnJtLmlvL21hdHRlci1qcy9kZW1vLyI+5Y6f5L2cPC9hPgoJCeOCkuOCguOBqOOBq+aUueWkieOBl+OBn+OCguOBruOBp+OBmQoJPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"isStatic/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgYvjgbnjg7vjgobjgYsKCuOCquODluOCuOOCp+OCr+ODiOOCkiAqKumdmeatouOBleOBm+OBpuOAgSoqIOOBi+OBueOBqOOChuOBi+OCkuOBpOOBj+OBo+OBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXShpc1N0YXRpYy9tYWluLmpzKQoKCnx8IOaEj+WRsyB8IOOBr+OCk+OBhCAKLS0tIHwgLS0tIHwgLS0tIAppc1N0YXRpYyB8IOmdmeatouOBmeOCi+OBi+OBqeOBhuOBiyB8IGB0cnVlYCDjgarjgonpnZnmraIgYGZhbHNlYCDjgarjgonli5XjgY8KCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0oaXNTdGF0aWMvc2V0dGluZy5qcykKIVvjgYvjgbnjg7vjgobjgYtdKGlzU3RhdGljL3N0YWdlLmpzKQoKLSAtIC0KCiMjIOW/nOeUqOS+iwoKW+eZuuWwhOWPsF0oY2F0YXB1bHQvaW5kZXguaHRtbCkK","options":{"isTrashed":false},"credits":[]},{"name":"isStatic/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgYvjgbnjg7vjgobjgYs8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJpc1N0YXRpYy9tYWluLmpzIj48L3NjcmlwdD4KPC9oZWFkPgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"isStatic/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCQkKCS8vIOOChuOBi+OBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDQwMCwgNjAwLCAxMCwgewoJCS8vIOmdmeatouOBmeOCi+ODleODqeOCsAoJCWlzU3RhdGljOiB0cnVlLAoJCQoJfSksCgkKCS8vIOOBi+OBueOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSgyMDAsIDMwMCwgMTAsIDQwMCwgewoJCS8vIOmdmeatouOBmeOCi+ODleODqeOCsAoJCWlzU3RhdGljOiB0cnVlLAoJCQoJfSksCgkKCS8vIOWLleOBj+OCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDIwMCwgNzAsIDcwLCB7CgkJLy8g6Z2Z5q2i44GZ44KL44OV44Op44Kw44CA77yI5YWD44GL44KJIGZhbHNlIOOBquOBruOBp+OAgeabuOOBi+OBquOBj+OBpuOCguOBhOOBhO+8iQoJCWlzU3RhdGljOiBmYWxzZSwKCQkKCX0pLAoKCQpdKTsKCgppbXBvcnQgJy4vc3RhZ2UnOwo=","options":{"isTrashed":false},"credits":[]},{"name":"isStatic/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVdvcmxkLAoJUnVubmVyLAoJTW91c2UsCglNb3VzZUNvbnN0cmFpbnQsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7CnJlbmRlci5vcHRpb25zLnNob3dWZWxvY2l0eSA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdpc1N0YXRpYy9SRUFETUUubWQnKTsKCgpleHBvcnQgewoJZW5naW5lLAoJd29ybGQsCglyZW5kZXIsCn07Cg==","options":{"isTrashed":false},"credits":[]},{"name":"isStatic/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOWjgQpXb3JsZC5hZGQod29ybGQsIFsKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KQpdKTsK","options":{"isTrashed":false},"credits":[]},{"name":"lib/decomp.js","type":"application/javascript","lastModified":1492756455000,"composed":"","options":{"isTrashed":false},"credits":[]},{"name":"lib/interrupt.js","type":"application/javascript","lastModified":1492756455000,"composed":"Y29uc3QgYV9ocmVmID0gZmFsc2U7CmNvbnN0IGltZ19zcmMgPSB0cnVlOwpjb25zdCBhdWRpb19zcmMgPSBmYWxzZTsKY29uc3Qgc2NyaXB0X3NyYyA9IGZhbHNlOwpjb25zdCB4aHJfdXJsID0gZmFsc2U7CgovLyBIeXBlciBsaW5rCmlmIChhX2hyZWYpIHsKCWNvbnN0IGhyZWZMb2FkZXIgPSAobm9kZSwgaHJlZiwgc2V0KSA9PiB7CgkJc2V0KGBqYXZhc2NyaXB0OiBmZWVsZXMucmVwbGFjZSgnJHtocmVmfScpO2ApOwoJfTsKCWludGVycnVwdFNldHRlcihIVE1MQW5jaG9yRWxlbWVudCwgJ2hyZWYnLCBocmVmTG9hZGVyKTsKfQoKLy8gSW1hZ2Ugc291cmNlCmlmIChpbWdfc3JjKSB7CglpbnRlcnJ1cHRTZXR0ZXIoSFRNTEltYWdlRWxlbWVudCwgJ3NyYycsIHJlc291cmNlTG9hZGVyKTsKfQoKLy8gQXVkaW8gc291cmNlCmlmIChhdWRpb19zcmMpIHsKCWludGVycnVwdFNldHRlcihIVE1MQXVkaW9FbGVtZW50LCAnc3JjJywgcmVzb3VyY2VMb2FkZXIpOwp9CgovLyBTY3JpcHQgc291cmNlCmlmIChzY3JpcHRfc3JjKSB7CglpbnRlcnJ1cHRTZXR0ZXIoSFRNTFNjcmlwdEVsZW1lbnQsICdzcmMnLCByZXNvdXJjZUxvYWRlcik7Cn0KCi8vIFhIUiBvcGVuKCkKaWYgKHhocl91cmwpIHsKCWludGVycnVwdFhIUihYTUxIdHRwUmVxdWVzdCk7Cn0KCi8qKgogKiBAcGFyYW0gbm9kZTogSFRNTEVsZW1lbnQKICogQHBhcmFtIHNyYzogU3RyaW5nCiAqIEBwYXJhbSBzZXQ6IEZ1bmN0aW9uCiAqLwpmdW5jdGlvbiByZXNvdXJjZUxvYWRlcihub2RlLCBzcmMsIHNldCkgewoKCWlmICghaXNTYW1lT3JpZ2luKHNyYykpIHsKCQlzZXQoc3JjKTsKCQlyZXR1cm47Cgl9CgkvLyBJZiByZWxhdGl2ZSBwYXRoOgoJZmVlbGVzLmZldGNoKGdldEZlZWxlc05hbWUoc3JjKSkKCQkudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5ibG9iKCkpCgkJLnRoZW4oKGJsb2IpID0+IHsKCQkJY29uc3QgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsKCQkJY29uc3QgcmV2b2tlSGFuZGxlciA9ICgpID0+IHsKCQkJCW5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZCcsIHJldm9rZUhhbmRsZXIpOwoJCQkJbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKCdlcnJvcicsIHJldm9rZUhhbmRsZXIpOwoJCQkJVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpOwoJCQl9OwoJCQlub2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCByZXZva2VIYW5kbGVyKTsKCQkJbm9kZS5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIHJldm9rZUhhbmRsZXIpOwoKCQkJc2V0KHVybCk7CgkJfSk7Cgp9CgovKioKICogQHBhcmFtIGNvbnN0cnVjdG9yOiBIVE1MRWxlbWVudAogKiBAcGFyYW0gYXR0cjogU3RyaW5nCiAqIEBwYXJhbSBkZWxlZ2F0ZTogRnVuY3Rpb24oCiAqCSBub2RlOiBIVE1MRWxlbWVudCwKICoJIHZhbHVlOiBhbnksCiAqCSBzZXQ6IEZ1bmN0aW9uCiAqICkKICovCmZ1bmN0aW9uIGludGVycnVwdFNldHRlcihjb25zdHJ1Y3RvciwgYXR0ciwgZGVsZWdhdGUpIHsKCgljb25zdCBwcm90byA9IGNvbnN0cnVjdG9yLnByb3RvdHlwZTsKCWNvbnN0IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHByb3RvLCBhdHRyKTsKCU9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90bywgYXR0ciwgewoJCXNldDogZnVuY3Rpb24odmFsdWUpIHsKCQkJZGVsZWdhdGUodGhpcywgdmFsdWUsIGRlc2Muc2V0LmJpbmQodGhpcykpOwoJCX0KCX0pOwoKfQoKLyoqCiAqIEBwYXJhbSBjb25zdHJ1Y3RvcjogWE1MSHR0cFJlcXVlc3QKICogQHBhcmFtIGF0dHI6IFN0cmluZwogKiBAcGFyYW0gZGVsZWdhdGU6IEZ1bmN0aW9uKAogKgkgbm9kZTogSFRNTEVsZW1lbnQsCiAqCSB2YWx1ZTogYW55LAogKgkgc2V0OiBGdW5jdGlvbgogKiApCiAqLwpmdW5jdGlvbiBpbnRlcnJ1cHRYSFIoY29uc3RydWN0b3IpIHsKCWNvbnN0IHsKCQlvcGVuLAoJCXNlbmQKCX0gPSBjb25zdHJ1Y3Rvci5wcm90b3R5cGU7CgoJT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvbnN0cnVjdG9yLnByb3RvdHlwZSwgJ29wZW4nLCB7CgkJdmFsdWU6IGludGVycnVwdE9wZW4sCgl9KTsKCglmdW5jdGlvbiBpbnRlcnJ1cHRPcGVuKF9tZXRob2QsIF91cmwsIF9hc3luYyA9IHRydWUsIF91c2VyID0gJycsIF9wYXNzd29yZCA9ICcnKSB7CgkJaWYgKF9hc3luYyA9PT0gZmFsc2UpIHsKCQkJdGhyb3cgbmV3IEVycm9yKCdmZWVsZXMuWE1MSHR0cFJlcXVlc3QgZG9lcyBub3Qgc3VwcG9ydCBzeW5jaHJvbml6YXRpb24gcmVxdWVzdHMuJyk7CgkJfQoJCWlmICghaXNTYW1lT3JpZ2luKF91cmwpKSB7CgkJCW9wZW4uY2FsbCh0aGlzLCBfbWV0aG9kLCBfdXJsLCBfYXN5bmMsIF91c2VyLCBfcGFzc3dvcmQpOwoJCQlyZXR1cm47CgkJfQoJCXRoaXMuc2VuZCA9IGZ1bmN0aW9uKC4uLnNlbmRBcmdzKSB7CgkJCWZlZWxlcy5mZXRjaChnZXRGZWVsZXNOYW1lKF91cmwpKQoJCQkJLnRoZW4oKHJlc3BvbnNlKSA9PiByZXNwb25zZS5ibG9iKCkpCgkJCQkudGhlbigoYmxvYikgPT4gewoJCQkJCWNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7CgoJCQkJCWNvbnN0IHJldm9rZUhhbmRsZXIgPSAoKSA9PiB7CgkJCQkJCXRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZCcsIHJldm9rZUhhbmRsZXIpOwoJCQkJCQl0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgcmV2b2tlSGFuZGxlcik7CgkJCQkJCXRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCByZXZva2VIYW5kbGVyKTsKCQkJCQkJVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpOwoJCQkJCX07CgoJCQkJCXRoaXMuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIHJldm9rZUhhbmRsZXIpOwoJCQkJCXRoaXMuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCByZXZva2VIYW5kbGVyKTsKCQkJCQl0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgcmV2b2tlSGFuZGxlcik7CgoJCQkJCW9wZW4uY2FsbCh0aGlzLCBfbWV0aG9kLCB1cmwsIF9hc3luYywgX3VzZXIsIF9wYXNzd29yZCk7CgkJCQkJc2VuZC5hcHBseSh0aGlzLCBzZW5kQXJncyk7CgkJCQl9KTsKCQl9OwoJfQoKfQoKCgpjb25zdCBjdXJyZW50T3JpZ2luID0gZ2V0T3JpZ2luKCcnKTsKY29uc3QgYmFzZVVSTCA9ICgoKSA9PiB7Cgljb25zdCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOwoJYS5ocmVmID0gJyc7CgoJaWYgKCFhLmhyZWYpIHsKCQlyZXR1cm4gJyc7Cgl9CgoJLy8gCUlmIGEub3JpZ2luID09PSAibnVsbCIgKGUuZy4gT3BlbiBpbiBCbG9iIFVSTCksIGEucGF0aG5hbWUgZG9lc24ndCB3b3JrLgoJaWYgKGEub3JpZ2luID09PSAibnVsbCIpIHsKCQlyZXR1cm4gJ2h0dHA6Ly9mYWtlLm9yaWdpbi8nOwoJfQoKCWNvbnN0IGluZGV4ID0gYS5ocmVmLmxhc3RJbmRleE9mKCcvJyk7CglyZXR1cm4gYS5ocmVmLnN1YnN0cigwLCBpbmRleCArIDEpOwp9KSgpOwoKLyoqCiAqIEBwYXJhbSB1cmw6IFN0cmluZwogKiBAcmV0dXJuIFN0cmluZwogKi8KZnVuY3Rpb24gZ2V0RmVlbGVzTmFtZSh1cmwpIHsKCWlmIChiYXNlVVJMICYmIHR5cGVvZiBVUkwgPT09ICdmdW5jdGlvbicpIHsKCQljb25zdCBmdWxsUGF0aCA9IG5ldyBVUkwodXJsLCBiYXNlVVJMKS5ocmVmOwoJCXJldHVybiBmdWxsUGF0aC5zdWJzdHIoYmFzZVVSTC5sZW5ndGgpOwoJfQoJcmV0dXJuIHVybDsKfQoKLyoqCiAqIEBwYXJhbSB1cmw6IFN0cmluZwogKiBAcmV0dXJuIEJvb2xlYW4KICovCmZ1bmN0aW9uIGlzU2FtZU9yaWdpbih1cmwpIHsKCXJldHVybiBnZXRPcmlnaW4odXJsKSA9PT0gY3VycmVudE9yaWdpbjsKfQoKLyoqCiAqIEBwYXJhbSB1cmw6IFN0cmluZwogKiBAcmV0dXJuIFN0cmluZwogKi8KZnVuY3Rpb24gZ2V0T3JpZ2luKHVybCkgewoJY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKCWEuaHJlZiA9IHVybDsKCXJldHVybiBhLm9yaWdpbjsKfQ==","options":{"isTrashed":false},"credits":[]},{"name":"lib/matter-tools.demo.js","type":"application/javascript","lastModified":1492756455000,"composed":"","options":{"isTrashed":false},"credits":[]},{"name":"lib/matter-tools.gui.js","type":"application/javascript","lastModified":1492756455000,"composed":"","options":{"isTrashed":false},"credits":[]},{"name":"lib/matter-tools.inspector.js","type":"application/javascript","lastModified":1492756455000,"composed":"","options":{"isTrashed":false},"credits":[]},{"name":"main.js","type":"application/javascript","lastModified":1492756455000,"composed":"ZmVlbGVzLm9wZW5SZWFkbWUoJ1JFQURNRS5tZCcpOwo=","options":{"isTrashed":false},"credits":[]},{"name":"manipulation/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgqrjg5bjgrjjgqfjgq/jg4jjgpLnm7TmjqXmk43kvZzjgZnjgosKCmBCb2R5YCDjgpLkvb/jgYjjgbDjgIHjgqrjg5bjgrjjgqfjgq/jg4jjga7kvY3nva7jgoTpgJ/luqbjgpIgIArnm7TmjqXmk43kvZzjgZnjgovjgZPjgajjgYzjgafjgY3jgovjgogKCumdmeatouOBl+OBpuOBhOOCi++8iGBpc1N0YXRpY2DvvInniankvZPjgpLli5XjgYvjgZfjgZ/jgYTjgajjgY3jgoLjgIEgIArjgZPjga7mlrnms5XjgYzkvb/jgYjjgovjgogKCgojIyAhW+aUuemAoOOBmeOCi10obWFuaXB1bGF0aW9uL21haW4uanMpCgoKIyMjIEJvZHkuc2V0UG9zaXRpb24oYGJvZHlgLCB7IHg6IGB4YCwgeTogYHlgIH0pCuaMh+WumuOBl+OBn+S9jee9ruOBq+OCquODluOCuOOCp+OCr+ODiOOCkuenu+WLleOBmeOCiwoK44OR44Op44Oh44O844K/IHwg5oSP5ZGzIHwg5Y2Y5L2NIHwg5pyA5bCPIHwg5pyA5aSnIAotLS0gfCAtLS0gfCAtLS0gfCAtLS0gfCAtLS0KYm9keSB8IOaTjeS9nOOBl+OBn+OBhOOCquODluOCuOOCp+OCr+ODiCB8ICB8ICB8ICAKeCB8IOWLleOBi+OBl+OBn+OBhOS9jee9ru+8iOaoqu+8iSB8IHB4IHwgMCB8IDgwMAp5IHwg5YuV44GL44GX44Gf44GE5L2N572u77yI57im77yJIHwgcHggfCAwIHwgNjAwIAoKIyMjIEJvZHkuc2V0VmVsb2NpdHkoYGJvZHlgLCB7IHg6IGB4YCwgeTogYHlgIH0pCuaMh+WumuOBl+OBn+mAn+W6puOBp+OCquODluOCuOOCp+OCr+ODiOOCkuenu+WLleOBleOBm+OCiwoK44OR44Op44Oh44O844K/IHwg5oSP5ZGzIHwg5Y2Y5L2NIHwg5pyA5bCPIHwg5pyA5aSnIAotLS0gfCAtLS0gfCAtLS0gfCAtLS0gfCAtLS0KYm9keSB8IOaTjeS9nOOBl+OBn+OBhOOCquODluOCuOOCp+OCr+ODiCB8ICB8ICB8ICAKeCB8IOmAn+W6pu+8iOWPs+WQkeOBje+8iSB8ICpweCAvIHMqIHwgLUluZmluaXR5IHwgSW5maW5pdHkKeSB8IOmAn+W6pu+8iOS4i+WQkeOBje+8iSB8ICpweCAvIHMqIHwgLUluZmluaXR5IHwgSW5maW5pdHkgCgojIyMgQm9keS5zZXRBbmdsZShgYm9keWAsIGBhbmdsZWApCuaMh+WumuOBl+OBn+inkuW6puOBq+OCquODluOCuOOCp+OCr+ODiOOCkuWbnui7ouOBmeOCiwoK44OR44Op44Oh44O844K/IHwg5oSP5ZGzIHwg5Y2Y5L2NIHwg5pyA5bCPIHwg5pyA5aSnIAotLS0gfCAtLS0gfCAtLS0gfCAtLS0gfCAtLS0KYm9keSB8IOaTjeS9nOOBl+OBn+OBhOOCquODluOCuOOCp+OCr+ODiCB8ICB8ICB8ICAKYW5nbGUgfCDop5LluqYgfCAqcmFkKiB8IC1NYXRoLlBJIHwgTWF0aC5QSQoKIyMjIEJvZHkuc2V0QW5ndWxhclZlbG9jaXR5KGBib2R5YCwgYGFuZ3VsYXJWZWxvY2l0eWApCuaMh+WumuOBl+OBn+inkumAn+W6puOBp+OCquODluOCuOOCp+OCr+ODiOOCkuWbnui7ouOBleOBm+OCiwoK44OR44Op44Oh44O844K/IHwg5oSP5ZGzIHwg5Y2Y5L2NIHwg5pyA5bCPIHwg5pyA5aSnIAotLS0gfCAtLS0gfCAtLS0gfCAtLS0gfCAtLS0KYm9keSB8IOaTjeS9nOOBl+OBn+OBhOOCquODluOCuOOCp+OCr+ODiCB8ICB8ICB8ICAKYW5ndWxhclZlbG9jaXR5IHwg6KeS6YCf5bqmIHwgKnJhZCAvIHMqIHwgLUluZmluaXR5IHwgSW5maW5pdHkgCgoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCg==","options":{"isTrashed":false},"credits":[]},{"name":"manipulation/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgqrjg5bjgrjjgqfjgq/jg4jjgpLnm7TmjqXmk43kvZzjgZnjgos8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJtYW5pcHVsYXRpb24vbWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCTwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"manipulation/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUJvZHksCglFdmVudHMsCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKcmVuZGVyLm9wdGlvbnMuc2hvd0F4ZXMgPSB0cnVlOwpyZW5kZXIub3B0aW9ucy5zaG93Q29sbGlzaW9ucyA9IHRydWU7CnJlbmRlci5vcHRpb25zLnNob3dDb252ZXhIdWxscyA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g5bem44Gn6Z2Z5q2i44GX44Gm44GE44KL44Kq44OW44K444Kn44Kv44OICmNvbnN0IGJvZHlBID0gQm9kaWVzLnJlY3RhbmdsZSgxMDAsIDIwMCwgNTAsIDUwLCB7Cglpc1N0YXRpYzogdHJ1ZQp9KTsKLy8g5Zub6KeS44GE44Kq44OW44K444Kn44Kv44OI77yI5bem44GL44KJ6aCG77yJCmNvbnN0IGJvZHlCID0gQm9kaWVzLnJlY3RhbmdsZSgyMDAsIDIwMCwgNTAsIDUwKTsKY29uc3QgYm9keUMgPSBCb2RpZXMucmVjdGFuZ2xlKDMwMCwgMjAwLCA1MCwgNTApOwpjb25zdCBib2R5RCA9IEJvZGllcy5yZWN0YW5nbGUoNDAwLCAyMDAsIDUwLCA1MCk7CmNvbnN0IGJvZHlFID0gQm9kaWVzLnJlY3RhbmdsZSg1NTAsIDIwMCwgNTAsIDUwKTsKY29uc3QgYm9keUYgPSBCb2RpZXMucmVjdGFuZ2xlKDcwMCwgMjAwLCA1MCwgNTApOwovLyDlp4vjgb7jgaPjgabjgZnjgZDpnZnmraLjgZnjgovlhobjga7jgqrjg5bjgrjjgqfjgq/jg4gKY29uc3QgYm9keUcgPSBCb2RpZXMuY2lyY2xlKDQwMCwgMTAwLCAyNSk7Ci8vIOWNgeWtl+OBruOCquODluOCuOOCp+OCr+ODiApjb25zdCBwYXJ0QSA9IEJvZGllcy5yZWN0YW5nbGUoNjAwLCAyMDAsIDEyMCwgNTApOwpjb25zdCBwYXJ0QiA9IEJvZGllcy5yZWN0YW5nbGUoNjYwLCAyMDAsIDUwLCAxOTApOwpjb25zdCBjb21wb3VuZCA9IEJvZHkuY3JlYXRlKHsKCXBhcnRzOiBbcGFydEEsIHBhcnRCXSwKCWlzU3RhdGljOiB0cnVlCn0pOwoKV29ybGQuYWRkKHdvcmxkLCBbYm9keUEsIGJvZHlCLCBib2R5QywgYm9keUQsIGJvZHlFLCBib2R5RiwgYm9keUcsIGNvbXBvdW5kXSk7CgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIOWjgQoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pCl0pOwoKLy8gYmVmb3JlVXBkYXRlIOOBlOOBqOOBqyAxIOOBmuOBpOWil+OBiOOCi+WkieaVsApsZXQgY291bnRlciA9IDA7CgpFdmVudHMub24oZW5naW5lLCAnYmVmb3JlVXBkYXRlJywgKGV2ZW50KSA9PiB7CgkvLyDlrp/ooYzkuK3luLjjgavmr47jg5Xjg6zjg7zjg6DjgIHjgZPjgZPjgavlhaXjgosKCgkvLyBiZWZvcmVVcGRhdGUg44GU44Go44GrIDEg44Ga44Gk5aKX44GI44KL5aSJ5pWwCgljb3VudGVyICs9IDE7CgkvLyDlp4vjgb7jgaPjgabjgYvjgonjga7ntYzpgY7mmYLplpPvvIjnp5LvvIkKCWNvbnN0IHRpbWUgPSBldmVudC50aW1lc3RhbXAgLyAxMDAwOwoKCWlmICh0aW1lID4gMikgewoJCS8vIO+8kuenkuOBn+OBo+OBn+OCieOBk+OBk+OBq+WFpeOCiwoJCWlmICghYm9keUcuaXNTdGF0aWMpIHsKCQkJQm9keS5zZXRTdGF0aWMoYm9keUcsIHRydWUpOwoJCX0KCgl9CgoJLy8g6Z2Z5q2i44GX44Gm44GE44KLIGJvZHlBIOOBruS9jee9ruOCkuebtOaOpeWkieabtOOBmeOCiwoJY29uc3QgcHkgPSAzMDAgKyAxMDAgKiBNYXRoLnNpbih0aW1lICogMik7CglCb2R5LnNldFZlbG9jaXR5KGJvZHlBLCB7CgkJeDogMCwKCQl5OiBweSAtIGJvZHlBLnBvc2l0aW9uLnkKCX0pOwoJQm9keS5zZXRQb3NpdGlvbihib2R5QSwgewoJCXg6IDEwMCwKCQl5OiBweQoJfSk7CgoJLy8g5Y2B5a2X44Gu44Kq44OW44K444Kn44Kv44OI44KS5oyv44KK5a2Q44Gu44KI44GG44Gr5YuV44GL44GZCglCb2R5LnNldFZlbG9jaXR5KGNvbXBvdW5kLCB7CgkJeDogMCwKCQl5OiBweSAtIGNvbXBvdW5kLnBvc2l0aW9uLnkKCX0pOwoJQm9keS5zZXRBbmd1bGFyVmVsb2NpdHkoY29tcG91bmQsIDAuMDIpOwoJQm9keS5zZXRQb3NpdGlvbihjb21wb3VuZCwgewoJCXg6IDYwMCwKCQl5OiBweQoJfSk7CgkvLyDljYHlrZfjga7jgqrjg5bjgrjjgqfjgq/jg4jjgpLlm57ou6LjgZXjgZvjgosKCUJvZHkucm90YXRlKGNvbXBvdW5kLCAwLjAyKTsKCglpZiAoY291bnRlciAlIDEwMCA9PT0gMCkgewoJCS8vIGNvdW50ZXIg44GMIDEwMCDjga7lgI3mlbDjga7jgajjgY3jgaDjgZHjgIHjgZPjgZPjgavlhaXjgosKCgkJLy8gYm9keUIg44KS44K444Oj44Oz44OX44GV44Gb44KLCgkJQm9keS5zZXRWZWxvY2l0eShib2R5QiwgewoJCQl4OiAwLAoJCQl5OiAtMTAKCQl9KTsKCQkvLyBib2R5QyDjgpLjg4rjg4rjg6HjgavjgZnjgosKCQlCb2R5LnNldEFuZ2xlKGJvZHlDLCAtTWF0aC5QSSAqIDAuMjYpOwoJCS8vIGJvZHlEIOOCkuWbnui7ouOBleOBm+OCiwoJCUJvZHkuc2V0QW5ndWxhclZlbG9jaXR5KGJvZHlELCAwLjIpOwoKCX0KfSk7CgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgoKZmVlbGVzLm9wZW5SZWFkbWUoJ21hbmlwdWxhdGlvbi9SRUFETUUubWQnKTsK","options":{"isTrashed":false},"credits":[]},{"name":"matter.js","type":"application/javascript","lastModified":1492756455000,"composed":"","options":{"isTrashed":false},"credits":[]},{"name":"mixed/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg5/jg4Pjgq/jgrkKCuOBk+OBruOCteODs+ODl+ODq+OBp+OBr+OAgeWbm+inkuOBruOCquODluOCuOOCp+OCr+ODiOOBqOOAgeWkmuinkuW9ouOBruOCquODluOCuOOCp+OCr+ODiOOBqOOAgSAgCuOBneOCjOOCieOBruinkuOBjOS4uOOBj+OBquOBo+OBn+OCquODluOCuOOCp+OCr+ODiOOBjOODn+ODg+OCr+OCueOBleOCjOOBpuOBhOOCi+OCiAoKYENvbW1vbi5yYW5kb21gIOOCkuS9v+OBhuOBqOOAgSAgCuODqeODs+ODgOODoOOBq+OCquODluOCuOOCp+OCr+ODiOOCkuS9nOOCi+OBk+OBqOOBjOOBp+OBjeOCi+OCk+OBoAoKCiMjICFb5pS56YCg44GZ44KLXShtaXhlZC9tYWluLmpzKQoKCiMjIyBDb21tb24ucmFuZG9tKGBtaW5gLCBgbWF4YCkKYG1pbmAg44GL44KJIGBtYXhgIOOBvuOBp+OBruaVsOWtl+OBruOBhuOBoeOAgeODqeODs+ODgOODoOOBq+OBsuOBqOOBpOOBruaVsOWtl+OCkui/lOOBmQoKClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoK","options":{"isTrashed":false},"credits":[]},{"name":"mixed/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jg5/jg4Pjgq/jgrk8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJtaXhlZC9tYWluLmpzIj48L3NjcmlwdD4KCTwvaGVhZD4KCTxib2R5PgoJPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"mixed/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKcmVuZGVyLm9wdGlvbnMuc2hvd0FuZ2xlSW5kaWNhdG9yID0gdHJ1ZTsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgovLyDkuK3jga7jgqrjg5bjgrjjgqfjgq/jg4jjga7jgrnjgr/jg4Pjgq8KY29uc3Qgc3RhY2sgPSBDb21wb3NpdGVzLnN0YWNrKDIwLCAyMCwgMTAsIDUsIDAsIDAsICh4LCB5KSA9PiB7Cgljb25zdCBfc2lkZXMgPSBNYXRoLnJvdW5kKENvbW1vbi5yYW5kb20oMSwgOCkpOwoKCS8vIDMg44Gg44Go6Imv44GP44Gq44GE44Gu44Gn44CB5Luj44KP44KK44GrIDQg44Gr44GZ44KLCgljb25zdCBzaWRlcyA9IChfc2lkZXMgPT09IDMpID8gNCA6IF9zaWRlczsKCgkvLyDjgZ/jgb7jgavop5LjgpLkuLjjgY/jgZnjgosKCWNvbnN0IGNoYW1mZXIgPSBzaWRlcyA+IDIgJiYgQ29tbW9uLnJhbmRvbSgpID4gMC43ID8gewoJCXJhZGl1czogMTAKCX0gOiBudWxsOwoKCS8vIOODqeODs+ODgOODoOOBrueiuueOhwoJY29uc3QgcmF0ZSA9IENvbW1vbi5yYW5kb20oMCwgMSk7CglpZiAocmF0ZSA8IDAuMSkgewoJCS8vIDEwJSDjga7norrnjofjgafjgIHjgZPjgZPjgavlhaXjgosKCQlyZXR1cm4gQm9kaWVzLnJlY3RhbmdsZSh4LCB5LCBDb21tb24ucmFuZG9tKDgwLCAxMjApLCBDb21tb24ucmFuZG9tKDI1LCAzMCksIHsKCQkJY2hhbWZlcjogY2hhbWZlcgoJCX0pOwoJfSBlbHNlIGlmIChyYXRlIDwgMC41KSB7CgkJLy8g44Gu44GT44KKIDQwJSDjga7norrnjofjgafjgIHjgZPjgZPjgavlhaXjgosKCQlyZXR1cm4gQm9kaWVzLnJlY3RhbmdsZSh4LCB5LCBDb21tb24ucmFuZG9tKDI1LCA1MCksIENvbW1vbi5yYW5kb20oMjUsIDUwKSwgewoJCQljaGFtZmVyOiBjaGFtZmVyCgkJfSk7Cgl9IGVsc2UgewoJCS8vIOOBruOBk+OCiuOBrueiuueOh+OBp+OAgeOBk+OBk+OBq+WFpeOCiwoJCXJldHVybiBCb2RpZXMucG9seWdvbih4LCB5LCBzaWRlcywgQ29tbW9uLnJhbmRvbSgyNSwgNTApLCB7CgkJCWNoYW1mZXI6IGNoYW1mZXIKCQl9KTsKCX0KCn0pOwoKV29ybGQuYWRkKHdvcmxkLCBzdGFjayk7CgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIOWjgQoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pCl0pOwoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdtaXhlZC9SRUFETUUubWQnKTsK","options":{"isTrashed":false},"credits":[]},{"name":"newtonsCradle/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg4vjg6Xjg7zjg4jjg7Pjga7jgobjgorjgYvjgZQKClvjg4vjg6Xjg7zjg4jjg7Pjga7jgobjgorjgYvjgZRdKGh0dHBzOi8vamEud2lraXBlZGlhLm9yZy93aWtpLyVFMyU4MyU4QiVFMyU4MyVBNSVFMyU4MyVCQyVFMyU4MyU4OCVFMyU4MyVCMyVFMyU4MSVBRSVFMyU4MiU4NiVFMyU4MiU4QSVFMyU4MSU4QiVFMyU4MSU5NCkK5L2c44Gj44Gm44G/44GfCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoKCiMjIOaUuemAoOOBl+OBpuOBv+OCiwoKIVvjgZPjgZPjgYvjgonlp4vjgoHjgotdKG5ld3RvbnNDcmFkbGUvbWFpbi5qcykKCioqQ29tcG9zaXRlcy5uZXd0b25zQ3JhZGxlKGAxYCwgYDJgLCBgM2AsIGA0YCwgYDVgKSoqCnwgfCDmhI/lkbMgfCDjga/jgpPjgYQKLS0tIHwgLS0tIHwgLS0tIAoxIHwg5bem44GL44KJ44Gu44Kt44On44OqIHwgMCB+IDgwMAoyIHwg5LiK44GL44KJ44Gu44Kt44On44OqIHwgMCB+IDYwMCAKMyB8IOWGhuOBruaVsCB8IDAgfgo0IHwg5YaG44Gu5Y2K5b6EIHwgMCB+ICAKNSB8IOOBsuOCguOBrumVt+OBlSB8IDAgfiAgCgrjgoLjgaPjgajmlLnpgKAKIVvoqK3lrppdKG5ld3RvbnNDcmFkbGUvc2V0dGluZy5qcykKCg==","options":{"isTrashed":false},"credits":[]},{"name":"newtonsCradle/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jg4vjg6Xjg7zjg4jjg7Pjga7jgobjgorjgYvjgZQ8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJuZXd0b25zQ3JhZGxlL21haW4uanMiPjwvc2NyaXB0PgoJPC9oZWFkPgoJPGJvZHk+Cgk8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"newtonsCradle/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUJvZHksCglDb21wb3NpdGVzLAoJV29ybGQsCglCb2RpZXMsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKLy8g44OL44Ol44O844OI44Oz44Gu44KG44KK44GL44GU44KS44Gk44GP44KLCmNvbnN0IGNyYWRsZTEgPSBDb21wb3NpdGVzLm5ld3RvbnNDcmFkbGUoMjgwLCAyMDAsIDUsIDMwLCAyMDApOwoKV29ybGQuYWRkKHdvcmxkLCBbCgkvLyDjg4vjg6Xjg7zjg4jjg7Pjga7jgobjgorjgYvjgZQKCWNyYWRsZTEsCgkKXSk7CgovLyDkuIDnlarlt6bjga7lhobjgaDjgZHjgpLlt6bkuIrjgavli5XjgYvjgZkKQm9keS50cmFuc2xhdGUoY3JhZGxlMS5ib2RpZXNbMF0sIHsKCXg6IC0xODAsCgl5OiAtMTAwLAp9KTsKCgo=","options":{"isTrashed":false},"credits":[]},{"name":"newtonsCradle/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUJvZHksCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKcmVuZGVyLm9wdGlvbnMuc2hvd1ZlbG9jaXR5ID0gdHJ1ZTsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgoKZmVlbGVzLm9wZW5SZWFkbWUoJ25ld3RvbnNDcmFkbGUvUkVBRE1FLm1kJyk7CgoKZXhwb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAoJcmVuZGVyLAp9Owo=","options":{"isTrashed":false},"credits":[]},{"name":"newtonsCradle/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK","options":{"isTrashed":false},"credits":[]},{"name":"plugins/attractorsPlugin.js","type":"application/javascript","lastModified":1492756455000,"composed":"Ly8gTk9URTogdGhpcyBwbHVnaW4gd2lsbCBiZSBtb3ZlZCB0byBpdHMgb3duIHJlcG8KCmltcG9ydCB7CglQbHVnaW4sCglDb21wb3NpdGUsCglDb21tb24sCglCb2R5LAp9IGZyb20gJ21hdHRlcic7CgoKY29uc3QgTWF0dGVyQXR0cmFjdG9ycyA9IHsKCW5hbWU6ICdtYXR0ZXItYXR0cmFjdG9ycycsCgoJdmVyc2lvbjogJzAuMS4wJywKCglmb3I6ICdtYXR0ZXItanNAXjAuMTAuMCcsCgoJaW5zdGFsbDogZnVuY3Rpb24oYmFzZSkgewoJCWJhc2UuYWZ0ZXIoJ0JvZHkuY3JlYXRlJywgZnVuY3Rpb24oKSB7CgkJCU1hdHRlckF0dHJhY3RvcnMuQm9keS5pbml0KHRoaXMpOwoJCX0pOwoKCQliYXNlLmFmdGVyKCdFbmdpbmUudXBkYXRlJywgZnVuY3Rpb24oKSB7CgkJCU1hdHRlckF0dHJhY3RvcnMuRW5naW5lLnVwZGF0ZSh0aGlzKTsKCQl9KTsKCX0sCgoJQm9keTogewoJCWluaXQ6IGZ1bmN0aW9uKGJvZHkpIHsKCQkJYm9keS5hdHRyYWN0b3JzID0gYm9keS5hdHRyYWN0b3JzIHx8IFtdOwoJCX0KCX0sCgoJRW5naW5lOiB7CgkJdXBkYXRlOiBmdW5jdGlvbihlbmdpbmUpIHsKCQkJdmFyIHdvcmxkID0gZW5naW5lLndvcmxkLAoJCQkJYm9kaWVzID0gQ29tcG9zaXRlLmFsbEJvZGllcyh3b3JsZCk7CgoJCQlmb3IgKHZhciBpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkgKz0gMSkgewoJCQkJdmFyIGJvZHlBID0gYm9kaWVzW2ldLAoJCQkJCWF0dHJhY3RvcnMgPSBib2R5QS5hdHRyYWN0b3JzOwoKCQkJCWlmIChhdHRyYWN0b3JzICYmIGF0dHJhY3RvcnMubGVuZ3RoID4gMCkgewoJCQkJCWZvciAodmFyIGogPSBpICsgMTsgaiA8IGJvZGllcy5sZW5ndGg7IGogKz0gMSkgewoJCQkJCQl2YXIgYm9keUIgPSBib2RpZXNbal07CgoJCQkJCQlmb3IgKHZhciBrID0gMDsgayA8IGF0dHJhY3RvcnMubGVuZ3RoOyBrICs9IDEpIHsKCQkJCQkJCXZhciBhdHRyYWN0b3IgPSBhdHRyYWN0b3JzW2tdLAoJCQkJCQkJCWZvcmNlVmVjdG9yID0gYXR0cmFjdG9yOwoKCQkJCQkJCWlmIChDb21tb24uaXNGdW5jdGlvbihhdHRyYWN0b3IpKSB7CgkJCQkJCQkJZm9yY2VWZWN0b3IgPSBhdHRyYWN0b3IoYm9keUEsIGJvZHlCKTsKCQkJCQkJCX0KCgkJCQkJCQlpZiAoZm9yY2VWZWN0b3IpIHsKCQkJCQkJCQlCb2R5LmFwcGx5Rm9yY2UoYm9keUIsIGJvZHlCLnBvc2l0aW9uLCBmb3JjZVZlY3Rvcik7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQl9Cgl9Cn07CgpQbHVnaW4ucmVnaXN0ZXIoTWF0dGVyQXR0cmFjdG9ycyk7Cgp3aW5kb3cuTWF0dGVyQXR0cmFjdG9ycyA9IE1hdHRlckF0dHJhY3RvcnM7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"plugins/gravityPlugin.js","type":"application/javascript","lastModified":1492756455000,"composed":"Ly8gTk9URTogdGhpcyBwbHVnaW4gd2lsbCBiZSBtb3ZlZCB0byBpdHMgb3duIHJlcG8KCmltcG9ydCB7CglQbHVnaW4sCglWZWN0b3IsCglCb2R5LAp9IGZyb20gJ21hdHRlcic7CgoKY29uc3QgTWF0dGVyR3Jhdml0eSA9IHsKCW5hbWU6ICdtYXR0ZXItZ3Jhdml0eScsCgoJdmVyc2lvbjogJzAuMS4wJywKCglmb3I6ICdtYXR0ZXItanNAXjAuMTAuMCcsCgoJdXNlczogWwoJCSdtYXR0ZXItYXR0cmFjdG9yc0BeMC4xLjAnCgldLAoKCWluc3RhbGw6IGZ1bmN0aW9uKGJhc2UpIHsKCQliYXNlLmFmdGVyKCdCb2R5LmNyZWF0ZScsIGZ1bmN0aW9uKCkgewoJCQlNYXR0ZXJHcmF2aXR5LkJvZHkuaW5pdCh0aGlzKTsKCQl9KTsKCX0sCgoJQm9keTogewoJCWluaXQ6IGZ1bmN0aW9uKGJvZHkpIHsKCQkJaWYgKGJvZHkucGx1Z2luLmdyYXZpdHkpIHsKCQkJCWJvZHkuYXR0cmFjdG9ycy5wdXNoKE1hdHRlckdyYXZpdHkuQm9keS5hcHBseUdyYXZpdHkpOwoJCQl9CgkJfSwKCgkJYXBwbHlHcmF2aXR5OiBmdW5jdGlvbihib2R5QSwgYm9keUIpIHsKCQkJdmFyIGJUb0EgPSBWZWN0b3Iuc3ViKGJvZHlCLnBvc2l0aW9uLCBib2R5QS5wb3NpdGlvbiksCgkJCQlkaXN0YW5jZVNxID0gVmVjdG9yLm1hZ25pdHVkZVNxdWFyZWQoYlRvQSkgfHwgMC4wMDAxLAoJCQkJbm9ybWFsID0gVmVjdG9yLm5vcm1hbGlzZShiVG9BKSwKCQkJCW1hZ25pdHVkZSA9IC1ib2R5QS5wbHVnaW4uZ3Jhdml0eSAqIChib2R5QS5tYXNzICogYm9keUIubWFzcyAvIGRpc3RhbmNlU3EpLAoJCQkJZm9yY2UgPSBWZWN0b3IubXVsdChub3JtYWwsIG1hZ25pdHVkZSk7CgoJCQlCb2R5LmFwcGx5Rm9yY2UoYm9keUEsIGJvZHlBLnBvc2l0aW9uLCBWZWN0b3IubmVnKGZvcmNlKSk7CgkJCUJvZHkuYXBwbHlGb3JjZShib2R5QiwgYm9keUIucG9zaXRpb24sIGZvcmNlKTsKCQl9Cgl9Cn07CgpQbHVnaW4ucmVnaXN0ZXIoTWF0dGVyR3Jhdml0eSk7Cgp3aW5kb3cuTWF0dGVyR3Jhdml0eSA9IE1hdHRlckdyYXZpdHk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"plugins/wrapPlugin.js","type":"application/javascript","lastModified":1492756455000,"composed":"Ly8gTk9URTogdGhpcyBwbHVnaW4gd2lsbCBiZSBtb3ZlZCB0byBpdHMgb3duIHJlcG8KCmltcG9ydCB7CglQbHVnaW4sCglDb21wb3NpdGUsCglCb2R5LAp9IGZyb20gJ21hdHRlcic7CgoKY29uc3QgTWF0dGVyV3JhcCA9IHsKCW5hbWU6ICdtYXR0ZXItd3JhcCcsCgoJdmVyc2lvbjogJzAuMS4wJywKCglmb3I6ICdtYXR0ZXItanNAXjAuMTAuMCcsCgoJaW5zdGFsbDogZnVuY3Rpb24oYmFzZSkgewoJCWJhc2UuYWZ0ZXIoJ0VuZ2luZS51cGRhdGUnLCBmdW5jdGlvbigpIHsKCQkJTWF0dGVyV3JhcC5FbmdpbmUudXBkYXRlKHRoaXMpOwoJCX0pOwoJfSwKCglFbmdpbmU6IHsKCQl1cGRhdGU6IGZ1bmN0aW9uKGVuZ2luZSkgewoJCQl2YXIgd29ybGQgPSBlbmdpbmUud29ybGQsCgkJCQlib2RpZXMgPSBDb21wb3NpdGUuYWxsQm9kaWVzKHdvcmxkKTsKCgkJCWZvciAodmFyIGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSArPSAxKSB7CgkJCQl2YXIgYm9keSA9IGJvZGllc1tpXTsKCQkJCWJvZHkucGx1Z2luID0gYm9keS5wbHVnaW4gfHwge307CgoJCQkJaWYgKGJvZHkucGx1Z2luLndyYXApIHsKCQkJCQlNYXR0ZXJXcmFwLkJvZHkud3JhcChib2R5LCBib2R5LnBsdWdpbi53cmFwKTsKCQkJCX0KCQkJfQoJCX0KCX0sCgoJQm9keTogewoJCXdyYXA6IGZ1bmN0aW9uKGJvZHksIGJvdW5kcykgewoJCQl2YXIgeCA9IG51bGwsCgkJCQl5ID0gbnVsbDsKCgkJCWlmICh0eXBlb2YgYm91bmRzLm1pbi54ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgYm91bmRzLm1heC54ICE9PSAndW5kZWZpbmVkJykgewoJCQkJaWYgKGJvZHkuYm91bmRzLm1pbi54ID4gYm91bmRzLm1heC54KSB7CgkJCQkJeCA9IGJvdW5kcy5taW4ueCAtIChib2R5LmJvdW5kcy5tYXgueCAtIGJvZHkucG9zaXRpb24ueCk7CgkJCQl9IGVsc2UgaWYgKGJvZHkuYm91bmRzLm1heC54IDwgYm91bmRzLm1pbi54KSB7CgkJCQkJeCA9IGJvdW5kcy5tYXgueCAtIChib2R5LmJvdW5kcy5taW4ueCAtIGJvZHkucG9zaXRpb24ueCk7CgkJCQl9CgkJCX0KCgkJCWlmICh0eXBlb2YgYm91bmRzLm1pbi55ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgYm91bmRzLm1heC55ICE9PSAndW5kZWZpbmVkJykgewoJCQkJaWYgKGJvZHkuYm91bmRzLm1pbi55ID4gYm91bmRzLm1heC55KSB7CgkJCQkJeSA9IGJvdW5kcy5taW4ueSAtIChib2R5LmJvdW5kcy5tYXgueSAtIGJvZHkucG9zaXRpb24ueSk7CgkJCQl9IGVsc2UgaWYgKGJvZHkuYm91bmRzLm1heC55IDwgYm91bmRzLm1pbi55KSB7CgkJCQkJeSA9IGJvdW5kcy5tYXgueSAtIChib2R5LmJvdW5kcy5taW4ueSAtIGJvZHkucG9zaXRpb24ueSk7CgkJCQl9CgkJCX0KCgkJCWlmICh4ICE9PSBudWxsIHx8IHkgIT09IG51bGwpIHsKCQkJCUJvZHkuc2V0UG9zaXRpb24oYm9keSwgewoJCQkJCXg6IHggfHwgYm9keS5wb3NpdGlvbi54LAoJCQkJCXk6IHkgfHwgYm9keS5wb3NpdGlvbi55CgkJCQl9KTsKCQkJfQoJCX0KCX0KfTsKClBsdWdpbi5yZWdpc3RlcihNYXR0ZXJXcmFwKTsKCndpbmRvdy5NYXR0ZXJXcmFwID0gTWF0dGVyV3JhcDsK","options":{"isTrashed":false},"credits":[]},{"name":"pyramid/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg5Tjg6njg5/jg4Pjg4kKCuODlOODqeODn+ODg+ODieW7uuOBpuOBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCiMjIOaUuemAoOOBl+OBpuOBv+OCiwohW+OBk+OBk+OBi+OCieWni+OCgeOCi10ocHlyYW1pZC9tYWluLmpzKQoKKipDb21wb3NpdGVzLnB5cmFtaWQoYDFgLCBgMmAsIGAzYCwgYDRgLCBgNWAsIGA2YCwgKHgsIHkpID0+IHsgIArjgIDjgIByZXR1cm4gQm9kaWVzLnJlY3RhbmdsZSh4LCB5LCBgN2AsIGA4YCwgeyAgCuOAgOOAgOOAgOOAgHJlbmRlcjogeyAgCuOAgOOAgOOAgOOAgOOAgOOAgGZpbGxTdHlsZTogYDlgLCAgCuOAgOOAgOOAgOOAgH0sICAK44CA44CAfSk7ICAKfSk7KioKCnwgfCDmhI/lkbMgfCDjga/jgpPjgYQKLS0tIHwgLS0tIHwgLS0tIHwgLS0tIHwgLS0tCjEgfCDjg5Tjg6njg5/jg4Pjg4njga7kvY3nva7vvIjmqKrvvIkgfCAwIH4gODAwCjIgfCDjg5Tjg6njg5/jg4Pjg4njga7kvY3nva7vvIjnuKbvvIkgfCAwIH4gNjAwIAozIHwg5LiA55Wq5LiL44Gu5YiX44Gu5pWw77yI5qiq77yJIHwgMCB+IAo0IHwg5Lit5aSu44Gu5q6144Gu5pWw77yI44K/44OG77yJIHwgMCB+IAo1IHwg5qiq5pa55ZCR44Gu6ZaT44GL44GPIHwgMCB+IAo2IHwg44K/44OG5pa55ZCR44Gu6ZaT44GL44GPIHwgMCB+IAo3IHwg44Kq44OW44K444Kn44Kv44OI44Gu5qiq5bmFIHwgMCB+IAo4IHwg44Kq44OW44K444Kn44Kv44OI44Gu6auY44GVIHwgMCB+IAoK44KC44Gj44Go5pS56YCgCiFb6Kit5a6aXShweXJhbWlkL3NldHRpbmcuanMpCiFb44GL44G544O744KG44GLXShweXJhbWlkL3N0YWdlLmpzKQoKCi0gLSAtCgojIyDlv5znlKjkvosKClvjgrnjg6rjg7PjgrDjgrfjg6fjg4Pjg4hdKHNsaW5nc2hvdC9pbmRleC5odG1sKQo=","options":{"isTrashed":false},"credits":[]},{"name":"pyramid/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jg5Tjg6njg5/jg4Pjg4k8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJweXJhbWlkL21haW4uanMiPjwvc2NyaXB0PgoJPC9oZWFkPgoJPGJvZHk+Cgk8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"pyramid/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgkKCS8vIOODlOODqeODn+ODg+ODiQoJQ29tcG9zaXRlcy5weXJhbWlkKDEwMCwgMjU4LCAxNSwgMTAsIDAsIDAsICh4LCB5KSA9PiB7CgkJcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgNDAsIDQwLCB7CgkJCS8vIOOCquODluOCuOOCp+OCr+ODiOOBruiJsgoJCQlyZW5kZXI6IHsKCQkJCWZpbGxTdHlsZTogIiNGMEMwMDAiLAoJCQl9LAoJCQkKCQl9KTsKCX0pLAoJCl0pOwoKCgppbXBvcnQgJy4vc3RhZ2UnOwo=","options":{"isTrashed":false},"credits":[]},{"name":"pyramid/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdweXJhbWlkL1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"pyramid/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIOWjgQoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjA1LCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCQpdKTs=","options":{"isTrashed":false},"credits":[]},{"name":"raycasting/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDnt5rliIbjgajjga7jgZfjgofjgYbnqoEKCgrnlLvpnaLjga7kuIrjgYvjgonjg57jgqbjgrnjgb7jgafjga7nt5rjgavjgqrjg5bjgrjjgqfjgq/jg4jjgYzph43jgarjgaPjgZ/jgajjgY3jgIEgIArjgZ3jgZPjgavlm5vop5LlvaLjgpLmj4/nlLvjgZnjgovjgogKCgojIyAhW+aUuemAoOOBmeOCi10ocmF5Y2FzdGluZy9tYWluLmpzKQoKCiMjIGNvbnRleHQg44Gu44Oh44Oz44OQ44O8CuODoeODs+ODkOODvOWQjSB8IOaEj+WRsyB8IDEgfCAyIHwgMyB8IDQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKLS0tIHwgLS0tIHwgLS0tIHwgLS0tIHwgLS0tIHwgLS0tCmJlZ2luUGF0aChgMWAsIGAyYCkgfCDmlrDjgZfjgYTjg5HjgrnjgpLkvZzjgosgfCDlp4vngrko5qiqKSB8IOWni+eCuSjnuKYpIHwgfCAKbW92ZVRvKGAxYCwgYDJgKSB8IOS9leOCguOBm+OBmuODkeOCueOCkuenu+WLleOBmeOCiyB8IOenu+WLlemHjyjmqKopIHwg56e75YuV6YePKOe4pikgfCB8IApsaW5lVG8oYDFgLCBgMmApIHwg57ea44KS5byV44GE44Gm44OR44K544KS56e75YuV44GZ44KLIHwg56e75YuV6YePKOaoqikgfCDnp7vli5Xph48o57imKSB8IHwgCnJlY3QoYDFgLCBgMmAsIGAzYCwgYDRgKSB8IOWbm+inkuW9ouOBruODkeOCueOCkuW8leOBjyB8IOW3puerryB8IOS4iuerryB8IOW5hSB8IOmrmOOBlQpzdHJva2VTdHlsZSA9IGAxYCB8IOe3muOBruiJsiB8IOiJsuOBruaWh+Wtl+WIlyB8IHwgfApmaWxsU3R5bGUgPSBgMWAgfCDloZfjgorjgaTjgbbjgZfjga7oibIgfCDoibLjga7mloflrZfliJcgfCB8IHwKbGluZVdpZHRoID0gYDFgIHwg57ea44Gu5aSq44GVIHwg5aSq44GV44Gu5pWw5YCkIHwgfCB8CnN0cm9rZSgpIHwg44OR44K55LiK44Gu57ea44KS5o+P55S744GZ44KLIHwgfCB8IHwKZmlsbCgpIHwg44OR44K55LiK44Gu6Z2i44KS5aGX44KK44Gk44G244GZIHwgfCB8IHwKCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoK","options":{"isTrashed":false},"credits":[]},{"name":"raycasting/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7nt5rliIbjgajjga7jgZfjgofjgYbnqoE8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJyYXljYXN0aW5nL21haW4uanMiPjwvc2NyaXB0PgoJPC9oZWFkPgoJPGJvZHk+Cgk8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"raycasting/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZSwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglRdWVyeSwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJRXZlbnRzLAoJV29ybGQsCglWZXJ0aWNlcywKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7CnJlbmRlci5vcHRpb25zLnNob3dBbmdsZUluZGljYXRvciA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Kq44OW44K444Kn44Kv44OI44Gu44K544K/44OD44KvCmNvbnN0IHN0YWNrID0gQ29tcG9zaXRlcy5zdGFjaygyMCwgMjAsIDEyLCA0LCAwLCAwLCAoeCwgeSkgPT4gewoJLy8g44Op44Oz44OA44Og44Gu56K6546HCgljb25zdCByYXRlID0gQ29tbW9uLnJhbmRvbSgwLCAxKTsKCWlmIChyYXRlIDwgMC4xKSB7CgkJLy8gMTAlIOOBrueiuueOh+OBp+OAgeOBk+OBk+OBq+WFpeOCiwoJCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIENvbW1vbi5yYW5kb20oODAsIDEyMCksIENvbW1vbi5yYW5kb20oMjAsIDMwKSk7CgoJfSBlbHNlIGlmIChyYXRlIDwgMC41KSB7CgkJLy8g44Gu44GT44KKIDQwJSDjga7norrnjofjgafjgIHjgZPjgZPjgavlhaXjgosKCQlyZXR1cm4gQm9kaWVzLnJlY3RhbmdsZSh4LCB5LCBDb21tb24ucmFuZG9tKDIwLCA1MCksIENvbW1vbi5yYW5kb20oMjAsIDUwKSk7CgoJfSBlbHNlIHsKCQkvLyDjga7jgZPjgorjga7norrnjofjgafjgIHjgZPjgZPjgavlhaXjgosKCQljb25zdCBfc2lkZXMgPSBNYXRoLnJvdW5kKENvbW1vbi5yYW5kb20oMSwgOCkpOwoJCWNvbnN0IHNpZGVzID0gKF9zaWRlcyA9PT0gMykgPyA0IDogX3NpZGVzOwoJCXJldHVybiBCb2RpZXMucG9seWdvbih4LCB5LCBzaWRlcywgQ29tbW9uLnJhbmRvbSgyMCwgNTApKTsKCgl9Cn0pOwoKLy8g5pif44Gu44Kq44OW44K444Kn44Kv44OICmNvbnN0IHN0YXIgPSBWZXJ0aWNlcy5mcm9tUGF0aCgnNTAgMCA2MyAzOCAxMDAgMzggNjkgNTkgODIgMTAwIDUwIDc1IDE4IDEwMCAzMSA1OSAwIDM4IDM3IDM4Jyk7CmNvbnN0IGNvbmNhdmUgPSBCb2RpZXMuZnJvbVZlcnRpY2VzKDIwMCwgMjAwLCBzdGFyKTsKCldvcmxkLmFkZCh3b3JsZCwgWwoJc3RhY2ssCgljb25jYXZlLAoJLy8g5aOBCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCA2MDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDgwMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSkKXSk7CgpFdmVudHMub24ocmVuZGVyLCAnYWZ0ZXJSZW5kZXInLCAoKSA9PiB7CgkvLyDlrp/ooYzkuK3jga/luLjjgavnlLvpnaLjga7mj4/nlLvjgYzntYLjgo/jgaPjgZ/jgonjgIHjgZPjgZPjgavlhaXjgosKCgljb25zdCBtb3VzZSA9IG1vdXNlQ29uc3RyYWludC5tb3VzZTsKCWNvbnN0IGNvbnRleHQgPSByZW5kZXIuY29udGV4dDsKCWNvbnN0IGJvZGllcyA9IENvbXBvc2l0ZS5hbGxCb2RpZXMoZW5naW5lLndvcmxkKTsKCS8vIOe3muWIhuOBruOCueOCv+ODvOODiOWcsOeCuQoJY29uc3Qgc3RhcnRQb2ludCA9IHsKCQl4OiA0MDAsCgkJeTogMTAwCgl9OwoJLy8g57ea5YiG44Gu44Ko44Oz44OJ5Zyw54K5Cgljb25zdCBlbmRQb2ludCA9IG1vdXNlLnBvc2l0aW9uOwoKCS8vIOe3muWIhuOBruOBl+OCh+OBhueqgeWIpOWumgoJY29uc3QgY29sbGlzaW9ucyA9IFF1ZXJ5LnJheShib2RpZXMsIHN0YXJ0UG9pbnQsIGVuZFBvaW50KTsKCglSZW5kZXIuc3RhcnRWaWV3VHJhbnNmb3JtKHJlbmRlcik7CgoJLy8g57ea5YiG44KS55S76Z2i44Gr5o+P55S744GZ44KLCgljb250ZXh0LmJlZ2luUGF0aCgpOwoJY29udGV4dC5tb3ZlVG8oc3RhcnRQb2ludC54LCBzdGFydFBvaW50LnkpOwoJY29udGV4dC5saW5lVG8oZW5kUG9pbnQueCwgZW5kUG9pbnQueSk7CglpZiAoY29sbGlzaW9ucy5sZW5ndGggPiAwKSB7CgkJY29udGV4dC5zdHJva2VTdHlsZSA9ICcjZmZmJzsKCX0gZWxzZSB7CgkJY29udGV4dC5zdHJva2VTdHlsZSA9ICcjNTU1JzsKCX0KCWNvbnRleHQubGluZVdpZHRoID0gMC41OwoJY29udGV4dC5zdHJva2UoKTsKCgkvLyDnt5rliIbjgajjgZfjgofjgYbnqoHjgZfjgZ/jgqrjg5bjgrjjgqfjgq/jg4jjga7jgYLjgovkvY3nva7jgavjgIHlm5vop5LlvaLjgpLmj4/nlLvjgZnjgosKCWZvciAoY29uc3QgY29sbGlzaW9uIG9mIGNvbGxpc2lvbnMpIHsKCQljb250ZXh0LnJlY3QoY29sbGlzaW9uLmJvZHlBLnBvc2l0aW9uLnggLSA0LjUsIGNvbGxpc2lvbi5ib2R5QS5wb3NpdGlvbi55IC0gNC41LCA4LCA4KTsKCX0KCgljb250ZXh0LmZpbGxTdHlsZSA9ICdyZ2JhKDI1NSwxNjUsMCwwLjcpJzsKCWNvbnRleHQuZmlsbCgpOwoKCVJlbmRlci5lbmRWaWV3VHJhbnNmb3JtKHJlbmRlcik7Cgp9KTsKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgncmF5Y2FzdGluZy9SRUFETUUubWQnKTsK","options":{"isTrashed":false},"credits":[]},{"name":"rectangle/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDkvY3nva7jg7vlpKfjgY3jgZUKCuOCquODluOCuOOCp+OCr+ODiOOCkuS9nOOCi+aZguOBriAqKuS9jee9ruOBqOWkp+OBjeOBlSoqIOOCkuWkieOBiOOBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXShyZWN0YW5nbGUvbWFpbi5qcykKCiMjIyBCb2RpZXMucmVjdGFuZ2xlKGAxYCwgYDJgLCBgM2AsIGA0YCk7Cnx8IOaEj+WRsyB8IOOBr+OCk+OBhCAKLS0tIHwgLS0tIHwgLS0tIAoxIHwg5bem44GL44KJ44Gu44Kt44On44OqIHwgMCB+IDgwMAoyIHwg5LiK44GL44KJ44Gu44Kt44On44OqIHwgMCB+IDgwMAozIHwg5qiq5pa55ZCR44Gu6ZW344GVIHwgMCB+IAo0IHwg44K/44OG5pa55ZCR44Gu6ZW344GVIHwgMCB+IAoK44KC44Gj44Go5pS56YCgCiFb6Kit5a6aXShyZWN0YW5nbGUvc2V0dGluZy5qcykKIVvjgYvjgbnjg7vjgobjgYtdKHJlY3RhbmdsZS9zdGFnZS5qcykK","options":{"isTrashed":false},"credits":[]},{"name":"rectangle/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7kvY3nva7jg7vlpKfjgY3jgZU8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJyZWN0YW5nbGUvbWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCTwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"rectangle/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nLmpzJzsKCldvcmxkLmFkZCh3b3JsZCwgWwoJCgkvLyDlt6bjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoMTUwLCA1MDAsIDEwMCwgMjAwKSwKCQoJLy8g5Lit44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNDAwLCAxMDAsIDMwMCksCgkKCS8vIOWPs+OBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg1MDAsIDEwMCwgNDAwLCAxMDApLAoJCl0pOwoKCmltcG9ydCAnLi9zdGFnZS5qcyc7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"rectangle/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVdvcmxkLAoJUnVubmVyLAoJTW91c2UsCglNb3VzZUNvbnN0cmFpbnQsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdyZWN0YW5nbGUvUkVBRE1FLm1kJyk7CgoKZXhwb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAoJcmVuZGVyLAp9Owo=","options":{"isTrashed":false},"credits":[]},{"name":"rectangle/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOWjgQpXb3JsZC5hZGQod29ybGQsIFsKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KQpdKTsK","options":{"isTrashed":false},"credits":[]},{"name":"render.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKfSBmcm9tICdtYXR0ZXInOwoKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKCmNvbnN0IG9wdGlvbnMgPSB7Cgl3aWR0aDogODAwLAoJaGVpZ2h0OiA2MDAsCgkvLyDog4zmma/oibIKCWJhY2tncm91bmQ6ICcjZmFmYWZhJywKCWhhc0JvdW5kczogZmFsc2UsCgllbmFibGVkOiB0cnVlLAoJLy8g44Oi44OO44Kv44Ot5YyWICjpq5jpgJ/jgavjgarjgospCgl3aXJlZnJhbWVzOiBmYWxzZSwKCXdpcmVmcmFtZUJhY2tncm91bmQ6ICcjMjIyJywKCXNob3dTbGVlcGluZzogZmFsc2UsCglzaG93RGVidWc6IGZhbHNlLAoJc2hvd0Jyb2FkcGhhc2U6IGZhbHNlLAoJc2hvd0JvdW5kczogZmFsc2UsCgkvLyDpgJ/luqbjga7lj6/oppbljJYKCXNob3dWZWxvY2l0eTogZmFsc2UsCgkvLyDjgZfjgofjgYbnqoHjga7lj6/oppbljJYKCXNob3dDb2xsaXNpb25zOiBmYWxzZSwKCS8vIOWIhumbouOBruWPr+imluWMlgoJc2hvd1NlcGFyYXRpb25zOiBmYWxzZSwKCS8vIOi7uOOBruWPr+imluWMlgoJc2hvd0F4ZXM6IGZhbHNlLAoJLy8g5L2N572u44Gu5Y+v6KaW5YyWCglzaG93UG9zaXRpb25zOiBmYWxzZSwKCS8vIOinkuW6puOBruWPr+imluWMlgoJc2hvd0FuZ2xlSW5kaWNhdG9yOiBmYWxzZSwKCS8vIElEIOOBruWPr+imluWMlgoJc2hvd0lkczogZmFsc2UsCglzaG93U2hhZG93czogZmFsc2UsCglzaG93VmVydGV4TnVtYmVyczogZmFsc2UsCglzaG93Q29udmV4SHVsbHM6IGZhbHNlLAoJc2hvd0ludGVybmFsRWRnZXM6IGZhbHNlLAoJc2hvd01vdXNlUG9zaXRpb246IGZhbHNlLAoJLy8g44OU44Kv44K744Or5YCN546HCglwaXhlbFJhdGlvOiAxLAp9OwoKLy8gY3JlYXRlIGEgcmVuZGVyZXIKZXhwb3J0IGRlZmF1bHQgUmVuZGVyLmNyZWF0ZSh7CgllbGVtZW50OiBkb2N1bWVudC5ib2R5LAoJZW5naW5lLAoJb3B0aW9ucywKfSk7CgpleHBvcnQgY29uc3QgY3JlYXRlUmVuZGVyID0gKG9wdCkgPT4gUmVuZGVyLmNyZWF0ZSh7CgllbGVtZW50OiBkb2N1bWVudC5ib2R5LAoJZW5naW5lLAoJb3B0aW9uczogey4uLm9wdGlvbnMsIC4uLm9wdH0sCn0pOwoK","options":{"isTrashed":false},"credits":[]},{"name":"render/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDoibIKCuOCquODluOCuOOCp+OCr+ODiOOBruiJsuOCkuWkieOBiOOBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXShyZW5kZXIvbWFpbi5qcykKCnx8IOaEj+WRsyAKLS0tIHwgLS0tIApmaWxsU3R5bGUgfCDjgazjgorjgaTjgbbjgZfjga7oibIgCnN0cm9rZVN0eWxlIHwg57ea44Gu6ImyIApsaW5lV2lkdGggfCDnt5rjga7lpKrjgZUgCgojIyMg6Imy44Gu5L2c44KK5pa5CgpgJyNGRjAwMDAnYCDjga7jgojjgYbjgarmloflrZfliJfjgYzjgIHoibLjgpLooajjgZfjgabjgYTjgb7jgZkgIAroibLjgpLopovjgaTjgZHjgovjgavjga8gW0NTU+iJsuimi+acrF0oaHR0cHM6Ly9ob2dlaG9nZS50ay93ZWJkZXYvY29sb3IvKQrjgYzkvr/liKnjgafjgZkKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0ocmVuZGVyL3NldHRpbmcuanMpCiFb44GL44G544O744KG44GLXShyZW5kZXIvc3RhZ2UuanMpCgotIC0gLQoKIyMg5b+c55So5L6LCg==","options":{"isTrashed":false},"credits":[]},{"name":"render/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7oibI8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJyZW5kZXIvbWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCTwvYm9keT4KPC9odG1sPgo=","options":{"isTrashed":false},"credits":[]},{"name":"render/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nLmpzJzsKCldvcmxkLmFkZCh3b3JsZCwgWwoKCS8vIOi1pOiJsuOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSgyMDAsIDEwMCwgMTAwLCAxMDAsIHsKCQlyZW5kZXI6IHsKCQkJLy8g44Gs44KK44Gk44G244GX44Gu6ImyCgkJCWZpbGxTdHlsZTogJyNGRjAwMDAnLAoJCX0sCgoJfSksCgoJLy8g6buE6Imy44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMTAwLCAxMDAsIDEwMCwgewoJCXJlbmRlcjogewoJCQkvLyDjgazjgorjgaTjgbbjgZfjga7oibIKCQkJZmlsbFN0eWxlOiAnI0ZGRkYwMCcsCgkJCS8vIOe3muOBruiJsgoJCQlzdHJva2VTdHlsZTogJyMwMDAwMDAnLAoJCQkvLyDnt5rjga7lpKrjgZUKCQkJbGluZVdpZHRoOiAxLAoJCX0sCgoJfSksCgoJLy8g57eR6Imy44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDYwMCwgMTAwLCAxMDAsIDEwMCwgewoJCXJlbmRlcjogewoJCQkvLyDjgazjgorjgaTjgbbjgZfjga7oibIKCQkJZmlsbFN0eWxlOiAnIzAwRkYwMCcsCgkJCS8vIOe3muOBruiJsgoJCQlzdHJva2VTdHlsZTogJyNGRkZGRkYnLAoJCQkvLyDnt5rjga7lpKrjgZUKCQkJbGluZVdpZHRoOiAyMCwKCQl9LAoKCX0pLAoKXSk7CgoKaW1wb3J0ICcuL3N0YWdlLmpzJzsK","options":{"isTrashed":false},"credits":[]},{"name":"render/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVdvcmxkLAoJUnVubmVyLAoJTW91c2UsCglNb3VzZUNvbnN0cmFpbnQsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7ClJlbmRlci5ydW4ocmVuZGVyKTsKcmVuZGVyLm9wdGlvbnMuYmFja2dyb3VuZCA9ICcjNTc1NzU3JzsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdyZW5kZXIvUkVBRE1FLm1kJyk7CgoKZXhwb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAoJcmVuZGVyLAp9Owo=","options":{"isTrashed":false},"credits":[]},{"name":"render/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOWjgQpXb3JsZC5hZGQod29ybGQsIFsKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKXSk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"renderConfigs.js","type":"application/javascript","lastModified":1492756455000,"composed":"CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK","options":{"isTrashed":false},"credits":[]},{"name":"restitution/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjga/jga3ov5TjgooKCuOCquODluOCuOOCp+OCr+ODiOOBriBb44Gv44Gt6L+U44KKXShodHRwczovL2phLndpa2lwZWRpYS5vcmcvd2lraS8lRTUlOEYlOEQlRTclOTklQkElRTQlQkYlODIlRTYlOTUlQjApCuOCkuWkieOBiOOBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXShyZXN0aXR1dGlvbi9tYWluLmpzKQoKfHwg5oSP5ZGzIHwg44Gv44KT44GECi0tLSB8IC0tLSB8IC0tLSAKcmVzdGl0dXRpb24gfCDjga/jga3ov5Tjgorjga7lpKfjgY3jgZUgfCAwIH4gMS4wCgrjgoLjgaPjgajmlLnpgKAKIVvoqK3lrppdKHJlc3RpdHV0aW9uL3NldHRpbmcuanMpCiFb44GL44G544O744KG44GLXShyZXN0aXR1dGlvbi9zdGFnZS5qcykKCi0gLSAtCgojIyDlv5znlKjkvosK","options":{"isTrashed":false},"credits":[]},{"name":"restitution/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7ot7Pjga3ov5Tjgoo8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJyZXN0aXR1dGlvbi9tYWluLmpzIj48L3NjcmlwdD4KCTwvaGVhZD4KCTxib2R5PgoJPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"restitution/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIOS4gOeVquW3puOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSgxMDAsIDE1MCwgNTAsIDUwLCB7CgkJLy8g44Gv44Gt6L+U44KK44Gu5aSn44GN44GVCgkJcmVzdGl0dXRpb246IDAuOSwKCQkvLyDjgYvjgZ/jgoDjgY0KCQlhbmdsZTogMCwKCQkKCX0pLAoJLy8g5bem44GL44KJ5LqM55Wq55uu44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDIyMCwgMTUwLCA1MCwgNTAsIHsKCQkvLyDjga/jga3ov5Tjgorjga7lpKfjgY3jgZUKCQlyZXN0aXR1dGlvbjogMC45LAoJCS8vIOOBi+OBn+OCgOOBjQoJCWFuZ2xlOiAtMC40NzEsCgkJCgl9KSwKCS8vIOW3puOBi+OCieS4ieeVquebruOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSgzNDAsIDE1MCwgNTAsIDUwLCB7CgkJLy8g44Gv44Gt6L+U44KK44Gu5aSn44GN44GVCgkJcmVzdGl0dXRpb246IDAuOSwKCQkvLyDjgYvjgZ/jgoDjgY0KCQlhbmdsZTogLTAuNzg1LAoJCQoJfSksCgkvLyDlt6bjgYvjgonlm5vnlarnm67jga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5jaXJjbGUoNDYwLCAxNTAsIDI1LCB7CgkJLy8g44Gv44Gt6L+U44KK44Gu5aSn44GN44GVCgkJcmVzdGl0dXRpb246IDAuOSwKCQkvLyDjgYvjgZ/jgoDjgY0KCQlhbmdsZTogMCwKCQkKCX0pLAoJLy8g5LiA55Wq5Y+z44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDEwMCArIHNwYWNlICogNSwgMTUwLCAxODAsIDIwLCB7CgkJLy8g44Gv44Gt6L+U44KK44Gu5aSn44GN44GVCgkJcmVzdGl0dXRpb246IDAuOSwKCQkvLyDjgYvjgZ/jgoDjgY0KCQlhbmdsZTogLTEuNTcsCgkJCgl9KSwKCQpdKTsKCgppbXBvcnQgJy4vc2V0dGluZyc7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"restitution/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QW5nbGVJbmRpY2F0b3IgPSB0cnVlOwpyZW5kZXIub3B0aW9ucy5zaG93Q29sbGlzaW9ucyA9IHRydWU7CnJlbmRlci5vcHRpb25zLnNob3dWZWxvY2l0eSA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdyZXN0aXR1dGlvbi9SRUFETUUubWQnKTsKCgpleHBvcnQgewoJZW5naW5lLAoJd29ybGQsCglyZW5kZXIsCn07Cg==","options":{"isTrashed":false},"credits":[]},{"name":"restitution/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgovLyDjgYvjgbkKV29ybGQuYWRkKHdvcmxkLCBbCgoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoKXSk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"rounded/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDop5LkuLggMgoK6KeS44GU44Go44Gr5Li444G/44Gu5aSn44GN44GV44KS5aSJ44GI44Gm44G/44GfCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoKCiMjIOaUuemAoOOBl+OBpuOBv+OCiwoKIVvjgZPjgZPjgYvjgonlp4vjgoHjgotdKHJvdW5kZWQvbWFpbi5qcykKCiMjIyByYWRpdXM6IFtgMWAsIGAyYCwgYDNgLCBgNGBdCgp8fCDmhI/lkbMgfCDjga/jgpPjgYQKLS0tIHwgLS0tIHwgLS0tIAoxIHwg5bem5LiK44Gu5Li444G/44Gu5aSn44GN44GVIHwgMCB+IAoyIHwg5Y+z5LiK44Gu5Li444G/44Gu5aSn44GN44GVIHwgMCB+IAozIHwg5Y+z5LiL44Gu5Li444G/44Gu5aSn44GN44GVIHwgMCB+IAo0IHwg5bem5LiL44Gu5Li444G/44Gu5aSn44GN44GVIHwgMCB+IAoKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0ocm91bmRlZC9zZXR0aW5nLmpzKQohW+OBi+OBueODu+OChuOBi10ocm91bmRlZC9zdGFnZS5qcykKCi0gLSAtCgojIyDlv5znlKjkvosKCgoK","options":{"isTrashed":false},"credits":[]},{"name":"rounded/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7op5LkuLggMjwvdGl0bGU+CgkJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJzdHlsZS5jc3MiIC8+CgkJPHNjcmlwdCBzcmM9InJvdW5kZWQvbWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCTwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"rounded/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCQoJLy8g44GZ44G544Gm44Gu6KeS44GM5Li444GE44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDIwMCwgMjAwLCAxMDAsIDEwMCwgewoJCWNoYW1mZXI6IHsKCQkJcmFkaXVzOiAyMCwKCQl9LAoJCQoJfSksCgoJLy8g5omH5Z6L44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDMwMCwgMjAwLCAxMDAsIDEwMCwgewoJCWNoYW1mZXI6IHsKCQkJcmFkaXVzOiBbOTAsIDAsIDAsIDBdLAoJCX0sCgkJCgl9KSwKCgkvLyDkuLjjgYTmiYflnovjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAyMDAsIDIwMCwgMjAwLCB7CgkJY2hhbWZlcjogewoJCQlyYWRpdXM6IFsxNTAsIDIwLCA0MCwgMjBdLAoJCX0sCgkJCgl9KSwKCgkvLyDjg6njgrDjg5Pjg7zjg5zjg7zjg6vnirbjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoMjAwLCAyMDAsIDIwMCwgMjAwLCB7CgkJY2hhbWZlcjogewoJCQlyYWRpdXM6IFsxNTAsIDIwLCAxNTAsIDIwXSwKCQl9LAoJCQoJfSksCgoJLy8g44Gq44Gg44KJ44GL44Gq5bGx54q244Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDMwMCwgMjAwLCAyMDAsIDUwLCB7CgkJY2hhbWZlcjogewoJCQlyYWRpdXM6IFsyNSwgMjUsIDAsIDBdLAoJCX0sCgkJCgl9KSwKCgkvLyDlhavop5LlvaLjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5wb2x5Z29uKDIwMCwgMTAwLCA4LCA4MCwgewoJCWNoYW1mZXI6IHsKCQkJcmFkaXVzOiAzMCwKCQl9LAoJCQoJfSksCgoJLy8g5LqU6KeS5b2i44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucG9seWdvbigzMDAsIDEwMCwgNSwgODAsIHsKCQljaGFtZmVyOiB7CgkJCXJhZGl1czogWzEwLCA0MCwgMjAsIDQwLCAxMF0sCgkJfSwKCQkKCX0pLAoKCS8vIOS4ieinkuW9ouOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnBvbHlnb24oNDAwLCAyMDAsIDMsIDUwLCB7CgkJY2hhbWZlcjogewoJCQlyYWRpdXM6IFsyMCwgMCwgMjBdLAoJCX0sCgkJCgl9KSwKCQpdKTsKCgppbXBvcnQgJy4vc3RhZ2UnOwo=","options":{"isTrashed":false},"credits":[]},{"name":"rounded/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QXhlcyA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdyb3VuZGVkL1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"rounded/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g44GL44G544Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCA2MDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDgwMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSkKXSk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"sensors/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgrvjg7PjgrXjg7wKCuOBl+OCh+OBhueqgeOBl+OBpuOCguWLleOBi+OBquOBhOOBkeOBqeOAgSAgCuOBl+OCh+OBhueqgeOBl+OBn+OBi+OBqeOBhuOBi+OBr+WIhuOBi+OCi+OCquODluOCuOOCp+OCr+ODiOOCkuS9nOOCi+OBk+OBqOOCguOBp+OBjeOCi+OCiCAgCu+8iOW5vemciuOBv+OBn+OBhOOBoOOBre+8iQoK44Gd44GG44GE44GG44Kq44OW44K444Kn44Kv44OI44Gu44GT44Go44KS44CB44GT44GT44Gn44Gv44K744Oz44K144O844Go5ZG844G244KICgoKIyMgIVvmlLnpgKDjgZnjgotdKHNlbnNvcnMvbWFpbi5qcykKCgojIyDjg5Hjg6njg6Hjg7zjgr8K44OR44Op44Oh44O844K/IHwg5oSP5ZGzIHwg5Y2Y5L2NIHwg5pyA5bCPIHwg5pyA5aSnIAotLS0gfCAtLS0gfCAtLS0gfCAtLS0gfCAtLS0KaXNTZW5zb3IgfCDjgrvjg7PjgrXjg7zjgYvjganjgYbjgYsgfCDjg5Xjg6njgrAgfCBmYWxzZSB8IHRydWUgCmlzU3RhdGljIHwg6Z2Z5q2i44GX44Gm44GE44KL44GL44Gp44GG44GLIHwg44OV44Op44KwIHwgZmFsc2UgfCB0cnVlIApyZW5kZXIgfCB8IHwgfApzdHJva2VTdHlsZSB8IOe3muOBruiJsiB8IOiJsiB8ICoiIzAwMDAwMCIqICjpu5IpIHwgKiIjRkZGRkZGIiogKOeZvSkKZmlsbFN0eWxlIHwg5aGX44KK44Gk44G244GX44Gu6ImyIHwg6ImyIHwgKiIjMDAwMDAwIiogKOm7kikgfCAqIiNGRkZGRkYiKiAo55m9KQpsaW5lV2lkdGggfCDnt5rjga7lpKrjgZUgfCBweCB8IDAgfCBJbmZpbml0eQoKClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoK","options":{"isTrashed":false},"credits":[]},{"name":"sensors/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgrvjg7PjgrXjg7w8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJzZW5zb3JzL21haW4uanMiPjwvc2NyaXB0PgoJPC9oZWFkPgoJPGJvZHk+Cgk8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"sensors/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUV2ZW50cywKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCglCb2RpZXMsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy53aXJlZnJhbWVzID0gZmFsc2U7CnJlbmRlci5vcHRpb25zLmJhY2tncm91bmQgPSAnIzExMSc7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g6ImyCmNvbnN0IHJlZENvbG9yID0gJyNDNDRENTgnOwpjb25zdCBncmVlbkNvbG9yID0gJyNDN0Y0NjQnOwoKLy8g44K744Oz44K144O844Gu44Kq44OW44K444Kn44Kv44OICmNvbnN0IGNvbGxpZGVyID0gQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDMwMCwgNTAwLCA1MCwgewoJaXNTZW5zb3I6IHRydWUsCglpc1N0YXRpYzogdHJ1ZSwKCXJlbmRlcjogewoJCXN0cm9rZVN0eWxlOiByZWRDb2xvciwKCQlmaWxsU3R5bGU6ICd0cmFuc3BhcmVudCcsCgkJbGluZVdpZHRoOiAxCgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBbCgljb2xsaWRlciwKCS8vIOW6iuOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYyMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJCXJlbmRlcjogewoJCQlmaWxsU3R5bGU6ICd0cmFuc3BhcmVudCcsCgkJCWxpbmVXaWR0aDogMQoJCX0KCX0pCl0pOwoKCldvcmxkLmFkZCh3b3JsZCwKCS8vIOWGhuOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLmNpcmNsZSg0MDAsIDQwLCAzMCwgewoJCXJlbmRlcjogewoJCQlzdHJva2VTdHlsZTogZ3JlZW5Db2xvciwKCQkJZmlsbFN0eWxlOiAndHJhbnNwYXJlbnQnLAoJCQlsaW5lV2lkdGg6IDEKCQl9Cgl9KQopOwoKRXZlbnRzLm9uKGVuZ2luZSwgJ2NvbGxpc2lvblN0YXJ0JywgZnVuY3Rpb24oZXZlbnQpIHsKCS8vIOOBl+OCh+OBhueqgeOBjOWni+OBvuOBo+OBn+OCieOAgeOBk+OBk+OBq+WFpeOCiwoJCglmb3IgKGNvbnN0IHBhaXIgb2YgZXZlbnQucGFpcnMpIHsKCQlpZiAocGFpci5ib2R5QSA9PT0gY29sbGlkZXIpIHsKCQkJcGFpci5ib2R5Qi5yZW5kZXIuc3Ryb2tlU3R5bGUgPSByZWRDb2xvcjsKCQl9IGVsc2UgaWYgKHBhaXIuYm9keUIgPT09IGNvbGxpZGVyKSB7CgkJCXBhaXIuYm9keUEucmVuZGVyLnN0cm9rZVN0eWxlID0gcmVkQ29sb3I7CgkJfQoJfQoJCn0pOwoKRXZlbnRzLm9uKGVuZ2luZSwgJ2NvbGxpc2lvbkVuZCcsIGZ1bmN0aW9uKGV2ZW50KSB7CgkvLyDjgZfjgofjgYbnqoHjgYzlp4vjgb7jgaPjgZ/jgonjgIHjgZPjgZPjgavlhaXjgosKCQoJZm9yIChjb25zdCBwYWlyIG9mIGV2ZW50LnBhaXJzKSB7CgkJaWYgKHBhaXIuYm9keUEgPT09IGNvbGxpZGVyKSB7CgkJCXBhaXIuYm9keUIucmVuZGVyLnN0cm9rZVN0eWxlID0gZ3JlZW5Db2xvcjsKCQl9IGVsc2UgaWYgKHBhaXIuYm9keUIgPT09IGNvbGxpZGVyKSB7CgkJCXBhaXIuYm9keUEucmVuZGVyLnN0cm9rZVN0eWxlID0gZ3JlZW5Db2xvcjsKCQl9Cgl9CgkKfSk7CgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgoKZmVlbGVzLm9wZW5SZWFkbWUoJ3NlbnNvcnMvUkVBRE1FLm1kJyk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"sleeping/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgrnjg6rjg7zjg5fjg6Ljg7zjg4kKCgpNYXR0ZXIuanMg44Gn44Gv44CB5L2Z6KiI44Gq6KiI566X5Yem55CG44KS5bCR44Gq44GP44GZ44KL44Gf44KB44Gr44CBICAK44K544Oq44O844OX44Oi44O844OJ44Gu5qmf6IO944GM44GC44KL44KT44GgCgrjgqrjg5bjgrjjgqfjgq/jg4jjga/jgIHjgYLjgovkuIDlrprjga7pgJ/luqbjgojjgorjgoLli5XjgY3jgYzpgYXjgY/jgarjgaPjgZ/jgajjgY3jgIEgIArjgrnjg6rjg7zjg5fjg6Ljg7zjg4njgavjgarjgorjgIHli5XjgYvjgarjgY/jgarjgovjgojjgIIgIArku5bjga7jgqrjg5bjgrjjgqfjgq/jg4jjgajjgZfjgofjgYbnqoHjgZfjgZ/jgorjgZfjgabjgIHjgb7jgZ/li5XjgY3jgYzml6njgY/jgarjgaPjgZ/jgajjgY3jgIEgIArjgrnjg6rjg7zjg5fjg6Ljg7zjg4njga/op6PpmaTjgZXjgozjgovjgpPjgaAKCgojIyAhW+aUuemAoOOBmeOCi10oc2xlZXBpbmcvbWFpbi5qcykKCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoKCg==","options":{"isTrashed":false},"credits":[]},{"name":"sleeping/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgrnjg6rjg7zjg5fjg6Ljg7zjg4k8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJzbGVlcGluZy9tYWluLmpzIj48L3NjcmlwdD4KCTwvaGVhZD4KCTxib2R5PgoJPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"sleeping/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglFdmVudHMsCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKcmVuZGVyLm9wdGlvbnMuc2hvd0FuZ2xlSW5kaWNhdG9yID0gdHJ1ZTsKcmVuZGVyLm9wdGlvbnMuc2hvd1NsZWVwaW5nID0gdHJ1ZTsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIOWjgQoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pCl0pOwoKLy8g44Kq44OW44K444Kn44Kv44OI44Gu44K544K/44OD44KvCmNvbnN0IHN0YWNrID0gQ29tcG9zaXRlcy5zdGFjayg1MCwgNTAsIDEyLCAzLCAwLCAwLCAoeCwgeSkgPT4gewoJLy8g44Op44Oz44OA44Og44Gu56K6546HCgljb25zdCByYXRlID0gQ29tbW9uLnJhbmRvbSgwLCAxKTsKCWlmIChyYXRlIDwgMC4xKSB7CgkJLy8gMTAlIOOBrueiuueOh+OBp+OAgeOBk+OBk+OBq+WFpeOCiwoJCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIENvbW1vbi5yYW5kb20oODAsIDEyMCksIENvbW1vbi5yYW5kb20oMjAsIDMwKSk7Cgl9IGVsc2UgaWYgKHJhdGUgPCAwLjUpIHsKCQkvLyDjga7jgZPjgoogNDAlIOOBrueiuueOh+OBp+OAgeOBk+OBk+OBq+WFpeOCiwoJCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIENvbW1vbi5yYW5kb20oMjAsIDUwKSwgQ29tbW9uLnJhbmRvbSgyMCwgNTApKTsKCX0gZWxzZSB7CgkJLy8g44Gu44GT44KK44Gu56K6546H44Gn44CB44GT44GT44Gr5YWl44KLCgkJcmV0dXJuIEJvZGllcy5wb2x5Z29uKHgsIHksIE1hdGgucm91bmQoQ29tbW9uLnJhbmRvbSgxLCA4KSksIENvbW1vbi5yYW5kb20oMjAsIDUwKSk7Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBzdGFjayk7Cgpmb3IgKGNvbnN0IGJvZHkgb2Ygc3RhY2suYm9kaWVzKSB7CglFdmVudHMub24oYm9keSwgJ3NsZWVwU3RhcnQgc2xlZXBFbmQnLCAoZXZlbnQpID0+IHsKCS8vIOOCquODluOCuOOCp+OCr+ODiOOBjOOCueODquODvOODl+ODouODvOODieOBq+OBquOBo+OBn+OBqOOBjSDjgb7jgZ/jga8g44Gd44GG44Gn44Gq44GP44Gq44Gj44Gf44Go44GN44CB44GT44GT44Gr5YWl44KLCgkJCgkJY29uc29sZS5sb2coJ2JvZHkgaWQnLCBib2R5LmlkLCAnc2xlZXBpbmc6JywgYm9keS5pc1NsZWVwaW5nKTsKCQoJfSk7Cn0KCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnc2xlZXBpbmcvUkVBRE1FLm1kJyk7Cgo=","options":{"isTrashed":false},"credits":[]},{"name":"slingshot/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgrnjg6rjg7PjgrDjgrfjg6fjg4Pjg4gKCuOCsuODvOODoOOBruaZgumWk+OBoO+8gSAgCuW3puOBruOCquODluOCuOOCp+OCr+ODiO+8iOWyqe+8ieOCkuW8leOBo+W8teOBo+OBpumbouOBl+OBpuOAgeWxseOCkuOBj+OBmuOBneOBhgoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDjganjgYbjgoTjgaPjgabkvZzjgaPjgabjgovjga7vvJ8KCuOBk+OCjOOCieOCkue1hOOBv+WQiOOCj+OBm+OBpuOCsuODvOODoOOBq+OBl+OBpuOBhOOCi+OCiCAgCj4g44Kv44Oq44OD44Kv44GZ44KL44Go44K144Oz44OX44Or44Gr56e75YuV44GX44G+44GZCgrph43jgZXjgpLlpInjgYjjgovjgavjga/igKZb44GK44KC44GVXShkZW5zaXR5L2luZGV4Lmh0bWwpICAK5bGx44KS5L2c44KL44Gr44Gv4oCmW+ODlOODqeODn+ODg+ODiV0ocHlyYW1pZC9pbmRleC5odG1sKSAgCuWyqeOCkuaUvuOBpOOBq+OBr+KAplvjg5Djg41dKGNvbnN0cmFpbnQvaW5kZXguaHRtbCnjgagKW+OCpOODmeODs+ODiF0oZXZlbnRzL2luZGV4Lmh0bWwpICAKCiMjIOaUuemAoOOBq+aMkeaIpuOBl+OBpuOBv+OCiwoKIVvlvJXjgaPlvLXjgovjg7vmlL7jgaRdKHNsaW5nc2hvdC9tYWluLmpzKSAgCiFb44K544OG44O844K4XShzbGluZ3Nob3Qvc3RhZ2UuanMpICAKIVvoqK3lrppdKHNsaW5nc2hvdC9zZXR0aW5nLmpzKQo=","options":{"isTrashed":false},"credits":[]},{"name":"slingshot/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgrnjg6rjg7PjgrDjgrfjg6fjg4Pjg4g8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJzbGluZ3Nob3QvbWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCTwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"slingshot/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglFdmVudHMsCglDb25zdHJhaW50LAoJV29ybGQsCglCb2RpZXMsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCW1vdXNlQ29uc3RyYWludCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOWyqeOBruOCquODluOCuOOCp+OCr+ODiOOCkuOBpOOBj+OCiwpjb25zdCByb2NrID0gQm9kaWVzLnBvbHlnb24oMTcwLCA0NTAsIDgsIDIwLCB7CgkvLyDjgYrjgoLjgZUKCWRlbnNpdHk6IDAuMDEsCgkKfSk7CgovLyDlsqnjgajjgqLjg7Pjgqvjg7zlnLDngrnjgpLjg5Djg43jgafjgaTjgarjgZAKY29uc3QgZWxhc3RpYyA9IENvbnN0cmFpbnQuY3JlYXRlKHsKCXBvaW50QTogewoJCXg6IDE3MCwKCQl5OiA0NTAKCX0sCglib2R5Qjogcm9jaywKCXN0aWZmbmVzczogMC4wOCwKCQp9KTsKCgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIOWyqeOBruOCquODluOCuOOCp+OCr+ODiAoJcm9jaywKCS8vIOODkOODjQoJZWxhc3RpYywKCQpdKTsKCgpFdmVudHMub24oZW5naW5lLCAnYWZ0ZXJVcGRhdGUnLCAoKSA9PiB7CgkvLyDmr47jg5Xjg6zjg7zjg6DjgZPjgZPjgavlhaXjgosKCQoJLy8g54++5Zyo44Gu5bKp44Gu44Kq44OW44K444Kn44Kv44OICgljb25zdCBjdXJyZW50ID0gZWxhc3RpYy5ib2R5QjsKCQoJaWYgKG1vdXNlQ29uc3RyYWludC5tb3VzZS5idXR0b24gPT09IC0xICYmIChjdXJyZW50LnBvc2l0aW9uLnggPiAxOTAgfHwgY3VycmVudC5wb3NpdGlvbi55IDwgNDMwKSkgewoJCS8vIOeUu+mdouOBruS4reOBp+ODnuOCpuOCueOBjOmbouOBleOCjOOBn+OBqOOBjeOAgeOBk+OBk+OBq+WFpeOCiwoJCQoJCS8vIOasoeOBruWyqeOBruOCquODluOCuOOCp+OCr+ODiOOCkuS9nOOCiwoJCWNvbnN0IG5leHRSb2NrID0gQm9kaWVzLnBvbHlnb24oMTcwLCA0NTAsIDcsIDIwLCB7CgkJCS8vIOOBiuOCguOBlQoJCQlkZW5zaXR5OiAwLjAxLAoJCQkKCQl9KTsKCQlXb3JsZC5hZGQod29ybGQsIG5leHRSb2NrKTsKCQkKCQkvLyDlsqnjga7jgqrjg5bjgrjjgqfjgq/jg4jjgpLjg5Djg43jgavjgaTjgZHjgosKCQllbGFzdGljLmJvZHlCID0gbmV4dFJvY2s7Cgl9CgkKfSk7CgoKaW1wb3J0ICcuL3N0YWdlJzsK","options":{"isTrashed":false},"credits":[]},{"name":"slingshot/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QW5nbGVJbmRpY2F0b3IgPSB0cnVlOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnc2xpbmdzaG90L1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKCW1vdXNlQ29uc3RyYWludCwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"slingshot/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKCmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g5bqK44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDM5NSwgNjAwLCA4MTUsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCgkvLyDkuIrjga7luorjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoNjEwLCAyNTAsIDIwMCwgMjAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCgoJLy8g5LiK44Gu44OU44Op44Of44OD44OJCglDb21wb3NpdGVzLnB5cmFtaWQoNTUwLCAwLCA1LCAxMCwgMCwgMCwgKHgsIHkpID0+IHsKCQlyZXR1cm4gQm9kaWVzLnJlY3RhbmdsZSh4LCB5LCAyNSwgNDApOwoJfSksCgoJLy/jgIDkuIvjga7jg5Tjg6njg5/jg4Pjg4kKCUNvbXBvc2l0ZXMucHlyYW1pZCg1MDAsIDM1MCwgOSwgMTAsIDAsIDAsICh4LCB5KSA9PiB7CgkJcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgMjUsIDQwKTsKCX0pLAoKXSk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"snippets/object.json","type":"application/json","lastModified":1492756455000,"composed":"ewoJIi5zb3VyY2UuanMiOiB7CgkJInJlY3RhbmdsZSI6IHsKCQkJInByZWZpeCI6ICJyZWN0YW5nbGUiLAoJCQkibGVmdExhYmVsIjogIuODrOOCr+OCv+ODs+OCsOODqyIsCgkJCSJkZXNjcmlwdGlvbiI6ICLlm5vop5LlvaLjga7jgqrjg5bjgrjjgqfjgq/jg4jjgILkuK3lv4Pjga7kvY3nva7jgajlpKfjgY3jgZXjgpLmjIflrprjgafjgY3jgosiLAoJCQkiYm9keSI6IGAKQm9kaWVzLnJlY3RhbmdsZSgxNDAsIDAsIDgwLCA4MCksYAkJCQoJCX0sCgkJIndhbGwiOiB7CgkJCSJwcmVmaXgiOiAiZmxvb3IiLAoJCQkibGVmdExhYmVsIjogIuODleODreOCoiIsCgkJCSJkZXNjcmlwdGlvbiI6ICLlm7rlrprjgZXjgozjgZ/lm5vop5LlvaLjga7jgqrjg5bjgrjjgqfjgq/jg4jjgILluorjgoTlo4HjgavjgarjgosiLAoJCQkiYm9keSI6IGAKQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgNDAwLCA0MCwgewoJaXNTdGF0aWM6IHRydWUsCgp9KSxgCgkJfSwKCQkic2xvcGUiOiB7CgkJCSJwcmVmaXgiOiAic2xvcGUiLAoJCQkibGVmdExhYmVsIjogIuOCueODreODvOODlyIsCgkJCSJkZXNjcmlwdGlvbiI6ICLlsJHjgZfjgYvjgZ/jgoDjgYTjgZ/jgqrjg5bjgrjjgqfjgq/jg4jjgILjg5zjg7zjg6vjgarjganjgpLnva7jgY/jgajou6LjgYzjgosiLAoJCQkiYm9keSI6IGAKQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgNDAwLCA0MCwgewoJaXNTdGF0aWM6IHRydWUsCglhbmdsZTogMC4xNSwKCn0pLGAKCQl9LAoJCSJjaXJjbGUiOiB7CgkJCSJwcmVmaXgiOiAiY2lyY2xlIiwKCQkJImxlZnRMYWJlbCI6ICLjgrXjg7zjgq/jg6siLAoJCQkiZGVzY3JpcHRpb24iOiAi5YaG44Gu44Kq44OW44K444Kn44Kv44OI44CC5Lit5b+D44Gu5L2N572u44Go5Y2K5b6E44KS5oyH5a6a44Gn44GN44KLIiwKCQkJImJvZHkiOiBgCkJvZGllcy5jaXJjbGUoMjQwLCAwLCA0MCkpLGAKCQl9LAoJCSJiYWxsIjogewoJCQkicHJlZml4IjogImJhbGwiLAoJCQkibGVmdExhYmVsIjogIuODnOODvOODqyIsCgkJCSJkZXNjcmlwdGlvbiI6ICLot7Pjga3ov5Tjgorkv4LmlbDjgpIgMSDjgavjgZfjgZ/jgIHlhobjga7jgqrjg5bjgrjjgqfjgq/jg4jjgILjgajjgabjgoLot7Pjga3jgosiLAoJCQkiYm9keSI6IGAKQm9kaWVzLmNpcmNsZSgyNDAsIDAsIDQwLCB7CglyZXN0aXR1dGlvbjogMSwKCn0pLGAKCQl9LAoJCSJyZWRiYWxsIjogewoJCQkicHJlZml4IjogImNvbG9yYmFsbCIsCgkJCSJsZWZ0TGFiZWwiOiAi44Kr44Op44O844Oc44O844OrIiwKCQkJImRlc2NyaXB0aW9uIjogIui1pOiJsuOBruODnOODvOODqyIsCgkJCSJib2R5IjogYApCb2RpZXMuY2lyY2xlKDI0MCwgMCwgNDAsIHsKCXJlc3RpdHV0aW9uOiAxLAoJcmVuZGVyOiB7CgkJZmlsbFN0eWxlOiAncmVkJywKCQlsaW5lV2lkdGg6IDEwLAoJCXN0cm9rZVN0eWxlOiAnYmxhY2snLAoJfSwKCn0pLGAKCQl9Cgl9Cn0KCgoKCgoK","options":{"isTrashed":false},"credits":[]},{"name":"softBody/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgr3jg5Xjg4jjg5zjg4fjgqMKCuOCveODleODiOODnOODh+OCo+OCkuS9v+OBo+OBpuOAgeOCtOODoOOBv+OBn+OBhOOBquOCquODluOCuOOCp+OCr+ODiOOBruOBi+OBn+OBvuOCiuOCkuS9nOOBo+OBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXShzb2Z0Qm9keS9tYWluLmpzKQoKKipDb21wb3NpdGVzLnNvZnRCb2R5KGAxYCwgYDJgLCBgM2AsIGA0YCwgYDVgLCBgNmAsIGA3YCwgYDhgLCB7ICAK44CA44CAZnJpY3Rpb246IGA5YCwgIAp9KTsqKgoKfCB8IOaEj+WRsyB8IOOBr+OCk+OBhAotLS0gfCAtLS0gfCAtLS0gCjEgfCDlt6bjgYvjgonjga7jgq3jg6fjg6ogfCAwIH4gODAwCjIgfCDkuIrjgYvjgonjga7jgq3jg6fjg6ogfCAwIH4gNjAwCjMgfCDlj7PjgavjgYTjgY/jgaTlh7rjgZnjgYsgfCAwIH4KNCB8IOS4i+OBq+OBhOOBj+OBpOWHuuOBmeOBiyB8IDAgfgo1IHwg5qiq5pa55ZCR44Gu6ZaT44GL44GPIHwgMCB+IAo2IHwg44K/44OG5pa55ZCR44Gu6ZaT44GL44GPIHwgMCB+IAo3IHwg5YWD44Gu5b2i44Gr5oi744KL44GLIHwgYHRydWVgIOOBquOCieWFg+OBq+aIu+OCjeOBhuOBqOOBmeOCiwo4IHwg5YaG44Gu5Y2K5b6EIHwgMCB+IAo5IHwg44G+44GV44Gk44Gu5aSn44GN44GVIHwgMCB+IDEuMCAKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0oc29mdEJvZHkvc2V0dGluZy5qcykKIVvjgYvjgbnjg7vjgobjgYtdKHNvZnRCb2R5L3N0YWdlLmpzKQoKLSAtIC0KCiMjIOW/nOeUqOS+iwoKW+W4g10oY2xvdGgvaW5kZXguaHRtbCkK","options":{"isTrashed":false},"credits":[]},{"name":"softBody/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgr3jg5Xjg4jjg5zjg4fjgqM8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJzb2Z0Qm9keS9tYWluLmpzIj48L3NjcmlwdD4KCTwvaGVhZD4KCTxib2R5PgoJPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"softBody/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgkKCS8vIOOCveODleODiOODnOODh+OCowoJQ29tcG9zaXRlcy5zb2Z0Qm9keSgyNTAsIDEwMCwgNiwgNSwgMCwgMCwgdHJ1ZSwgMTgsIHsKCQkvLyDjgb7jgZXjgaTjga7lpKfjgY3jgZUKCQlmcmljdGlvbjogMC4xLAoJCQoJfSksCgkKXSk7CgoKaW1wb3J0ICcuL3N0YWdlJzs=","options":{"isTrashed":false},"credits":[]},{"name":"softBody/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QW5nbGVJbmRpY2F0b3IgPSBmYWxzZTsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC45LAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdzb2Z0Qm9keS9SRUFETUUubWQnKTsKCgpleHBvcnQgewoJZW5naW5lLAoJd29ybGQsCglyZW5kZXIsCn07Cg==","options":{"isTrashed":false},"credits":[]},{"name":"softBody/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCQoJLy8g5aOBCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJCl0pOwo=","options":{"isTrashed":false},"credits":[]},{"name":"sprites/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg5Pjg7zjg4Hjg5zjg7zjg6vjgajmnKjjga7nrrEKCgrlpb3jgY3jgarnlLvlg4/jgpLjgqrjg5bjgrjjgqfjgq/jg4jjgavosrzjgorku5jjgZHjgabooajnpLrjgZnjgovjgZPjgajjgYzjgafjgY3jgovjgogKCgojIyAhW+aUuemAoOOBmeOCi10oc3ByaXRlcy9tYWluLmpzKQoKCuODkeODqeODoeODvOOCvyB8IOaEj+WRsyB8IOWNmOS9jSB8IOacgOWwjyB8IOacgOWkpyAKLS0tIHwgLS0tIHwgLS0tIHwgLS0tIHwgLS0tCmRlbnNpdHkgfCDlr4bluqYgfCAqa2cgbV4tMiogfCAwIHwgSW5maW5pdHkKcmVzdGl0dXRpb24gfCDot7Pjga3ov5TjgoogfCDlgI0gfCAwIHwgMQpmcmljdGlvbiB8IOOBvuOBleOBpOS/guaVsCB8IOWAjSB8IDAgfCAxCmZyaWN0aW9uQWlyIHwg56m65rCX5oq15oqXIHwg5YCNIHwgMCB8IDEKcmVuZGVyIHwgfCB8IHwKc3ByaXRlIHwgIHwgfCB8CnRleHR1cmUgfCDjg4bjgq/jgrnjg4Hjg6Pjga7jg5XjgqHjgqTjg6vlkI0gfCDjg5XjgqHjgqTjg6vjga7jg5HjgrkgfCB8IAoKClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoK","options":{"isTrashed":false},"credits":[]},{"name":"sprites/ball.png","type":"image/png","lastModified":1492756455000,"composed":"","options":{"isTrashed":false},"credits":[]},{"name":"sprites/box.png","type":"image/png","lastModified":1492756455000,"composed":"","options":{"isTrashed":false},"credits":[]},{"name":"sprites/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgrnjg5fjg6njgqTjg4g8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJzcHJpdGVzL21haW4uanMiPjwvc2NyaXB0PgoJPC9oZWFkPgoJPGJvZHk+Cgk8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"sprites/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKLy8g44K544OX44Op44Kk44OI44KS6Kqt44G/6L6844KA5rqW5YKZCmltcG9ydCAnbGliL2ludGVycnVwdC5qcyc7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKcmVuZGVyLm9wdGlvbnMuYmFja2dyb3VuZCA9ICcjMGYwZjEzJzsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgpjb25zdCBvZmZzZXQgPSAxMDsKY29uc3Qgb3B0aW9ucyA9IHsKCWlzU3RhdGljOiB0cnVlCn07CgovLyDnlLvpnaLjgojjgorjgoLlpJblgbTjgavjgYLjgovlo4Eo6KaL44GI44Gq44GEKQpXb3JsZC5hZGQod29ybGQsIFsKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAtb2Zmc2V0LCA4MDAuNSArIDIgKiBvZmZzZXQsIDUwLjUsIG9wdGlvbnMpLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCArIG9mZnNldCwgODAwLjUgKyAyICogb2Zmc2V0LCA1MC41LCBvcHRpb25zKSwKCUJvZGllcy5yZWN0YW5nbGUoODAwICsgb2Zmc2V0LCAzMDAsIDUwLjUsIDYwMC41ICsgMiAqIG9mZnNldCwgb3B0aW9ucyksCglCb2RpZXMucmVjdGFuZ2xlKC1vZmZzZXQsIDMwMCwgNTAuNSwgNjAwLjUgKyAyICogb2Zmc2V0LCBvcHRpb25zKQpdKTsKCi8vIOOCueODl+ODqeOCpOODiOOCquODluOCuOOCp+OCr+ODiOOBruOCueOCv+ODg+OCrwpjb25zdCBzdGFjayA9IENvbXBvc2l0ZXMuc3RhY2soMjAsIDIwLCAxMCwgNCwgMCwgMCwgKHgsIHkpID0+IHsKCWlmIChDb21tb24ucmFuZG9tKCkgPiAwLjM1KSB7CgkJLy8gMzUlIOOBrueiuueOh+OBp+ODnOODg+OCr+OCuQoJCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIDY0LCA2NCwgewoJCQlyZW5kZXI6IHsKCQkJCXN0cm9rZVN0eWxlOiAnI2ZmZmZmZicsCgkJCQlzcHJpdGU6IHsKCQkJCQl0ZXh0dXJlOiAnc3ByaXRlcy9ib3gucG5nJwoJCQkJfQoJCQl9CgkJfSk7Cgl9IGVsc2UgewoJCS8vIOOBruOBk+OCiuOBrueiuueOh+OBp+ODnOODvOODqwoJCXJldHVybiBCb2RpZXMuY2lyY2xlKHgsIHksIDQ2LCB7CgkJCWRlbnNpdHk6IDAuMDAwNSwKCQkJZnJpY3Rpb25BaXI6IDAuMDYsCgkJCXJlc3RpdHV0aW9uOiAwLjMsCgkJCWZyaWN0aW9uOiAwLjAxLAoJCQlyZW5kZXI6IHsKCQkJCXNwcml0ZTogewoJCQkJCXRleHR1cmU6ICdzcHJpdGVzL2JhbGwucG5nJwoJCQkJfQoJCQl9CgkJfSk7Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBzdGFjayk7CgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgoKZmVlbGVzLm9wZW5SZWFkbWUoJ3Nwcml0ZXMvUkVBRE1FLm1kJyk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"stack.js","type":"application/javascript","lastModified":1492756455000,"composed":"CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK","options":{"isTrashed":false},"credits":[]},{"name":"stack/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgrnjgr/jg4Pjgq8KCuOCueOCv+ODg+OCr+OCkuS9v+OBo+OBpuOAgeOCquODluOCuOOCp+OCr+ODiOOCkuS4gOawl+OBq+WHuuOBl+OBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXShzdGFjay9tYWluLmpzKQoKKipDb21wb3NpdGVzLnN0YWNrKGAxYCwgYDJgLCBgM2AsIGA0YCwgYDVgLCBgNmAsICh4LCB5KSA9PiB7ICAK44CA44CAcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgYDdgLCBgOGApOyAgCn0pOyoqCgp8fCDmhI/lkbMgfCDjga/jgpPjgYQKLS0tIHwgLS0tIHwgLS0tIAoxIHwg5bem44GL44KJ44Gu44Kt44On44OqIHwgMCB+IDgwMAoyIHwg5LiK44GL44KJ44Gu44Kt44On44OqIHwgMCB+IDYwMAozIHwg5Y+z44Gr44GE44GP44Gk5Ye644GZ44GL77yI5qiq77yJIHwgMCB+IAo0IHwg5LiL44Gr44GE44GP44Gk5Ye644GZ44GL77yI44K/44OG77yJIHwgMCB+IAo1IHwg5YiX44Gu6ZaT44GL44GP77yI5qiq77yJIHwgMCB+IAo2IHwg6KGM44Gu6ZaT44GL44GP77yI44K/44OG77yJIHwgMCB+IAo3IHwg44Kq44OW44K444Kn44Kv44OI44Gu5qiq5bmFIHwgMCB+IAo4IHwg44Kq44OW44K444Kn44Kv44OI44Gu6auY44GVIHwgMCB+IAoKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0oc3RhY2svc2V0dGluZy5qcykKIVvjgYvjgbnjg7vjgobjgYtdKHN0YWNrL3N0YWdlLmpzKQoKLSAtIC0KCiMjIOW/nOeUqOS+iwoKClvjg6Ljg7PjgrHjg7zjg7NdKHdyZWNraW5nQmFsbC9pbmRleC5odG1sKSAgCg==","options":{"isTrashed":false},"credits":[]},{"name":"stack/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgrnjgr/jg4Pjgq88L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJzdGFjay9tYWluLmpzIj48L3NjcmlwdD4KCTwvaGVhZD4KCTxib2R5PgoJPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"stack/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgkKCS8vIOOCquODluOCuOOCp+OCr+ODiOOBruOCueOCv+ODg+OCrwoJQ29tcG9zaXRlcy5zdGFjaygyMDAsIDM4MCwgMTAsIDUsIDAsIDAsICh4LCB5KSA9PiB7CgkJcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgNDAsIDQwKTsKCX0pLAoJCl0pOwoKCgoKCgoKaW1wb3J0ICcuL3N0YWdlJzsKCg==","options":{"isTrashed":false},"credits":[]},{"name":"stack/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgoKZmVlbGVzLm9wZW5SZWFkbWUoJ3N0YWNrL1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"stack/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgppbXBvcnQgewoJd29ybGQsCn0gZnJvbSAnLi9zZXR0aW5nJzsKCgpXb3JsZC5hZGQod29ybGQsIFsKCS8vIOWjgQoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjA2LCA4MDAsIDUwLjUsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pCl0pOwo=","options":{"isTrashed":false},"credits":[]},{"name":"staticFriction/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDpnZnmraLjgb7jgZXjgaTlipsKPiDjgZvjgYTjgZct44G+44GV44GkLeOCiuOCh+OBjyAgCumdmeatouaRqeaTpuWKmwoKCiMjIOOCueOCv+ODg+OCr+OBqOmdmeatouOBvuOBleOBpOWKm+OBruW/nOeUqAoK44Kq44OW44K444Kn44Kv44OI44GuIFvpnZnmraLjgb7jgZXjgaTliptdKGh0dHBzOi8vamEud2lraXBlZGlhLm9yZy93aWtpLyVFNiU5MSVBOSVFNiU5MyVBNiVFNSU4QSU5QikK44KS5aSJ44GI44Gm44G/44GfCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoKCiMjIOaUuemAoOOBl+OBpuOBv+OCiwoKIVvjgZPjgZPjgYvjgonlp4vjgoHjgotdKHN0YXRpY0ZyaWN0aW9uL21haW4uanMpCgp8fCDmhI/lkbMgfCDjga/jgpPjgYQKLS0tIHwgLS0tIHwgLS0tCnN0YXRpY0ZyaWN0aW9uIHwg6Z2Z5q2i44G+44GV44Gk44Gu5aSn44GN44GVIHwgMCB+IDEuMAoK44KC44Gj44Go5pS56YCgCiFb6Kit5a6aXShzdGF0aWNGcmljdGlvbi9zZXR0aW5nLmpzKQohW+OBi+OBueODu+OChuOBi10oc3RhdGljRnJpY3Rpb24vc3RhZ2UuanMpCgotIC0gLQoKIyMg5b+c55So5L6LCg==","options":{"isTrashed":false},"credits":[]},{"name":"staticFriction/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7pnZnmraLmkanmk6blips8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJzdGF0aWNGcmljdGlvbi9tYWluLmpzIj48L3NjcmlwdD4KCTwvaGVhZD4KCTxib2R5PgoJPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"staticFriction/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgoJLy8g5LiK44Gr5LmX44Gj44Gm44GE44KL44Kq44OW44K444Kn44Kv44OI44Gu44K544K/44OD44KvCglDb21wb3NpdGVzLnN0YWNrKDM1MCwgMTcwLCAxLCA2LCAwLCAwLCAoeCwgeSkgPT4gewoJCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIDEwMCwgNTAsIHsKCQkJc2xvcDogMC41LAoJCQlmcmljdGlvbjogMSwKCQkJZnJpY3Rpb25TdGF0aWM6IEluZmluaXR5CgkJfSk7Cgl9KSwKCl0pOwoKCmltcG9ydCAnLi9zdGFnZSc7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"staticFriction/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93VmVsb2NpdHkgPSB0cnVlOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnc3RhdGljRnJpY3Rpb24vUkVBRE1FLm1kJyk7CgoKZXhwb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAoJcmVuZGVyLAp9Owo=","options":{"isTrashed":false},"credits":[]},{"name":"staticFriction/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUJvZHksCglFdmVudHMsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKLy8g5Zyf5Y+w44Gu44Kq44OW44K444Kn44Kv44OICmNvbnN0IGJvZHkgPSBCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNTAwLCAyMDAsIDYwLCB7Cglpc1N0YXRpYzogdHJ1ZSwKCWNoYW1mZXI6IDEwCn0pOwoKCldvcmxkLmFkZCh3b3JsZCwgWwoJYm9keSwKCS8vIOWjgeOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pCl0pOwoKRXZlbnRzLm9uKGVuZ2luZSwgJ2JlZm9yZVVwZGF0ZScsIChldmVudCkgPT4gewoJCgkvLyDlp4vjgb7jgaPjgabjgYvjgonjga7ntYzpgY7mmYLplpMo56eSKQoJY29uc3QgdGltZSA9IGV2ZW50LnRpbWVzdGFtcCAvIDEwMDA7CgkKCWlmICh0aW1lIDwgMSkgewoJCXJldHVybjsKCX0KCgkvLyDlnJ/lj7DjgpLlt6blj7Pjgavli5XjgYvjgZkKCWNvbnN0IHB4ID0gNDAwICsgMTAwICogTWF0aC5zaW4odGltZSAtIDEpOwoJQm9keS5zZXRWZWxvY2l0eShib2R5LCB7CgkJeDogcHggLSBib2R5LnBvc2l0aW9uLngsCgkJeTogMAoJfSk7CglCb2R5LnNldFBvc2l0aW9uKGJvZHksIHsKCQl4OiBweCwKCQl5OiBib2R5LnBvc2l0aW9uLnkKCX0pOwoJCn0pOwo=","options":{"isTrashed":false},"credits":[]},{"name":"stress/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDlnKflipsgMQoKCuW8t+OBhOWKm+OCkuWPl+OBkeOBn+OBqOOBjeOAgeOCquODluOCuOOCp+OCr+ODiOOBr+WwkeOBl+OBoOOBkeayiOOBv+i+vOOCgOOCk+OBoAoKCiMjICFb5pS56YCg44GZ44KLXShzdHJlc3MvbWFpbi5qcykKCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoKCg==","options":{"isTrashed":false},"credits":[]},{"name":"stress/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7lnKflipsgMTwvdGl0bGU+CgkJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJzdHlsZS5jc3MiIC8+CgkJPHNjcmlwdCBzcmM9InN0cmVzcy9tYWluLmpzIj48L3NjcmlwdD4KCTwvaGVhZD4KCTxib2R5PgoJPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"stress/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZXMsCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgovLyDjgqrjg5bjgrjjgqfjgq/jg4jjga7jgrnjgr/jg4Pjgq8KY29uc3Qgc3RhY2sgPSBDb21wb3NpdGVzLnN0YWNrKDkwLCA1MCwgMTgsIDE1LCAwLCAwLCAoeCwgeSkgPT4gewoJcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgMzUsIDM1KTsKfSk7CgpXb3JsZC5hZGQod29ybGQsIFsKCXN0YWNrLAoJLy8g5aOB44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCA2MDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDgwMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSkKXSk7CgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgoKZmVlbGVzLm9wZW5SZWFkbWUoJ3N0cmVzcy9SRUFETUUubWQnKTsK","options":{"isTrashed":false},"credits":[]},{"name":"stress2/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDlnKflipsgMgoKCuW8t+OBhOWKm+OCkuWPl+OBkeOBn+OBqOOBjeOAgeOCquODluOCuOOCp+OCr+ODiOOBr+WwkeOBl+OBoOOBkeayiOOBv+i+vOOCgOOCk+OBoAoKCiMjICFb5pS56YCg44GZ44KLXShzdHJlc3MyL21haW4uanMpCgoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCg==","options":{"isTrashed":false},"credits":[]},{"name":"stress2/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7lnKflipsgMjwvdGl0bGU+CgkJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJzdHlsZS5jc3MiIC8+CgkJPHNjcmlwdCBzcmM9InN0cmVzczIvbWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCTwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"stress2/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZXMsCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgovLyDjgqrjg5bjgrjjgqfjgq/jg4jjga7jgrnjgr/jg4Pjgq8KY29uc3Qgc3RhY2sgPSBDb21wb3NpdGVzLnN0YWNrKDEwMCwgMTIwLCAyNSwgMTgsIDAsIDAsIGZ1bmN0aW9uKHgsIHkpIHsKCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIDI1LCAyNSk7Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBbCglzdGFjaywKCS8vIOWjgeOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pCl0pOwoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCdzdHJlc3MyL1JFQURNRS5tZCcpOwo=","options":{"isTrashed":false},"credits":[]},{"name":"style.css","type":"text/css","lastModified":1492756455000,"composed":"aHRtbCwKYm9keSB7CgkvKiDjg6Hjg4vjg6Xjg7znlLvpnaLjga7og4zmma/oibIgKi8KCWJhY2tncm91bmQtY29sb3I6IHdoaXRlOwoJbWFyZ2luOiAwcHg7CglwYWRkaW5nOiAwcHg7Cn0=","options":{"isTrashed":false},"credits":[]},{"name":"svg/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg5njgq/jgr/nlLvlg48KClNWRyDjga/jgIHjgqTjg7Pjgr/jg7zjg43jg4Pjg4jkuIrjgafjgojjgY/kvb/jgo/jgozjgovnlLvlg4/jga7lvaLlvI/jgaDjgoggIArjgrnjgrHjg7zjg6njg5bjg6vjg7vjg5njgq/jgr/jg7vjgrDjg6njg5XjgqPjg4Pjgq/jgrnjga7nlaXjgarjgpPjgaAKCgojIyAhW+aUuemAoOOBmeOCi10oc3ZnL21haW4uanMpCgojIyDjg5njgq/jgr/nlLvlg48KCuOCs+ODs+ODlOODpeODvOOCv+ODvOOBjOaJseOBhueUu+WDj+OBr+OAgeWkp+OBjeOBj+WIhuOBkeOBpuOBteOBn+OBpOOBguOCi+OCk+OBoCAgCmBKUEdgIOOBquOBqeOBriAqKuODqeOCueOCv+eUu+WDjyoqIOOBqOOAgSAgCmBTVkdgIOOBquOBqeOBriAqKuODmeOCr+OCv+eUu+WDjyoqIOOBoOOCiAoK44Op44K544K/55S75YOP44Gv44CB6Imy44Gu44Gk44GE44Gf54K544KS44Gf44GP44GV44KT5Lim44G544KL44KI44GG44Gr44GX44Gm57W144KS6KGo54++44GZ44KL44GR44Gp44CBICAK44OZ44Kv44K/55S75YOP44Gn44Gv44CB57W144KS44CM5Zuz5b2i44KS44Gf44GP44GV44KT6YeN44Gt44Gf44KC44Gu44CN44Go44Go44KJ44GI44Gm44CBICAK44Gf44GP44GV44KT44Gu57ea44KS44Gk44Gq44GS44Gm5Zuz5b2i44KS44Gk44GP44KL44GT44Go44Gn44CB57W144KS6KGo54++44GZ44KL44KT44GgCgrjg6njgrnjgr/nlLvlg4/jgafjga/mma7pgJrjgIHjgIzlm5vop5LjgYTngrnjgI3jgpLmoLzlrZAo44GT44GG44GXKeeKtuOBq+S4puOBueOBpuOBhOOBj+OBi+OCieOAgSAgCuWGhuOBrue1teOCkuihqOePvuOBmeOCi+OBqOOAgeOBqeOBhuOBl+OBpuOCguWRqOOCiuOBjOOCruOCtuOCruOCtuOBq+OBquOBo+OBpuOBl+OBvuOBhuOCk+OBoCAgCgrjgaDjgZHjganjg5njgq/jgr/nlLvlg4/jga7loLTlkIjjgIHjgb7jgZrlhobjga7ntbXjgpLjgIzlhobjga7lm7PlvaLjgI3jgajjgajjgonjgYjjgovjgIIgIArjgZ3jga7lhobjgpLjgaTjgY/jgovovKrjgaPjgYvjga7nt5rjga7kvY3nva7jgoTlvaLjgpLjgZ3jga7jgb7jgb7mrovjgZnjgYvjgonjgIEgIArjganjgozjgaDjgZHlpKfjgY3jgY/jgZfjgabjgoLjgq7jgrbjgq7jgrbjgavjgarjgonjgarjgYTntbXjgpLooajnj77jgafjgY3jgovjgpPjgaAgIArjgaDjgYvjgonjgIHjgrnjgrHjg7zjg6njg5bjg6vvvIjlpKfjgY3jgZXjgpLlpInjgYjjgonjgozjgovvvInjgajlkbzjgbDjgozjgabjgYTjgovjgpPjgaDjgogKCuacrOW9k+OBq+OCueOCseODvOODqeODluODq+OBquOBruOBi+OAgeWkp+OBjeOBleOCkuWkieOBiOOBpuippuOBl+OBpuOBv+OCiOOBhu+8gQoKCuODkeODqeODoeODvOOCvyB8IOaEj+WRsyB8IOacgOWwjyB8IOacgOWkpyAKLS0tIHwgLS0tIHwgLS0tIHwgLS0tCnNjYWxlIHwg5aSn44GN44GV44Gu5YCN546HIHwgMCB8IEluZmluaXR5CnNhbXBsaW5nIHwg6Kqt44G/6L6844G/44Gu44GK44GK44GW44Gj44Gx44GVIHwgMCDku6XkuIogfCDjgarjgZcKCmBzYW1wbGluZ2Ag44Gv44CB5bCP44GV44GP44GZ44KL44G744Gp44CB5Zuz5b2i44GM57Sw44GL44GP6Kqt44G/6L6844G+44KM44KL44KIICAK44Gf44Gg44GX44Kz44Oz44OU44Ol44O844K/44O844Gu6KiI566X6YeP44KC5aKX44GI44Gm44GX44G+44GG44GL44KJ44CB5rOo5oSP44GX44Gm44GtCgoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCg==","options":{"isTrashed":false},"credits":[]},{"name":"svg/iconmonstr-check-mark-8-icon.svg","type":"image/svg+xml","lastModified":1492756455000,"composed":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KCgo8IS0tIFRoZSBpY29uIGNhbiBiZSB1c2VkIGZyZWVseSBpbiBib3RoIHBlcnNvbmFsIGFuZCBjb21tZXJjaWFsIHByb2plY3RzIHdpdGggbm8gYXR0cmlidXRpb24gcmVxdWlyZWQsIGJ1dCBhbHdheXMgYXBwcmVjaWF0ZWQuIApZb3UgbWF5IE5PVCBzdWItbGljZW5zZSwgcmVzZWxsLCByZW50LCByZWRpc3RyaWJ1dGUgb3Igb3RoZXJ3aXNlIHRyYW5zZmVyIHRoZSBpY29uIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBpY29ubW9uc3RyLmNvbSAtLT4KCgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgoKPHN2ZyB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoKCSB3aWR0aD0iNTEycHgiIGhlaWdodD0iNTEycHgiIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCA1MTIgNTEyIiB4bWw6c3BhY2U9InByZXNlcnZlIj4KCjxwYXRoIGlkPSJjaGVjay1tYXJrLTgtaWNvbiIgZD0iTTUwLDI0NS40MWwyMC4wODMtMjAuNzg3YzMzLjUsOSw5MS4yMjMsMjkuODMzLDE0Myw2MmM1NC40OTktNzIsMTY0LjQ5OS0xNjIsMjMxLTIwM2wxNy45MTcsMTguNQoKCUwyMTkuODY0LDQyOC4zNzdMNTAsMjQ1LjQxeiIvPgoKPC9zdmc+Cgo=","options":{"isTrashed":false},"credits":[]},{"name":"svg/iconmonstr-direction-4-icon.svg","type":"image/svg+xml","lastModified":1492756455000,"composed":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KCjwhLS0gTGljZW5zZSBBZ3JlZW1lbnQgYXQgaHR0cDovL2ljb25tb25zdHIuY29tL2xpY2Vuc2UvIC0tPgoKPCFET0NUWVBFIHN2ZyBQVUJMSUMgIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkIj4KPHN2ZyB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI1MTJweCIgaGVpZ2h0PSI1MTJweCIgdmlld0JveD0iMCAwIDUxMiA1MTIiIGVuYWJsZS1iYWNrZ3JvdW5kPSJuZXcgMCAwIDUxMiA1MTIiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8cGF0aCBpZD0iZGlyZWN0aW9uLTQtaWNvbiIgZD0iTTI1Mi4yMTYsMTAyLjY0M2MzMC4yOTYsMC4wMDQsOS42ODQsODUuNzA5LTEuNjQ3LDExMi42MjNoMTU5LjM1OGMyOS41NTMsMCwyOS4yNjgsMzkuNzM1LDAsMzkuNzM1CgloLTc2LjkzOWMtNDYuNzA1LDAtMzkuMDc4LDI3LjMyMi0yNS4xMjcsMjMuNzUzYzUuMTQ0LTEuMzE2LDE0LjI3My0zLjI4LDE0LjI3My0zLjI4Yy0yLjkxMiwxOS4xMjktNC40MDksMjkuNTc1LTE3LjM0NSwzMy40OTUKCWwtMTAuMjc5LDMuMjY4Yy00LjgxNCwxLjQ1NS03LjUzMyw2LjU0Mi02LjA4MSwxMS4zNTFjMS40NTYsNC44LDYuNTI1LDcuNTUsMTEuMzYxLDYuMDgybDEzLjI4Ni00LjUxNQoJYy0yLjI5OCwxNy4yNjctMy45ODYsMjkuNDk0LTE2LjUwNiwzMy4yODRsLTEwLjAxLDMuNjE4Yy00LjgxNywxLjQ1NC03LjUzNSw2LjU0LTYuMDc3LDExLjM1N2MxLjQ2MSw0LjgyLDYuNTUzLDcuNTMzLDExLjM1NCw2LjA3MwoJbDEwLjc0Ny0zLjc5N2MtMy4zNTQsMjMuNTgtMjMuMzUyLDMzLjY2Ny01MC4zOTcsMzMuNjY3Yy01OC4wNTMsMC03Ny40MDUtNDIuODk2LTE3Mi4xNzEtNDIuODk2YzAtMzUuMDI5LDAtMTI1Ljk5MywwLTEyNS45OTMKCWM0Ny42LDAsODIuMjU5LTE5LjE0NSwxMDYuOTMtNDMuODE0QzIzNC4wMTMsMTQ5LjU4NCwyMzAuNDM1LDEwMi42NCwyNTIuMjE2LDEwMi42NDN6IE0yNTIuMjE4LDcyLjYyNwoJYy00NS40NCwwLTQzLjk4NSw2MC41NzgtODYuMTM2LDEwMi43MjljLTE5Ljc3NywxOS43NzctNDcuNTM0LDM1LjA5Ny04Ni4wNjYsMzUuMDk3SDUwdjE4Ni4wMjRoMzAuMDE2CgljODguNDY1LDAsMTAzLjUzLDQyLjg5NiwxNzIuMTcxLDQyLjg5NmM0MS45OTgsMCw3MS4zMzUtMTguMTk2LDgwLjExNC01OS40NTZjNC4zNDEtMjAuNCwxNS41MTQtNzguOTMsMTguNjg5LTk0LjloNTguOTM3CgljMzAuNDgsMCw1Mi4wNzMtMjIuNjU4LDUyLjA3My00OS45NTVjMC0yNy4wOTYtMjEuMzY4LTQ5LjgxMS01Mi4wNzMtNDkuODExSDI5MC4yNDNDMzAyLjE5NCwxMzYuMzM0LDMwMi42NTgsNzIuNjM0LDI1Mi4yMTgsNzIuNjI3Cgl6Ii8+Cjwvc3ZnPgo=","options":{"isTrashed":false},"credits":[]},{"name":"svg/iconmonstr-paperclip-2-icon.svg","type":"image/svg+xml","lastModified":1492756455000,"composed":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KCjwhLS0gTGljZW5zZSBBZ3JlZW1lbnQgYXQgaHR0cDovL2ljb25tb25zdHIuY29tL2xpY2Vuc2UvIC0tPgoKPCFET0NUWVBFIHN2ZyBQVUJMSUMgIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkIj4KPHN2ZyB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI1MTJweCIgaGVpZ2h0PSI1MTJweCIgdmlld0JveD0iMCAwIDUxMiA1MTIiIGVuYWJsZS1iYWNrZ3JvdW5kPSJuZXcgMCAwIDUxMiA1MTIiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8cGF0aCBpZD0icGFwZXJjbGlwLTItaWNvbiIgZD0iTTI4OS4wNSw4NC42M0w5OC4yMjUsMzA4LjEzNmMtNi4zNSw3LjQ0LTkuMTI2LDE3LjI5MS03LjU5NCwyNi45NTRsMTAuNTE0LDY2LjE0NAoJYzEuMzIsOC4zMTIsOC40ODQsMTQuNDQxLDE2LjkwMSwxNC40NGg2Ni45NzFjOS43ODUsMCwxOS4wNzktNC4yODMsMjUuNDM0LTExLjcyNWwyMDYuMDE1LTI0MS4yOQoJYzUuOTMtNi45NDMsNS4xMDQtMTcuMzc5LTEuODQxLTIzLjMwNWwtNDIuODMtMzYuNTdjLTYuOTQ2LTUuOTI4LTE3LjM4LTUuMTA0LTIzLjMxLDEuODM3bC0xNTIuNCwxNzguNDc3CgljLTMuMzEyLDMuODcyLTEuOTQxLDcuNTU3LTAuNzU0LDE1LjU2MmMwLjY0Nyw0LjM1OCw0LjQwOSw3LjU3Miw4LjgxNyw3LjUyOGM4LjIwMS0wLjA4MiwxMS45NTksMC42NzcsMTUuMjU0LTMuMTg2CglsMTA0Ljc0NS0xMjIuNjUzbDMwLjAzMSwyNS42NDFsLTEwOC4zOTYsMTI2LjkzYy01LjgyMyw2LjgyMS0xNC4zMDcsMTAuNzk1LTIzLjI3MiwxMC45MDRoLTQwLjYzOQoJYy0xMC4zNDksMC4xMjQtMTkuMTkxLTYuOTQzLTIwLjY5MS0xNy4xOGwtNS44OTYtNDAuMjE1Yy0xLjMwNC04Ljg3NSwxLjI5Mi0xNy44NzgsNy4xMTgtMjQuNjk3TDMyMS43NTcsNzUuMTExCgljMTguMjYxLTIxLjM5LDUwLjQwOS0yMy45MjksNzEuODAzLTUuNjY0bDUwLjU3Niw0My4xOGMyMS4zOTUsMTguMjY1LDIzLjkzMiw1MC40MTQsNS42NjYsNzEuODA2TDIzNS40NTcsNDM1LjQ3OQoJYy0xMC40NDcsMTIuMjQzLTI1LjczNSwxOS4yODQtNDEuODMsMTkuMjcxaC04OS4zMjFjLTE5LjY4OC0wLjAxMi0zNi40NDktMTQuMzgyLTM5LjU0OS0zMy44MjFsLTE0LjA3Mi04OC4yMTMKCWMtMi41My0xNS44OSwyLjAyNy0zMi4wOTcsMTIuNDc5LTQ0LjMzOUwyNTkuMDE3LDU4Ljk4OEwyODkuMDUsODQuNjN6Ii8+Cjwvc3ZnPgo=","options":{"isTrashed":false},"credits":[]},{"name":"svg/iconmonstr-puzzle-icon.svg","type":"image/svg+xml","lastModified":1492756455000,"composed":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KCjwhLS0gTGljZW5zZSBBZ3JlZW1lbnQgYXQgaHR0cDovL2ljb25tb25zdHIuY29tL2xpY2Vuc2UvIC0tPgoKPCFET0NUWVBFIHN2ZyBQVUJMSUMgIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkIj4KPHN2ZyB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI1MTJweCIgaGVpZ2h0PSI1MTJweCIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDUxMiA1MTI7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPHBhdGggaWQ9InB1enpsZS0xIiBkPSJNOTIuNTU2LDM1OWMxNi43OSwwLDIyLjQ3My05LjAwMiwyOS4zMTItMTUuODI1QzEzNS44MzMsMzI5LjE1OSwxNTMsMzM1LjEyOCwxNTMsMzU3LjcxVjQ2MmgxMDQuMjkKCWMyMi41ODIsMCwyOC41NTEtMTcuMTY3LDE0LjU0NC0zMS4xMzFjLTYuODMyLTYuODQtMTUuODM0LTEyLjUyMy0xNS44MzQtMjkuMzIxQzI1NiwzODIuODg5LDI3NS4wMjgsMzU5LDMwNy41LDM1OQoJczUxLjUsMjMuODg5LDUxLjUsNDIuNTQ4YzAsMTYuNzk4LTkuMDAyLDIyLjQ4MS0xNS44MjUsMjkuMzIxQzMyOS4xNTksNDQ0LjgzMywzMzUuMTI4LDQ2MiwzNTcuNzEsNDYySDQ2MlYzNTcuNzEKCWMwLTIyLjU4Mi0xNy4xNjctMjguNTUxLTMxLjEzMS0xNC41MzVjLTYuODQsNi44MjMtMTIuNTIzLDE1LjgyNS0yOS4zMjEsMTUuODI1QzM4Mi44ODksMzU5LDM1OSwzMzkuOTcyLDM1OSwzMDcuNQoJczIzLjg4OS01MS41LDQyLjU0OC01MS41YzE2Ljc5OCwwLDIyLjQ4MSw5LjAwMiwyOS4zMjEsMTUuODM0QzQ0NC44MzMsMjg1Ljg0MSw0NjIsMjc5Ljg3Miw0NjIsMjU3LjI5VjE1M0gzNTcuNzEKCWMtMjIuNTgyLDAtMjguNTUxLTE3LjE2Ny0xNC41MzUtMzEuMTMxYzYuODIzLTYuODQsMTUuODI1LTEyLjUyMywxNS44MjUtMjkuMzEyQzM1OSw3My44ODksMzM5Ljk3Miw1MCwzMDcuNSw1MAoJUzI1Niw3My44ODksMjU2LDkyLjU1NmMwLDE2Ljc5LDkuMDAyLDIyLjQ3MywxNS44MzQsMjkuMzEyQzI4NS44NDEsMTM1LjgzMywyNzkuODcyLDE1MywyNTcuMjksMTUzSDE1M3YxMDQuMjkKCWMwLDIyLjU4Mi0xNy4xNjcsMjguNTUxLTMxLjEzMSwxNC41NDRDMTE1LjAyOSwyNjUuMDAyLDEwOS4zNDYsMjU2LDkyLjU1NiwyNTZDNzMuODg5LDI1Niw1MCwyNzUuMDI4LDUwLDMwNy41CglTNzMuODg5LDM1OSw5Mi41NTYsMzU5eiIvPgo8L3N2Zz4K","options":{"isTrashed":false},"credits":[]},{"name":"svg/iconmonstr-user-icon.svg","type":"image/svg+xml","lastModified":1492756455000,"composed":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KCjwhLS0gVGhlIGljb24gY2FuIGJlIHVzZWQgZnJlZWx5IGluIGJvdGggcGVyc29uYWwgYW5kIGNvbW1lcmNpYWwgcHJvamVjdHMgd2l0aCBubyBhdHRyaWJ1dGlvbiByZXF1aXJlZCwgYnV0IGFsd2F5cyBhcHByZWNpYXRlZC4gCllvdSBtYXkgTk9UIHN1Yi1saWNlbnNlLCByZXNlbGwsIHJlbnQsIHJlZGlzdHJpYnV0ZSBvciBvdGhlcndpc2UgdHJhbnNmZXIgdGhlIGljb24gd2l0aG91dCBleHByZXNzIHdyaXR0ZW4gcGVybWlzc2lvbiBmcm9tIGljb25tb25zdHIuY29tIC0tPgoKPCFET0NUWVBFIHN2ZyBQVUJMSUMgIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkIj4KPHN2ZyB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI1MTJweCIgaGVpZ2h0PSI1MTJweCIgdmlld0JveD0iMCAwIDUxMiA1MTIiIGVuYWJsZS1iYWNrZ3JvdW5kPSJuZXcgMCAwIDUxMiA1MTIiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8cGF0aCBpZD0idXNlci1pY29uIiBkPSJNNDA3LjQ0OCwzNjAuNDc0Yy01OS4wMzYtMTMuNjE3LTExMy45ODktMjUuNTQxLTg3LjM3NS03NS43MTcKCWM4MS4wMS0xNTIuNzI5LDIxLjQ3My0yMzQuNDA2LTY0LjA3Mi0yMzQuNDA2Yy04Ny4yMzEsMC0xNDUuMzAzLDg0LjgxMi02NC4wNzIsMjM0LjQwNmMyNy40MTIsNTAuNDgyLTI5LjYwOCw2Mi4zOTMtODcuMzc1LDc1LjcxNwoJYy01OS4wMTIsMTMuNjA5LTU0LjQ3Myw0NC43MjMtNTQuNDczLDEwMS4xNzZoNDExLjgzOEM0NjEuOTE5LDQwNS4xOTYsNDY2LjQ1OCwzNzQuMDgzLDQwNy40NDgsMzYwLjQ3NHoiLz4KPC9zdmc+Cg==","options":{"isTrashed":false},"credits":[]},{"name":"svg/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT5TVkc8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJzdmcvbWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCTwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"svg/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbW1vbiwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCglWZXJ0aWNlcywKCVN2ZywKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7Cgpjb25zdCBzdmdzID0gWwoJJ2ljb25tb25zdHItY2hlY2stbWFyay04LWljb24nLAoJJ2ljb25tb25zdHItcGFwZXJjbGlwLTItaWNvbicsCgknaWNvbm1vbnN0ci1wdXp6bGUtaWNvbicsCgknaWNvbm1vbnN0ci11c2VyLWljb24nCl07CgovLyDjg5Hjg6njg6Hjg7zjgr8KY29uc3Qgc2NhbGUgPSAwLjg7CmNvbnN0IHNhbXBsaW5nID0gMTU7Cgpmb3IgKGNvbnN0IFtpLCBuYW1lXSBvZiBzdmdzLmVudHJpZXMoKSkgewoJZmVlbGVzLmZldGNoKGBzdmcvJHtuYW1lfS5zdmdgKQoJCS50aGVuKChyZXNwb25zZSkgPT4gcmVzcG9uc2UudGV4dCgpKQoJCS50aGVuKChkYXRhKSA9PiB7CgoJCQljb25zdCBjb2xvciA9IENvbW1vbi5jaG9vc2UoWycjNTU2MjcwJywgJyM0RUNEQzQnLCAnI0M3RjQ2NCcsICcjRkY2QjZCJywgJyNDNDRENTgnXSk7CgkJCWNvbnN0IHZlcnRleFNldHMgPSBbXTsKCgkJCWZvciAoY29uc3QgcGF0aCBvZiBnZXRQYXRoRWxlbWVudHMoZGF0YSkpIHsKCQkJCWNvbnN0IHBvaW50cyA9IHBhdGhUb1ZlcnRpY2VzKHBhdGgsIHNhbXBsaW5nKTsKCQkJCXZlcnRleFNldHMucHVzaChWZXJ0aWNlcy5zY2FsZShwb2ludHMsIHNjYWxlLCBzY2FsZSkpOwoJCQl9CgoJCQlXb3JsZC5hZGQod29ybGQsIEJvZGllcy5mcm9tVmVydGljZXMoMTAwICsgaSAqIDE1MCwgMjAwICsgaSAqIDUwLCB2ZXJ0ZXhTZXRzLCB7CgkJCQlyZW5kZXI6IHsKCQkJCQlmaWxsU3R5bGU6IGNvbG9yLAoJCQkJCXN0cm9rZVN0eWxlOiBjb2xvciwKCQkJCQlsaW5lV2lkdGg6IDEKCQkJCX0KCQkJfSwgdHJ1ZSkpOwoKCQl9KTsKfQoKZmVlbGVzLmZldGNoKCdzdmcvc3ZnLnN2ZycpCgkudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLnRleHQoKSkKCS50aGVuKChkYXRhKSA9PiB7CgoJCWNvbnN0IGNvbG9yID0gQ29tbW9uLmNob29zZShbJyM1NTYyNzAnLCAnIzRFQ0RDNCcsICcjQzdGNDY0JywgJyNGRjZCNkInLCAnI0M0NEQ1OCddKTsKCQljb25zdCB2ZXJ0ZXhTZXRzID0gW107CgoJCWZvciAoY29uc3QgcGF0aCBvZiBnZXRQYXRoRWxlbWVudHMoZGF0YSkpIHsKCQkJY29uc3QgcG9pbnRzID0gcGF0aFRvVmVydGljZXMocGF0aCwgc2FtcGxpbmcpOwoJCQl2ZXJ0ZXhTZXRzLnB1c2goVmVydGljZXMuc2NhbGUocG9pbnRzLCBzY2FsZSwgc2NhbGUpKTsKCQl9CgoJCVdvcmxkLmFkZCh3b3JsZCwgQm9kaWVzLmZyb21WZXJ0aWNlcyg0MDAsIDgwLCB2ZXJ0ZXhTZXRzLCB7CgkJCXJlbmRlcjogewoJCQkJZmlsbFN0eWxlOiBjb2xvciwKCQkJCXN0cm9rZVN0eWxlOiBjb2xvciwKCQkJCWxpbmVXaWR0aDogMQoJCQl9CgkJfSwgdHJ1ZSkpOwoKCX0pOwoKV29ybGQuYWRkKHdvcmxkLCBbCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCA2MDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDgwMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSkKXSk7CgovLyBhZGQgbW91c2UgY29udHJvbApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmdW5jdGlvbiBnZXRQYXRoRWxlbWVudHMoc3ZnKSB7Cgljb25zdCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwoJc3Bhbi5pbm5lckhUTUwgPSBzdmc7CglyZXR1cm4gc3Bhbi5xdWVyeVNlbGVjdG9yQWxsKCdwYXRoJyk7Cn0KCmZ1bmN0aW9uIHBhdGhUb1ZlcnRpY2VzKHBhdGgsIHNhbXBsZUxlbmd0aCkgewoJY29uc3QgdG90YWwgPSBwYXRoLmdldFRvdGFsTGVuZ3RoKCk7CgoJY29uc3QgcG9pbnRzID0gW107Cglmb3IgKGxldCBsZW5ndGggPSAwOyBsZW5ndGggPCB0b3RhbDsgbGVuZ3RoICs9IHNhbXBsZUxlbmd0aCkgewoJCXBvaW50cy5wdXNoKHBhdGguZ2V0UG9pbnRBdExlbmd0aChsZW5ndGgpKTsKCX0KCglyZXR1cm4gcG9pbnRzOwp9CgoKZmVlbGVzLm9wZW5SZWFkbWUoJ3N2Zy9SRUFETUUubWQnKTsK","options":{"isTrashed":false},"credits":[]},{"name":"svg/svg.svg","type":"image/svg+xml","lastModified":1492756455000,"composed":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCFET0NUWVBFIHN2ZyBQVUJMSUMgIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkIj4KCjxzdmcgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CiAgPGc+CiAgICA8cGF0aCBkPSJtIDkuMTcwMDE4Niw4NS42ODE3MjUgMjAuMjUwMDAwNCwtMS45Njg3NSBjIDEuMjE4NzIzLDYuNzk2OSAzLjY5MTM3NywxMS43ODkwOCA3LjQxNzk2OSwxNC45NzY1NiAzLjcyNjUyNiwzLjE4NzUyNSA4Ljc1Mzg2NCw0Ljc4MTI3NSAxNS4wODIwMzEsNC43ODEyNTUgNi43MDMwNzUsMmUtNSAxMS43NTM4NDUsLTEuNDE3OTUgMTUuMTUyMzQ1LC00LjI1MzkxNSAzLjM5ODM3LC0yLjgzNTkxIDUuMDk3NTksLTYuMTUyMzEgNS4wOTc2NiwtOS45NDkyMSAtN2UtNSwtMi40Mzc0NyAtMC43MTQ5MiwtNC41MTE2OSAtMi4xNDQ1NCwtNi4yMjI2NiAtMS40Mjk3NSwtMS43MTA5IC0zLjkyNTg0LC0zLjE5OTE4IC03LjQ4ODI4LC00LjQ2NDg0IC0yLjQzNzU1LC0wLjg0MzcxIC03Ljk5MjIzNiwtMi4zNDM3MSAtMTYuNjY0MDYsLTQuNSAtMTEuMTU2MjgxLC0yLjc2NTU4IC0xOC45ODQzOTgsLTYuMTY0MDIgLTIzLjQ4NDM3NSwtMTAuMTk1MzIgLTYuMzI4MTM3LC01LjY3MTgxIC05LjQ5MjE5NiwtMTIuNTg1ODcgLTkuNDkyMTg4LC0yMC43NDIxOCAtOGUtNiwtNS4yNDk5MiAxLjQ4ODI3MSwtMTAuMTYwMDcgNC40NjQ4NDQsLTE0LjczMDQ3IDIuOTc2NTQ2LC00LjU3MDIyIDcuMjY1NjA1LC04LjA1MDY5IDEyLjg2NzE4OCwtMTAuNDQxNDEgNS42MDE1MywtMi4zOTA1MiAxMi4zNjMyNDIsLTMuNTg1ODMgMjAuMjg1MTU2LC0zLjU4NTk0IDEyLjkzNzQ0NSwxLjFlLTQgMjIuNjc1NzE1LDIuODM2MDQgMjkuMjE0ODQ1LDguNTA3ODIgNi41Mzg5OCw1LjY3MTk2IDkuOTcyNTcsMTMuMjQyMjcgMTAuMzAwNzgsMjIuNzEwOTMgbCAtMjAuODEyNSwwLjkxNDA3IGMgLTAuODkwNjksLTUuMjk2OCAtMi44MDA4NCwtOS4xMDUzOSAtNS43MzA0NywtMTEuNDI1NzkgLTIuOTI5NzQsLTIuMzIwMjIgLTcuMzI0MjcsLTMuNDgwMzggLTEzLjE4MzU5MywtMy40ODA0NiAtNi4wNDY5MTUsOGUtNSAtMTAuNzgxMjg1LDEuMjQyMjcgLTE0LjIwMzEyNSwzLjcyNjU2IC0yLjIwMzE1NCwxLjU5MzgzIC0zLjMwNDcxNiwzLjcyNjY0IC0zLjMwNDY4Nyw2LjM5ODQ0IC0yLjllLTUsMi40Mzc1NyAxLjAzMTIyLDQuNTIzNTEgMy4wOTM3NSw2LjI1NzgxIDIuNjI0OTY1LDIuMjAzMTkgOC45OTk5NTksNC41MDAwNiAxOS4xMjUsNi44OTA2MiAxMC4xMjQ5MzUsMi4zOTA2OSAxNy42MTMyMTUsNC44NjMzNCAyMi40NjQ4NDUsNy40MTc5NyA0Ljg1MTQ4LDIuNTU0NzQgOC42NDgzNSw2LjA0NjkzIDExLjM5MDYyLDEwLjQ3NjU2IDIuNzQyMSw0LjQyOTczIDQuMTEzMiw5LjkwMjM4IDQuMTEzMjgsMTYuNDE3OTcgLThlLTUsNS45MDYyOCAtMS42NDA3MSwxMS40Mzc1MjUgLTQuOTIxODcsMTYuNTkzNzU1IC0zLjI4MTMzLDUuMTU2MjYgLTcuOTIxOTUsOC45ODgyOSAtMTMuOTIxODcsMTEuNDk2MSAtNi4wMDAwNywyLjUwNzgxIC0xMy40NzY2MiwzLjc2MTcxIC0yMi40Mjk2OTMsMy43NjE3MiAtMTMuMDMxMjg0LC0xMGUtNiAtMjMuMDM5MDg3LC0zLjAxMTcyIC0zMC4wMjM0MzcsLTkuMDM1MTYgQyAxNC43MDEyNTgsMTA1Ljk5MDM0IDEwLjUyOTM4Nyw5Ny4yMTI5OTUgOS4xNzAwMTg2LDg1LjY4MTcyNSB6IiAvPgogICAgPHBhdGggZD0ibSAxMzYuOTI3ODMsMTE5LjIyMDc5IC0zNi44NDM3NSwtMTAzLjA3ODEyNSAyMi41NzAzMSwwIDI2LjA4NTk0LDc2LjI4OTA2IDI1LjI0MjE4LC03Ni4yODkwNiAyMi4wNzgxMywwIC0zNi45MTQwNiwxMDMuMDc4MTI1IHoiIC8+CiAgICA8cGF0aCBkPSJtIDI1NC43NzE1OCw4MS4zMjIzNDUgMCwtMTcuMzY3MTggNDQuODU5MzcsMCAwLDQxLjA2MjUwNSBjIC00LjM1OTQ3LDQuMjE4NzYgLTEwLjY3NTg3LDcuOTMzNiAtMTguOTQ5MjIsMTEuMTQ0NTMgLTguMjczNTEsMy4yMTA5MyAtMTYuNjUyNDEsNC44MTY0IC0yNS4xMzY3Miw0LjgxNjQgLTEwLjc4MTI5LDAgLTIwLjE3OTcyLC0yLjI2MTcyIC0yOC4xOTUzMSwtNi43ODUxNSAtOC4wMTU2NSwtNC41MjM0MyAtMTQuMDM5MDgsLTEwLjk5MjE3IC0xOC4wNzAzMSwtMTkuNDA2MjU1IC00LjAzMTI2LC04LjQxNDAzIC02LjA0Njg4LC0xNy41NjYzNyAtNi4wNDY4OCwtMjcuNDU3MDMgMCwtMTAuNzM0MzIgMi4yNSwtMjAuMjczMzcgNi43NSwtMjguNjE3MTkgNC40OTk5OSwtOC4zNDM2NiAxMS4wODU5MiwtMTQuNzQyMDkgMTkuNzU3ODIsLTE5LjE5NTMxIDYuNjA5MzMsLTMuNDIxNzggMTQuODM1ODksLTUuMTMyNzEgMjQuNjc5NjgsLTUuMTMyODIgMTIuNzk2ODEsMS4xZS00IDIyLjc5Mjg5LDIuNjgzNyAyOS45ODgyOSw4LjA1MDc4IDcuMTk1MjEsNS4zNjcyOCAxMS44MjQxMiwxMi43ODUyNCAxMy44ODY3MSwyMi4yNTM5MSBsIC0yMC42NzE4NywzLjg2NzE5IGMgLTEuNDUzMiwtNS4wNjI0MyAtNC4xODM2NywtOS4wNTg1MiAtOC4xOTE0MSwtMTEuOTg4MjggLTQuMDA3ODgsLTIuOTI5NjEgLTkuMDExNzgsLTQuMzk0NDUgLTE1LjAxMTcyLC00LjM5NDUzIC05LjA5Mzc5LDhlLTUgLTE2LjMyNDI2LDIuODgyODkgLTIxLjY5MTQsOC42NDg0MyAtNS4zNjcyMiw1Ljc2NTcgLTguMDUwODEsMTQuMzIwMzggLTguMDUwNzgsMjUuNjY0MDcgLTNlLTUsMTIuMjM0NDEgMi43MTg3MiwyMS40MTAxOCA4LjE1NjI1LDI3LjUyNzM0IDUuNDM3NDYsNi4xMTcyMTUgMTIuNTYyNDUsOS4xNzU4MDUgMjEuMzc1LDkuMTc1Nzg1IDQuMzU5MzEsMmUtNSA4LjczMDQsLTAuODU1NDUgMTMuMTEzMjgsLTIuNTY2NDEgNC4zODI3NCwtMS43MTA5MTUgOC4xNDQ0NSwtMy43ODUxMzUgMTEuMjg1MTUsLTYuMjIyNjU1IGwgMCwtMTMuMDc4MTMgeiIgLz4KICA8L2c+Cjwvc3ZnPg==","options":{"isTrashed":false},"credits":[]},{"name":"terrain/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDlnLDlvaIKClNWRyDjgpLkvb/jgaPjgabjgIHlnLDlvaLjgpLkvZzjgaPjgabjgb/jgZ/jgogKCgroh6rliIbjgafkvZzjgaPjgZ8gU1ZHIOeUu+WDj+OCkuOCguOBqOOBq+WcsOW9ouOCkuOBpOOBj+OCi+OBq+OBr+OAgSAgCmB0ZXJyYWluL2Ag44Go44GE44GG44OV44Kp44Or44OA44GrIFNWRyDnlLvlg4/jgpLlhaXjgozjgabjgIEgIApgZmVlbGVzLmZldGNoYCDjga7kuK3jga7jg5XjgqHjgqTjg6vlkI3jgpLmm7jjgY3jgYvjgYjjgojjgYYKCgpGZWVsZXMg44Gu5Lit44Gn55S75YOP44KS5L2c44KL44GT44Go44Gv44Gn44GN44Gq44GE44Gu44Gn44CBICAK57W144KS5o+P44GP44Gf44KB44Gu5LuW44Gu44K944OV44OI44KS5L2/44Gj44Gm44GtCgoKIVvmlLnpgKDjgZnjgotdKHRlcnJhaW4vbWFpbi5qcykKCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoKCg==","options":{"isTrashed":false},"credits":[]},{"name":"terrain/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7lnLDlvaI8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJ0ZXJyYWluL21haW4uanMiPjwvc2NyaXB0PgoJPC9oZWFkPgoJPGJvZHk+Cgk8L2JvZHk+CjwvaHRtbD4=","options":{"isTrashed":false},"credits":[]},{"name":"terrain/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUNvbXBvc2l0ZXMsCglDb21tb24sCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJVmVydGljZXMsCglRdWVyeSwKCVN2ZywKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7ClJlbmRlci5ydW4ocmVuZGVyKTsKCi8vIGNyZWF0ZSBydW5uZXIKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCmZlZWxlcy5mZXRjaCgndGVycmFpbi90ZXJyYWluLnN2ZycpCgkudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLnRleHQoKSkKCS50aGVuKChkYXRhKSA9PiB7CgkJY29uc3QgdmVydGV4U2V0cyA9IFtdOwoKCQlmb3IgKGNvbnN0IHBhdGggb2YgZ2V0UGF0aEVsZW1lbnRzKGRhdGEpKSB7CgkJCWNvbnN0IHBvaW50cyA9IHBhdGhUb1ZlcnRpY2VzKHBhdGgsIDMwKTsKCQkJdmVydGV4U2V0cy5wdXNoKFZlcnRpY2VzLnNjYWxlKHBvaW50cywgMC40LCAwLjQpKTsKCQl9CgoJCS8vIGFkZCBib2RpZXMKCQljb25zdCB0ZXJyYWluID0gQm9kaWVzLmZyb21WZXJ0aWNlcyg0MDAsIDM1MCwgdmVydGV4U2V0cywgewoJCQlpc1N0YXRpYzogdHJ1ZSwKCQkJcmVuZGVyOiB7CgkJCQlmaWxsU3R5bGU6ICcjMmUyYjQ0JywKCQkJCXN0cm9rZVN0eWxlOiAnIzJlMmI0NCcsCgkJCQlsaW5lV2lkdGg6IDEKCQkJfQoJCX0sIHRydWUpOwoKCQlXb3JsZC5hZGQod29ybGQsIHRlcnJhaW4pOwoKCQljb25zdCBib2R5T3B0aW9ucyA9IHsKCQkJZnJpY3Rpb25BaXI6IDAsCgkJCWZyaWN0aW9uOiAwLjAwMDEsCgkJCXJlc3RpdHV0aW9uOiAwLjYKCQl9OwoKCQlXb3JsZC5hZGQod29ybGQsIENvbXBvc2l0ZXMuc3RhY2soODAsIDEwMCwgMjAsIDIwLCAxMCwgMTAsICh4LCB5KSA9PiB7CgkJCWlmIChRdWVyeS5wb2ludChbdGVycmFpbl0sIHsKCQkJCQl4LAoJCQkJCXkKCQkJCX0pLmxlbmd0aCA9PT0gMCkgewoJCQkJcmV0dXJuIEJvZGllcy5wb2x5Z29uKHgsIHksIDUsIDEyLCBib2R5T3B0aW9ucyk7CgkJCX0KCQl9KSk7Cgl9KTsKCi8vIGFkZCBtb3VzZSBjb250cm9sCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZ1bmN0aW9uIGdldFBhdGhFbGVtZW50cyhzdmcpIHsKCWNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7CglzcGFuLmlubmVySFRNTCA9IHN2ZzsKCXJldHVybiBzcGFuLnF1ZXJ5U2VsZWN0b3JBbGwoJ3BhdGgnKTsKfQoKZnVuY3Rpb24gcGF0aFRvVmVydGljZXMocGF0aCwgc2FtcGxlTGVuZ3RoKSB7Cgljb25zdCB0b3RhbCA9IHBhdGguZ2V0VG90YWxMZW5ndGgoKTsKCgljb25zdCBwb2ludHMgPSBbXTsKCWZvciAobGV0IGxlbmd0aCA9IDA7IGxlbmd0aCA8IHRvdGFsOyBsZW5ndGggKz0gc2FtcGxlTGVuZ3RoKSB7CgkJcG9pbnRzLnB1c2gocGF0aC5nZXRQb2ludEF0TGVuZ3RoKGxlbmd0aCkpOwoJfQoKCXJldHVybiBwb2ludHM7Cn0KCgpmZWVsZXMub3BlblJlYWRtZSgndGVycmFpbi9SRUFETUUubWQnKTsK","options":{"isTrashed":false},"credits":[]},{"name":"terrain/terrain.svg","type":"image/svg+xml","lastModified":1492756455000,"composed":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHdpZHRoPSI4MDAiCiAgIGhlaWdodD0iNjAwIgogICBpZD0ic3ZnMiI+CiAgPGRlZnMKICAgICBpZD0iZGVmczQiIC8+CiAgPG1ldGFkYXRhCiAgICAgaWQ9Im1ldGFkYXRhNyI+CiAgICA8cmRmOlJERj4KICAgICAgPGNjOldvcmsKICAgICAgICAgcmRmOmFib3V0PSIiPgogICAgICAgIDxkYzpmb3JtYXQ+aW1hZ2Uvc3ZnK3htbDwvZGM6Zm9ybWF0PgogICAgICAgIDxkYzp0eXBlCiAgICAgICAgICAgcmRmOnJlc291cmNlPSJodHRwOi8vcHVybC5vcmcvZGMvZGNtaXR5cGUvU3RpbGxJbWFnZSIgLz4KICAgICAgICA8ZGM6dGl0bGU+PC9kYzp0aXRsZT4KICAgICAgPC9jYzpXb3JrPgogICAgPC9yZGY6UkRGPgogIDwvbWV0YWRhdGE+CiAgPGcKICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLC00NTIuMzYyMTgpIgogICAgIGlkPSJsYXllcjEiPgogICAgPHBhdGgKICAgICAgIGQ9Im0gLTEwNC44NzUsLTkyLjA5Mzc1IDAsNzY4LjE4NzUgMTA0NS40MDYyNSwwIDAsLTc2OC4xODc1IHogbSA3OTIsMTEyLjg3NSAzNC42NTYyNSwxMS45MDYyNSAyMC43ODEyNSwwLjk2ODc1IDcuOTM3NSwyNy43MTg3NSAxNC44NDM3NSwtMC45Njg3NSAxLDI3LjcxODc1IC0xOS44MTI1LDIuOTY4NzUgLTE3LjgzMzIzLDEwLjg4ODYxIC0wLjk3OTI3LDE5Ljc5ODg5IC0yMS43NjgyNiw0MS41OTYyMiAtMTYuODI2MTEsMzguNjE1NDEgLTIxLjgxMjUsLTExLjkwNjI1IC0zNC42MjUsLTMuOTM3NSAtMjQuNzgxMjUsNS45Mzc1IC03LjkwNjI1LC0yIC0yNC43NSwwIC0yNS43MzMyOSwtMC45ODM5MSAtMTUuMzEzNzgsMTMuODMyMDkgMTEuMzI4MzIsMTguODM5NjMgNDAuMTIzMjcsLTIuMjUwMjggMzIuODczMDIsMTguNTg4MTkgMTkuMTkxNzgsMjYuMjk1MzYgMjYuNjM0MDIsMjYuNjY3NDggLTMyLjM5MTk3LDcuOTI0MjIgLTI3LjAwMzE0LDguOTA1OTEgLTUxLjQ5NTY3LC0xLjk2OTY4IC0yOC43MTg3NSwtMjMuNzYzOTIgLTM4LjU5OTMxLC0yMS43NzE2NiAtMzMuNTAxOTcsMC44NDE0MSAtMTUuMDEyNTgsMTcuOTU5MDIgMjIuMDM5MDYsMTIuOTk4ODggMzEuNzI0MDUsMy4yMjA3MiAtMTIuNTk0MTUsMjAuMzE3NyAxLjQwMDk2LDIzLjg1NjI3IC0zNC42NjM4NiwyLjgzOTYzIC0zNC40ODM3MywtMTAuMDcyNDQgLTIxLjk0MDU5LDEzLjE2ODc1IC0yOS43MDIwMywtMTYuODE1ODkgLTMzLjUyNTEyLDQuNzg1MTcgLTE3Ljk1Mzg1LC0xNS42NzYyNiA2LjkyMzMsLTI0Ljc1MzQyIC02LjkzNzUsLTIyLjc4NTg4IDE4LjgyMTE3LC0zMS42NjEyIC02MC40MTA1OCwxNi44MzM4NSAtMTIuODc1LDguOTA2MjUgLTEzLjg0Mzc5LC0xMC45MDYyNSAtMi45Njg3NSwxNS44NDM3NSAtMTQuODQzNzUsNy45Mzc1IC0xMC45MDYyNSwtMiAtMTQuODQzNzUsMTUuODQzNzUgLTIyLjc4MTI1LDcuOTM3NSAtMTQuODQzNzUsNi45MDYyNSAtMTIuODc1LDE1Ljg0Mzc1IDI1Ljc1LDYuOTM3NSAyMi43NSwxMy44NzUgMCwxMC44NzUgMTQuODc1LDIgMi45Njg3NSwzMS42ODc1IDE0Ljg0Mzc1LC0xIC0yLjk2ODc1LC0xNy44MTI1IDIxLjc4MTI1LDAuOTY4NzUgMy45Njg3NSw2LjkzNzUgMC45Njg3NSwyMS43ODEyNSAtMC45Njg3NSwxNC44NDM3NSA4LjkwNjI1LDguOTA2MjUgMTguODEyNSwwIDMwLjY4NzUsLTE4LjgxMjUgMjUuNzUsNC45Njg3NSAxNC44NDM3NSwtNi45Mzc1IDIxLjc4MTI1LDguOTA2MjUgMjQuNzUsNC45Njg3NSAyMC43ODEyNSwtOC45Mzc1IDE0Ljg3NSwtMC45Njg3NSAwLjk2ODc1LDEyLjg3NSAyMS43ODEyNSwxMi44NzUgMSwtMjguNzE4NzUgOS45MDYyNSwwIDMuOTY4NzUsMTIuODc1IDE2LjgxMjUsNy45MDYyNSBjIDMzLjI3NDYzLC0xOC43MzI1MSAyNC40NzI1OCwtMTguODIwOTQgNTMuNDczNCwxNy44MjE0NyBsIDI2LjczOTQ4LC0yNC43NTU1NiAyNC43NDI1NywtMC45OTUxIDMuOTYwNzEsMjEuNzgyMTggMjIuNzcxMzUsMi45ODIzNiAxMi44ODg2MSwxOC44MDY2MiAxNi44MTcxNCwtMjAuNzkxMTUgMjEuNzczNTEsLTE1Ljg0MTU4IDE4LjgwODc5LC0yNy43MTY1OSAyMS44MTA5NSwtOS45MDkzNCAxNi44MjMzNCwtMTYuODI0NTcgMTMuODUwNTUsMTUuODUzMDMgOC45MjYwNSwyMC43ODc3NSAtMy45Njk2OCwyMS43ODY1MSAxNS44NTA1NiwxMi44Njk3NCAwLjk2ODc1LDIxLjc4MTI1IDUuOTM3NSw5LjkwNjI1IDIuOTg3LDIxLjc2NzY0IC0yMy43NTI0NywxLjk3MDkxIDE0Ljg0Nzc3LDE2Ljg0MTU5IDYuOTE3NywxOC43OTQ4NiAtMTEuODc1LDEyLjg3NSAtNDkuNSwyIC0xNy44NDM3NSwtMTAuOTA2MjUgMCwtMzEuNjg3NSAtMTMuODQzNzUsMCAtMTUuODQzNzUsMTMuODc1IC0yNy43MTg3NSw5LjkwNjI1IC00Ni41MzEyNSwyMi43NSAtNjUuMzQzNzUsMCAtMTQuODc1LC0xNi44MTI1IC0xNy44MTI1LDEgMCwyMy43NSAtMjguNzE4NzUsNi45Mzc1IC0yNi43MTg3NSwtOC45MDYyNSAzLjk1MjA0LC0yMy43NjU3OCAtMjguNzA2NjgsLTAuOTkwMSAtMjIuNzcyMjgsMTYuODI2MTIgLTM2LjYyOTMzLC0xMi44ODI3NCAtMTYuODQzNzUsLTE5Ljc4MTI1IC0xMy44NDM3NSwwIC0yMi43ODQ5NiwxMS44NjYwMyAxLjk5MTk1LDMwLjY4NDcxIC01My40NzA2LDcuOTM4NDMgLTE4LjgyNzY2LC0yMi43ODc0NCAtMzIuNjcwMTgsLTIyLjc1MzcxIC00Mi41Nzg1OSwtMTYuODMxNjggLTcuOTA2MjUsLTE0Ljg3NSAtMjIuNzgxMjUsLTkuODc1IC01LjkzNzUsLTExLjkwNjI1IC0yNi43MzAxOTUsLTQwLjU3OTUyIC0zLjk2ODc1LC0yOS43MTg3NSAtNDMuNTYyNSwtNC45Mzc1IEwgNDkuNSwzMTguODEyNSBsIC0xNC44NDM3NSwtMi45Njg3NSAwLC0xMS44NzUgMTkuODA0NzY1LC0yNi43NTI0OCAyOC43MjEyMjUsLTIuOTUyNjYgMi45NTYzNzQsLTMzLjY3Njk4IC0yMS43NzM4MjQsLTg1LjEyODQgMzkuNTkzNzUsLTE4LjgxMjUgMTQuODQzNzUsNC45Mzc1IDE4LjgxMjUsLTEwLjg3NSAxNC44NzUsMTMuODQzNzUgMTAuODc1LC0xOS44MTI1IDMwLjY4NzUsMiAxOS44MTI1LC0zLjk2ODc1IDYuOTM3NSwtMTkuODEyNSAyMC43ODEyNSwtNi45MDYyNSAzMi42ODc1LC0yMS43ODEyNSA0NS41MjA3MywxMS44NzU5MjggMjUuNzM5NDgsNDAuNTcyMDkyIDE5LjgxMjUsLTUuOTM3NSAyMy43NSw3LjkzNzUgTCA0MDAsMTE4LjgxMjUgNDMwLjY4NzUsMTEyLjg3NSA0NjUuMzQzNzUsOTcuMDMxMjUgNTAwLDc5LjIxODc1IGwgMjcuNzE4NzUsMC45Njg3NSAyMi43ODEyNSwxIDI5LjY4NzUsLTEyLjg3NSBMIDYwMSw1MS41IDYxNy44MjQ1Nyw3Ny4yMzE3NDUgNjQ1LjUzMTI1LDc4LjIxODc1IDY0OC41LDM4LjYyNSB6IgogICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMCw0NTIuMzYyMTgpIgogICAgICAgaWQ9InBhdGgzNzgwIgogICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MXB4O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjEiIC8+CiAgPC9nPgo8L3N2Zz4K","options":{"isTrashed":false},"credits":[]},{"name":"timescale/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgrnjg63jg7zjg6Ljg7zjgrfjg6fjg7MKCgpgZW5naW5lLnRpbWluZy50aW1lU2NhbGVgIOOCkuS9v+OBhuOBqOOAgSAgCuOCueODreODvOODouODvOOCt+ODp+ODs+OBq+OBmeOCi+OBk+OBqOOBjOOBp+OBjeOCi+OCiAoKCiMjIyBlbmdpbmUudGltaW5nLnRpbWVTY2FsZSA9IGBzY2FsZWAK5pmC6ZaT44Gu5rWB44KM44KSIGBzY2FsZWAg5YCN44Gr44GZ44KLCgoKIyMgIVvmlLnpgKDjgZnjgotdKHRpbWVzY2FsZS9tYWluLmpzKQoKClvjg6Hjg4vjg6Xjg7zjgavmiLvjgotdKGluZGV4Lmh0bWwpCgoK","options":{"isTrashed":false},"credits":[]},{"name":"timescale/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgrnjg63jg7zjg6Ljg7zjgrfjg6fjg7M8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJ0aW1lc2NhbGUvbWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCTwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"timescale/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUJvZHksCglFdmVudHMsCglDb21wb3NpdGUsCglDb21wb3NpdGVzLAoJQ29tbW9uLAoJTW91c2VDb25zdHJhaW50LAoJTW91c2UsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7CnJlbmRlci5vcHRpb25zLnNob3dBbmdsZUluZGljYXRvciA9IHRydWU7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgkvLyDlo4Hjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KQpdKTsKCi8vIOeUu+mdouWFqOS9k+OCkueIhueZuuOBleOBm+OCi++8gQpjb25zdCBleHBsb3Npb24gPSAoZW5naW5lKSA9PiB7Cgljb25zdCBib2RpZXMgPSBDb21wb3NpdGUuYWxsQm9kaWVzKGVuZ2luZS53b3JsZCk7CgoJZm9yIChjb25zdCBib2R5IG9mIGJvZGllcykgewoJCWlmICghYm9keS5pc1N0YXRpYyAmJiBib2R5LnBvc2l0aW9uLnkgPj0gNTAwKSB7CgkJCWNvbnN0IGZvcmNlTWFnbml0dWRlID0gMC4wNSAqIGJvZHkubWFzczsKCgkJCUJvZHkuYXBwbHlGb3JjZShib2R5LCBib2R5LnBvc2l0aW9uLCB7CgkJCQl4OiAoZm9yY2VNYWduaXR1ZGUgKyBDb21tb24ucmFuZG9tKCkgKiBmb3JjZU1hZ25pdHVkZSkgKiBDb21tb24uY2hvb3NlKFsxLCAtMV0pLAoJCQkJeTogLWZvcmNlTWFnbml0dWRlICsgQ29tbW9uLnJhbmRvbSgpICogLWZvcmNlTWFnbml0dWRlCgkJCX0pOwoJCX0KCX0KfTsKCi8vIOmWi+Wni+OBl+OBpuOBi+OCieOAgeOBpOOBreOBqyAxIOOBmuOBpOWil+OBiOOBpuOBhOOBj+WkieaVsApsZXQgY291bnRlciA9IDA7CgpFdmVudHMub24oZW5naW5lLCAnYWZ0ZXJVcGRhdGUnLCAoZXZlbnQpID0+IHsKCgkvLyDplovlp4vjgZfjgabjgYvjgonjgIHjgaTjga3jgasgMSDjgZrjgaTlopfjgYjjgabjgYTjgY/lpInmlbAKCWNvdW50ZXIgKz0gMTsKCglpZiAoY291bnRlciAlIDEwMCA9PT0gMCkgewoJCS8vIDEwMCDjg5Xjg6zjg7zjg6DjgavkuIDluqbjgIHniIbnmbrjgpLjgYrjgZPjgZkKCQlleHBsb3Npb24oZW5naW5lKTsKCgl9CgoJLy8gY291bnRlciDjgYwgMH45OSDjgarjgonpgJrluLjjgrnjg5Tjg7zjg4ksCgkvLyAxMDB+MTk5IOOBquOCieOCueODreODvOODouODvOOCt+ODp+ODsy4uLiDjgpLnubDjgorov5TjgZkKCWNvbnN0IHRpbWVTY2FsZVRhcmdldCA9IGNvdW50ZXIgJSAyMDAgPCAxMDAgPyAxIDogMC4wNTsKCgkvLyDlvpDjgIXjgasgdGltZVNjYWxlVGFyZ2V0IOOBq+i/keOBpeOBkeOBpuOBhOOBjwoJZW5naW5lLnRpbWluZy50aW1lU2NhbGUgKz0gKHRpbWVTY2FsZVRhcmdldCAtIGVuZ2luZS50aW1pbmcudGltZVNjYWxlKSAqIDAuMDU7Cgp9KTsKCmNvbnN0IGJvZHlPcHRpb25zID0gewoJZnJpY3Rpb25BaXI6IDAsCglmcmljdGlvbjogMC4wMDAxLAoJcmVzdGl0dXRpb246IDAuOAp9OwoKLy8g5YaG44Gu44Kq44OW44K444Kn44Kv44OICldvcmxkLmFkZCh3b3JsZCwgQ29tcG9zaXRlcy5zdGFjaygyMCwgMTAwLCAxNSwgMywgMjAsIDQwLCAoeCwgeSkgPT4gewoJcmV0dXJuIEJvZGllcy5jaXJjbGUoeCwgeSwgQ29tbW9uLnJhbmRvbSgxMCwgMjApLCBib2R5T3B0aW9ucyk7Cn0pKTsKCi8vIOOBneOBruS7luOBruOCquODluOCuOOCp+OCr+ODiApXb3JsZC5hZGQod29ybGQsIENvbXBvc2l0ZXMuc3RhY2soNTAsIDUwLCA4LCAzLCAwLCAwLCAoeCwgeSkgPT4gewoJLy8g44Op44Oz44OA44Og44Gu56K6546HCgljb25zdCByYXRlID0gQ29tbW9uLnJhbmRvbSgwLCAxKTsKCWlmIChyYXRlIDwgMC4xKSB7CgkJLy8gMTAlIOOBrueiuueOh+OBp+OAgeOBk+OBk+OBq+WFpeOCiwoJCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIENvbW1vbi5yYW5kb20oODAsIDEyMCksIENvbW1vbi5yYW5kb20oMjAsIDMwKSwgYm9keU9wdGlvbnMpOwoKCX0gZWxzZSBpZiAocmF0ZSA8IDAuNSkgewoJCS8vIOOBruOBk+OCiiA0MCUg44Gu56K6546H44Gn44CB44GT44GT44Gr5YWl44KLCgkJcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgQ29tbW9uLnJhbmRvbSgyMCwgNTApLCBDb21tb24ucmFuZG9tKDIwLCA1MCksIGJvZHlPcHRpb25zKTsKCgl9IGVsc2UgewoJCS8vIOOBruOBk+OCiuOBrueiuueOh+OBp+OAgeOBk+OBk+OBq+WFpeOCiwoJCXJldHVybiBCb2RpZXMucG9seWdvbih4LCB5LCBNYXRoLnJvdW5kKENvbW1vbi5yYW5kb20oNCwgOCkpLCBDb21tb24ucmFuZG9tKDIwLCA1MCksIGJvZHlPcHRpb25zKTsKCgl9Cgp9KSk7CgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgoKZmVlbGVzLm9wZW5SZWFkbWUoJ3RpbWVzY2FsZS9SRUFETUUubWQnKTsK","options":{"isTrashed":false},"credits":[]},{"name":"timescaleSimple/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDmmYLplpPjga7ml6njgZUKCuaZgumWk+OBrumAsuOCgOaXqeOBleOCkuWkieOBiOOBpuOBv+OBnwoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDmlLnpgKDjgZfjgabjgb/jgosKCiFb44GT44GT44GL44KJ5aeL44KB44KLXSh0aW1lc2NhbGVTaW1wbGUvbWFpbi5qcykKCuOCguOBo+OBqOaUuemAoAohW+ioreWuml0odGltZXNjYWxlU2ltcGxlL3NldHRpbmcuanMpCiFb44GL44G544O744KG44GLIOOBquOBqV0odGltZXNjYWxlU2ltcGxlL3N0YWdlLmpzKQoKLSAtIC0KCiMjIOW/nOeUqOS+iwo=","options":{"isTrashed":false},"credits":[]},{"name":"timescaleSimple/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7mmYLplpPjga7ml6njgZU8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJ0aW1lc2NhbGVTaW1wbGUvbWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCTwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"timescaleSimple/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfSBmcm9tICcuL3NldHRpbmcuanMnOwoKLy8g44K/44Kk44Oe44O8IDEKc2V0VGltZW91dCgoKSA9PiB7CgkvLyAy56eS44Gf44Gj44Gf44KJ44CB44GT44GT44Gr5YWl44KLCgkKCS8vIOaZgumWk+OBruaXqeOBleOCkiAxLzEwIOOBqwoJZW5naW5lLnRpbWluZy50aW1lU2NhbGUgPSAwLjE7CgkKCS8vIOiDjOaZr+OCkum7kuOBqwoJcmVuZGVyLm9wdGlvbnMuYmFja2dyb3VuZCA9ICcjMDAwMDAwJzsKCQoJCn0sIDIwMDApOwoKLy8g44K/44Kk44Oe44O8IDIKc2V0VGltZW91dCgoKSA9PiB7CgkvLyA156eS44Gf44Gj44Gf44KJ44CB44GT44GT44Gr5YWl44KLCgkKCS8vIOaZgumWk+OBruaXqeOBleOCkiAyIOWAjeOBqwoJZW5naW5lLnRpbWluZy50aW1lU2NhbGUgPSAyOwoJCgkvLyDog4zmma/jgpLnmb3jgasKCXJlbmRlci5vcHRpb25zLmJhY2tncm91bmQgPSAnI2ZmZmZmZic7CgkKCQp9LCA1MDAwKTsKCgoKCmltcG9ydCAnLi9zdGFnZS5qcyc7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"timescaleSimple/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVJlbmRlciwKCVdvcmxkLAoJUnVubmVyLAoJTW91c2UsCglNb3VzZUNvbnN0cmFpbnQsCn0gZnJvbSAnbWF0dGVyJzsKCmltcG9ydCBlbmdpbmUgZnJvbSAnZW5naW5lJzsKY29uc3Qgd29ybGQgPSBlbmdpbmUud29ybGQ7CgppbXBvcnQgcmVuZGVyIGZyb20gJ3JlbmRlcic7ClJlbmRlci5ydW4ocmVuZGVyKTsKCmNvbnN0IHJ1bm5lciA9IFJ1bm5lci5jcmVhdGUoKTsKUnVubmVyLnJ1bihydW5uZXIsIGVuZ2luZSk7CgoKLy8g44Oe44Km44K55pON5L2cCmNvbnN0IG1vdXNlID0gTW91c2UuY3JlYXRlKHJlbmRlci5jYW52YXMpOwpjb25zdCBtb3VzZUNvbnN0cmFpbnQgPSBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlKGVuZ2luZSwgewoJbW91c2U6IG1vdXNlLAoJY29uc3RyYWludDogewoJCXN0aWZmbmVzczogMC4yLAoJCXJlbmRlcjogewoJCQl2aXNpYmxlOiBmYWxzZQoJCX0KCX0KfSk7CgpXb3JsZC5hZGQod29ybGQsIG1vdXNlQ29uc3RyYWludCk7CgovLyBrZWVwIHRoZSBtb3VzZSBpbiBzeW5jIHdpdGggcmVuZGVyaW5nCnJlbmRlci5tb3VzZSA9IG1vdXNlOwoKCmZlZWxlcy5vcGVuUmVhZG1lKCd0aW1lc2NhbGVTaW1wbGUvUkVBRE1FLm1kJyk7CgoKZXhwb3J0IHsKCWVuZ2luZSwKCXdvcmxkLAoJcmVuZGVyLAp9Owo=","options":{"isTrashed":false},"credits":[]},{"name":"timescaleSimple/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CmltcG9ydCB7Cgl3b3JsZCwKfSBmcm9tICcuL3NldHRpbmcnOwoKCi8vIOWjgQpXb3JsZC5hZGQod29ybGQsIFsKCQoJLy8g5bem44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDIwMCwgMTAwLCA2MCwgNjAsIHsKCQkvLyDjga/jga3ov5Tjgorjga7lpKfjgY3jgZUKCQlyZXN0aXR1dGlvbjogMC4wMSwKCQkKCX0pLAoJCgkvLyDkuK3jga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAxMDAsIDYwLCA2MCwgewoJCS8vIOOBr+OBrei/lOOCiuOBruWkp+OBjeOBlQoJCXJlc3RpdHV0aW9uOiAwLjUsCgkJCgl9KSwKCQoJLy8g5Y+z44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDYwMCwgMTAwLCA2MCwgNjAsIHsKCQkvLyDjga/jga3ov5Tjgorjga7lpKfjgY3jgZUKCQlyZXN0aXR1dGlvbjogMSwKCQkKCX0pLAoJCgkvLyDlpKnkupXjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoNDAwLCAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgkJCgl9KSwKCS8vIOOChuOBi+OBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDYwMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJCWFuZ2xlOiAwLjEsCgkJCgl9KSwKCS8vIOWPs+OBruOBi+OBueOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlLAoJCQoJfSksCgkvLyDlt6bjga7jgYvjgbnjga7jgqrjg5bjgrjjgqfjgq/jg4gKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgkJCgl9KSwKXSk7Cg==","options":{"isTrashed":false},"credits":[]},{"name":"views/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjgrrjg7zjg6Djgajjgrnjgq/jg63jg7zjg6sKCgrjgrLjg7zjg6DjgafjgojjgY/jgYLjgovjgIHnlLvpnaLjga7jgrnjgq/jg63jg7zjg6vjgpLkvZzjgaPjgabjgb/jgZ/jgoggIApgQm91bmRzLnRyYW5zbGF0ZWAg44KS5L2/44GG44Go44CB6aCY5Z+fKOOCiuOCh+OBhuOBhOOBjSnjgpLnp7vli5XjgZXjgZvjgovjgZPjgajjgYzjgafjgY3jgovjgpPjgaAKCuOBk+OBk+OBp+OBhOOBhumgmOWfn+OBqOOBr+OAgeerr+OBjOWbm+OBpOOBguOCi+OCguOBruOBruOBk+OBqOOBoOOCiOOAgiAgCuimi+OBn+ebruOBrueUu+mdouOChOOAgeODr+ODvOODq+ODieOBrueUu+mdouOBquOBqeOCguOAgemgmOWfn+OCkuaMgeOBo+OBpuOBhOOCi+OCk+OBoAoKCiMjICFb5pS56YCg44GZ44KLXSh2aWV3cy9tYWluLmpzKQoKCiMjIyBCb3VuZHMudHJhbnNsYXRlKGBib3VuZHNgLCB7IHg6IGB4YCwgeTogYHlgIH0pOwrjg5Hjg6njg6Hjg7zjgr8gfCDmhI/lkbMgfCDljZjkvY0gfCDmnIDlsI8gfCDmnIDlpKcgCi0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8IC0tLQpib3VuZHMgfCDnp7vli5XjgZfjgZ/jgYTpoJjln58gfCAgfCAgfCAKeCB8IOWPs+OBq+enu+WLleOBmeOCi+mHjyB8IHB4IHwgLUluZmluaXR5IHwgSW5maW5pdHkKeSB8IOS4i+OBq+enu+WLleOBmeOCi+mHjyB8IHB4IHwgLUluZmluaXR5IHwgSW5maW5pdHkKCgpb44Oh44OL44Ol44O844Gr5oi744KLXShpbmRleC5odG1sKQoK","options":{"isTrashed":false},"credits":[]},{"name":"views/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jgrrjg7zjg6Djgajjgrnjgq/jg63jg7zjg6s8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJ2aWV3cy9tYWluLmpzIj48L3NjcmlwdD4KCTwvaGVhZD4KCTxib2R5PgoJPC9ib2R5Pgo8L2h0bWw+","options":{"isTrashed":false},"credits":[]},{"name":"views/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCUV2ZW50cywKCUNvbXBvc2l0ZXMsCglDb21tb24sCglNb3VzZUNvbnN0cmFpbnQsCglNb3VzZSwKCVdvcmxkLAoJVmVjdG9yLAoJQm91bmRzLAoJQm9kaWVzLAp9IGZyb20gJ21hdHRlcic7CgoKaW1wb3J0IGVuZ2luZSBmcm9tICdlbmdpbmUnOwpjb25zdCB3b3JsZCA9IGVuZ2luZS53b3JsZDsKCmltcG9ydCByZW5kZXIgZnJvbSAncmVuZGVyJzsKcmVuZGVyLm9wdGlvbnMuaGFzQm91bmRzID0gdHJ1ZTsKcmVuZGVyLm9wdGlvbnMuc2hvd0FuZ2xlSW5kaWNhdG9yID0gdHJ1ZTsKUmVuZGVyLnJ1bihyZW5kZXIpOwoKY29uc3QgcnVubmVyID0gUnVubmVyLmNyZWF0ZSgpOwpSdW5uZXIucnVuKHJ1bm5lciwgZW5naW5lKTsKCgovLyDjg57jgqbjgrnmk43kvZwKY29uc3QgbW91c2UgPSBNb3VzZS5jcmVhdGUocmVuZGVyLmNhbnZhcyk7CmNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1vdXNlQ29uc3RyYWludC5jcmVhdGUoZW5naW5lLCB7Cgltb3VzZTogbW91c2UsCgljb25zdHJhaW50OiB7CgkJc3RpZmZuZXNzOiAwLjIsCgkJcmVuZGVyOiB7CgkJCXZpc2libGU6IGZhbHNlCgkJfQoJfQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgbW91c2VDb25zdHJhaW50KTsKCi8vIGtlZXAgdGhlIG1vdXNlIGluIHN5bmMgd2l0aCByZW5kZXJpbmcKcmVuZGVyLm1vdXNlID0gbW91c2U7CgovLyDjgqrjg5bjgrjjgqfjgq/jg4jjga7jgrnjgr/jg4Pjgq8KY29uc3Qgc3RhY2sgPSBDb21wb3NpdGVzLnN0YWNrKDIwLCAyMCwgMTUsIDQsIDAsIDAsICh4LCB5KSA9PiB7CgkvLyDjg6njg7Pjg4Djg6Djga7norrnjocKCWNvbnN0IHJhdGUgPSBDb21tb24ucmFuZG9tKDAsIDEpOwoJaWYgKHJhdGUgPCAwLjEpIHsKCQkvLyAxMCUg44Gu56K6546H44Gn44CB44GT44GT44Gr5YWl44KLCgkJcmV0dXJuIEJvZGllcy5yZWN0YW5nbGUoeCwgeSwgQ29tbW9uLnJhbmRvbSg4MCwgMTIwKSwgQ29tbW9uLnJhbmRvbSgyMCwgMzApKTsKCgl9IGVsc2UgaWYgKHJhdGUgPCAwLjUpIHsKCQkvLyDjga7jgZPjgoogNDAlIOOBrueiuueOh+OBp+OAgeOBk+OBk+OBq+WFpeOCiwoJCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIENvbW1vbi5yYW5kb20oODAsIDEyMCksIENvbW1vbi5yYW5kb20oMjAsIDMwKSk7CgoJfSBlbHNlIHsKCQkvLyDjga7jgZPjgorjga7norrnjofjgafjgIHjgZPjgZPjgavlhaXjgosKCQljb25zdCBfc2lkZXMgPSBNYXRoLnJvdW5kKENvbW1vbi5yYW5kb20oMSwgOCkpOwoJCWNvbnN0IHNpZGVzID0gKF9zaWRlcyA9PT0gMykgPyA0IDogX3NpZGVzOwoJCXJldHVybiBCb2RpZXMucG9seWdvbih4LCB5LCBzaWRlcywgQ29tbW9uLnJhbmRvbSgyMCwgNTApKTsKCgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBbCglzdGFjaywKCS8vIOWjgeOBruOCquODluOCuOOCp+OCr+ODiAoJQm9kaWVzLnJlY3RhbmdsZSg0MDAsIDAsIDgwMCwgNTAsIHsKCQlpc1N0YXRpYzogdHJ1ZQoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSg4MDAsIDMwMCwgNTAsIDYwMCwgewoJCWlzU3RhdGljOiB0cnVlCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoMCwgMzAwLCA1MCwgNjAwLCB7CgkJaXNTdGF0aWM6IHRydWUKCX0pCl0pOwoKLy8g55S76Z2i44Gu5Lit5b+DCmNvbnN0IHZpZXdwb3J0Q2VudHJlID0gewoJeDogcmVuZGVyLm9wdGlvbnMud2lkdGggKiAwLjUsCgl5OiByZW5kZXIub3B0aW9ucy5oZWlnaHQgKiAwLjUKfTsKCi8vIOODr+ODvOODq+ODieOBrumgmOWfn+OCkueUu+mdouOCiOOCiuWwkeOBl+Wkp+OBjeOBquOCteOCpOOCuuOBq+OBmeOCiwp3b3JsZC5ib3VuZHMubWluLnggPSAtMzAwOwp3b3JsZC5ib3VuZHMubWluLnkgPSAtMzAwOwp3b3JsZC5ib3VuZHMubWF4LnggPSAxMTAwOwp3b3JsZC5ib3VuZHMubWF4LnkgPSA5MDA7CgovLyDjgYTjgb7nm67mjIfjgZfjgabjgYTjgovmi6HlpKfjga7lgI3njofjga7lpInmlbAKbGV0IGJvdW5kc1NjYWxlVGFyZ2V0ID0gMTsKLy8g54++5Zyo44Gu5ouh5aSn44Gu5YCN546HCmNvbnN0IGJvdW5kc1NjYWxlID0gewoJeDogMSwKCXk6IDEKfTsKCkV2ZW50cy5vbihlbmdpbmUsICdiZWZvcmVUaWNrJywgZnVuY3Rpb24oKSB7Cgljb25zdCBtb3VzZSA9IG1vdXNlQ29uc3RyYWludC5tb3VzZTsKCgkvLyDjg57jgqbjgrnjga7jg5vjgqTjg7zjg6vjgaflgI3njofjgpLlpInjgYjjgosKCWNvbnN0IHNjYWxlRmFjdG9yID0gbW91c2Uud2hlZWxEZWx0YSAqIC0wLjE7CglpZiAoc2NhbGVGYWN0b3IgIT09IDApIHsKCQlpZiAoKHNjYWxlRmFjdG9yIDwgMCAmJiBib3VuZHNTY2FsZS54ID49IDAuNikgfHwgKHNjYWxlRmFjdG9yID4gMCAmJiBib3VuZHNTY2FsZS54IDw9IDEuNCkpIHsKCQkJYm91bmRzU2NhbGVUYXJnZXQgKz0gc2NhbGVGYWN0b3I7CgkJfQoJfQoKCWlmIChNYXRoLmFicyhib3VuZHNTY2FsZS54IC0gYm91bmRzU2NhbGVUYXJnZXQpID4gMC4wMSkgewoJCS8vIOaLoeWkp+OBruWAjeeOh+OBjOWkieOCj+OBo+OBpuOBhOOBn+OBqOOBjeOAgeOBk+OBk+OBq+WFpeOCiwoKCQkvLyDlpInljJbjgYzjgarjgaDjgonjgYvjgavjgarjgovjgojjgYbjgavlsJHjgZfjgaDjgZHjgpLmiLvjgZkKCQljb25zdCBzY2FsZUZhY3RvciA9IChib3VuZHNTY2FsZVRhcmdldCAtIGJvdW5kc1NjYWxlLngpICogMC4yOwoJCWJvdW5kc1NjYWxlLnggKz0gc2NhbGVGYWN0b3I7CgkJYm91bmRzU2NhbGUueSArPSBzY2FsZUZhY3RvcjsKCgkJLy8g5o+P55S744GZ44KL6aCY5Z+f44KS5ouh5aSn44GZ44KLCgkJcmVuZGVyLmJvdW5kcy5tYXgueCA9IHJlbmRlci5ib3VuZHMubWluLnggKyByZW5kZXIub3B0aW9ucy53aWR0aCAqIGJvdW5kc1NjYWxlLng7CgkJcmVuZGVyLmJvdW5kcy5tYXgueSA9IHJlbmRlci5ib3VuZHMubWluLnkgKyByZW5kZXIub3B0aW9ucy5oZWlnaHQgKiBib3VuZHNTY2FsZS55OwoKCQkvLyDjgrrjg7zjg6DjgavjgojjgaPjgabnlLvpnaLjga7kuK3lv4PjgYzlsJHjgZfjgZrjgozjgovjga7jgafjgIHjgZ3jgozjgpLjgarjgYrjgZkKCQljb25zdCB0cmFuc2xhdGUgPSB7CgkJCXg6IHJlbmRlci5vcHRpb25zLndpZHRoICogc2NhbGVGYWN0b3IgKiAtMC41LAoJCQl5OiByZW5kZXIub3B0aW9ucy5oZWlnaHQgKiBzY2FsZUZhY3RvciAqIC0wLjUKCQl9OwoJCUJvdW5kcy50cmFuc2xhdGUocmVuZGVyLmJvdW5kcywgdHJhbnNsYXRlKTsKCgkJLy8g44Oe44Km44K544GM44K644O844Og44Gu5b2x6Z+/44KS5Y+X44GR44Gq44GE44KI44GG44Gr6KOc5q2j44GZ44KLCgkJTW91c2Uuc2V0U2NhbGUobW91c2UsIGJvdW5kc1NjYWxlKTsKCQlNb3VzZS5zZXRPZmZzZXQobW91c2UsIHJlbmRlci5ib3VuZHMubWluKTsKCgl9CgoJLy8g55S76Z2i44Gu5Lit5b+D44GL44KJ44Oe44Km44K544G+44Gn44Gu44OZ44Kv44OI44OrCgljb25zdCBkZWx0YUNlbnRyZSA9IFZlY3Rvci5zdWIobW91c2UuYWJzb2x1dGUsIHZpZXdwb3J0Q2VudHJlKTsKCS8vIOeUu+mdouOBruS4reW/g+OBi+OCieODnuOCpuOCueOBvuOBp+OBrui3nembogoJY29uc3QgY2VudHJlRGlzdCA9IFZlY3Rvci5tYWduaXR1ZGUoZGVsdGFDZW50cmUpOwoKCWlmIChjZW50cmVEaXN0ID4gNTApIHsKCQkvLyDnlLvpnaLjga7kuK3lv4PjgYvjgonjg57jgqbjgrnjgb7jgafjga7ot53pm6LjgYwgNTBweCDjgpLotoXjgYjjgabjgYTjgovjgajjgY3jgIHjgZPjgZPjgavlhaXjgosKCgkJLy8g55S76Z2i44Gu5Lit5b+D44GL44KJ44Oe44Km44K544Gr5ZCR44GL44GG5pa55ZCR44Gu44OZ44Kv44OI44OrCgkJY29uc3QgZGlyZWN0aW9uID0gVmVjdG9yLm5vcm1hbGlzZShkZWx0YUNlbnRyZSk7CgkJLy8g44Gh44KH44GG44Gp44GE44GE5oSf44GY44Gu44GG44GU44GP6Led6ZuiCgkJY29uc3Qgc3BlZWQgPSBNYXRoLm1pbigxMCwgTWF0aC5wb3coY2VudHJlRGlzdCAtIDUwLCAyKSAqIDAuMDAwMik7CgkJLy8g55S76Z2i44Gu5Lit5b+D44GL44KJ44Oe44Km44K544Gr5ZCR44GL44GG44Gh44KH44GG44Gp44GE44GE5oSf44GY44Gu6ZW344GV44Gu44OZ44Kv44OI44OrCgkJY29uc3QgdHJhbnNsYXRlID0gVmVjdG9yLm11bHQoZGlyZWN0aW9uLCBzcGVlZCk7CgoJCS8vIOaPj+eUu+OBmeOCi+mgmOWfn+OBjOOAgeODr+ODvOODq+ODieOBrumgmOWfn+OBi+OCieOBr+OBv+WHuuOBleOBquOBhOOCiOOBhuOBq+OBmeOCiwoJCWlmIChyZW5kZXIuYm91bmRzLm1pbi54ICsgdHJhbnNsYXRlLnggPCB3b3JsZC5ib3VuZHMubWluLngpIHsKCQkJdHJhbnNsYXRlLnggPSB3b3JsZC5ib3VuZHMubWluLnggLSByZW5kZXIuYm91bmRzLm1pbi54OwoJCX0KCQlpZiAocmVuZGVyLmJvdW5kcy5tYXgueCArIHRyYW5zbGF0ZS54ID4gd29ybGQuYm91bmRzLm1heC54KSB7CgkJCXRyYW5zbGF0ZS54ID0gd29ybGQuYm91bmRzLm1heC54IC0gcmVuZGVyLmJvdW5kcy5tYXgueDsKCQl9CgkJaWYgKHJlbmRlci5ib3VuZHMubWluLnkgKyB0cmFuc2xhdGUueSA8IHdvcmxkLmJvdW5kcy5taW4ueSkgewoJCQl0cmFuc2xhdGUueSA9IHdvcmxkLmJvdW5kcy5taW4ueSAtIHJlbmRlci5ib3VuZHMubWluLnk7CgkJfQoJCWlmIChyZW5kZXIuYm91bmRzLm1heC55ICsgdHJhbnNsYXRlLnkgPiB3b3JsZC5ib3VuZHMubWF4LnkpIHsKCQkJdHJhbnNsYXRlLnkgPSB3b3JsZC5ib3VuZHMubWF4LnkgLSByZW5kZXIuYm91bmRzLm1heC55OwoJCX0KCQkvLyDjgrnjgq/jg63jg7zjg6vjgZnjgovjgILjgaTjgb7jgorjgIHmj4/nlLvjgZnjgovpoJjln5/jgpLlsJHjgZfnp7vli5XjgZnjgosKCQlCb3VuZHMudHJhbnNsYXRlKHJlbmRlci5ib3VuZHMsIHRyYW5zbGF0ZSk7CgoJCS8vIOODnuOCpuOCueOBjOOCueOCr+ODreODvOODq+OBruW9semfv+OCkuWPl+OBkeOBquOBhOOCiOOBhuOBq+ijnOato+OBmeOCiwoJCU1vdXNlLnNldE9mZnNldChtb3VzZSwgcmVuZGVyLmJvdW5kcy5taW4pOwoKCX0KfSk7CgoKZmVlbGVzLm9wZW5SZWFkbWUoJ3ZpZXdzL1JFQURNRS5tZCcpOwo=","options":{"isTrashed":false},"credits":[]},{"name":"wreckingBall/README.md","type":"text/x-markdown","lastModified":1492756455000,"composed":"IyDjg6Ljg7PjgrHjg7zjg7MKCuODouODs+OCseODvOODs+OBqOOBr+OAgeW7uueJqeOCkuino+S9k+OBmeOCi+OBquOBqeOBruebrueahOOBq+S9v+OCj+OCjOOCjOOCiyAgCuOCr+ODrOODvOODs+OBp+WQiuOCiuS4iuOBkuOCieOCjOOBn+W3qOWkp+OBqumHjeOBhOeQg+OBruOBk+OBqAoKW+ODoeODi+ODpeODvOOBq+aIu+OCi10oaW5kZXguaHRtbCkKCgojIyDjganjgYbjgoTjgaPjgabkvZzjgaPjgabjgovjga7vvJ8KCuOBk+OCjOOCieOCkue1hOOBv+WQiOOCj+OBm+OBpuOBhOOCi+OCiCAgCj4g44Kv44Oq44OD44Kv44GZ44KL44Go44K144Oz44OX44Or44Gr56e75YuV44GX44G+44GZCgrph43jgZXjgpLlpInjgYjjgovjgavjga/igKZb44GK44KC44GVXShkZW5zaXR5L2luZGV4Lmh0bWwpICAK56m65rCX44Gm44GE44GT44GG44KS5aSJ44GI44KL44Gr44Gv4oCmW+epuuawl+OBpuOBhOOBk+OBhl0oYWlyRnJpY3Rpb24vaW5kZXguaHRtbCkgIArmjK/jgorlrZDjgpLkvZzjgovjgavjga/igKZb44OQ44ONXShjb25zdHJhaW50L2luZGV4Lmh0bWwpICAK5bGx44KS5L2c44KL44Gr44Gv4oCmW+OCueOCv+ODg+OCr10oc3RhY2svaW5kZXguaHRtbCkgIAoKIyMg5pS56YCg44Gr5oyR5oim44GX44Gm44G/44KLCgohW+mHjeOBhOeQg10od3JlY2tpbmdCYWxsL21haW4uanMpICAKIVvjgrnjg4bjg7zjgrhdKHdyZWNraW5nQmFsbC9zdGFnZS5qcykgIAohW+ioreWuml0od3JlY2tpbmdCYWxsL3NldHRpbmcuanMpCg==","options":{"isTrashed":false},"credits":[]},{"name":"wreckingBall/index.html","type":"text/html","lastModified":1492756455000,"composed":"PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTx0aXRsZT7jg6Ljg7PjgrHjg7zjg7M8L3RpdGxlPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgoJCTxzY3JpcHQgc3JjPSJ3cmVja2luZ0JhbGwvbWFpbi5qcyI+PC9zY3JpcHQ+Cgk8L2hlYWQ+Cgk8Ym9keT4KCTwvYm9keT4KPC9odG1sPg==","options":{"isTrashed":false},"credits":[]},{"name":"wreckingBall/main.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCVdvcmxkLAoJQ29uc3RyYWludCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKLy8g6YeN44GE55CDCmNvbnN0IGJhbGwxID0gQm9kaWVzLmNpcmNsZSgxMDAsIDQwMCwgNTAsIHsKCS8vIOOBiuOCguOBlQoJZGVuc2l0eTogMC4wNCwKCS8vIOepuuawl+OBpuOBhOOBk+OBhgoJZnJpY3Rpb25BaXI6IDAuMDA1LAoJCn0pOwoKLy8g6YeN44GE55CD44Go56m65Lit44Gu44GC44KL54K544KS44Gk44Gq44GQCmNvbnN0IGpvaW50MSA9IENvbnN0cmFpbnQuY3JlYXRlKHsKCS8vIOWbuuWumuOBl+OBn+OBhOOCquODluOCuOOCp+OCr+ODiAoJYm9keUE6IGJhbGwxLAoJLy8g5Zu65a6a44GX44Gf44GE54K5Cglwb2ludEI6IHsKCQl4OiAzMDAsCgkJeTogMTAwCgl9LAoJLy8g44OQ44ON44Gu5by344GVCglzdGlmZm5lc3M6IDEuMCwKCQp9KTsKCldvcmxkLmFkZCh3b3JsZCwgWwoJLy8g6YeN44GE55CDCgliYWxsMSwKCS8vIOOCuOODp+OCpOODs+ODiAoJam9pbnQxLAoJCl0pOwoKCgoKaW1wb3J0ICcuL3N0YWdlJzsK","options":{"isTrashed":false},"credits":[]},{"name":"wreckingBall/setting.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUVuZ2luZSwKCVJlbmRlciwKCVJ1bm5lciwKCU1vdXNlQ29uc3RyYWludCwKCU1vdXNlLAoJV29ybGQsCn0gZnJvbSAnbWF0dGVyJzsKCgppbXBvcnQgZW5naW5lIGZyb20gJ2VuZ2luZSc7CmNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkOwoKaW1wb3J0IHJlbmRlciBmcm9tICdyZW5kZXInOwpyZW5kZXIub3B0aW9ucy5zaG93QW5nbGVJbmRpY2F0b3IgPSB0cnVlOwpyZW5kZXIub3B0aW9ucy5iYWNrZ3JvdW5kID0gJyMyMDIwMjAnOwpSZW5kZXIucnVuKHJlbmRlcik7Cgpjb25zdCBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7ClJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpOwoKCi8vIOODnuOCpuOCueaTjeS9nApjb25zdCBtb3VzZSA9IE1vdXNlLmNyZWF0ZShyZW5kZXIuY2FudmFzKTsKY29uc3QgbW91c2VDb25zdHJhaW50ID0gTW91c2VDb25zdHJhaW50LmNyZWF0ZShlbmdpbmUsIHsKCW1vdXNlOiBtb3VzZSwKCWNvbnN0cmFpbnQ6IHsKCQlzdGlmZm5lc3M6IDAuMiwKCQlyZW5kZXI6IHsKCQkJdmlzaWJsZTogZmFsc2UKCQl9Cgl9Cn0pOwoKV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpOwoKLy8ga2VlcCB0aGUgbW91c2UgaW4gc3luYyB3aXRoIHJlbmRlcmluZwpyZW5kZXIubW91c2UgPSBtb3VzZTsKCgpmZWVsZXMub3BlblJlYWRtZSgnd3JlY2tpbmdCYWxsL1JFQURNRS5tZCcpOwoKCmV4cG9ydCB7CgllbmdpbmUsCgl3b3JsZCwKCXJlbmRlciwKfTsK","options":{"isTrashed":false},"credits":[]},{"name":"wreckingBall/stage.js","type":"application/javascript","lastModified":1492756455000,"composed":"aW1wb3J0IHsKCUNvbXBvc2l0ZXMsCglXb3JsZCwKCUJvZGllcywKfSBmcm9tICdtYXR0ZXInOwoKaW1wb3J0IHsKCXdvcmxkLAp9IGZyb20gJy4vc2V0dGluZyc7CgoKV29ybGQuYWRkKHdvcmxkLCBbCgkvLyDjgrnjgr/jg4Pjgq8KCUNvbXBvc2l0ZXMuc3RhY2soNDAwLCAxNzksIDUsIDEwLCAwLCAwLCAoeCwgeSkgPT4gewoJCXJldHVybiBCb2RpZXMucmVjdGFuZ2xlKHgsIHksIDQwLCA0MCk7Cgl9KSwKCQoJLy8g5aOB44Gu44Kq44OW44K444Kn44Kv44OICglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgMCwgODAwLCA1MCwgewoJCWlzU3RhdGljOiB0cnVlLAoJfSksCglCb2RpZXMucmVjdGFuZ2xlKDQwMCwgNjAwLCA4MDAsIDUwLCB7CgkJaXNTdGF0aWM6IHRydWUsCgl9KSwKCUJvZGllcy5yZWN0YW5nbGUoODAwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJQm9kaWVzLnJlY3RhbmdsZSgwLCAzMDAsIDUwLCA2MDAsIHsKCQlpc1N0YXRpYzogdHJ1ZSwKCX0pLAoJCl0pOwo=","options":{"isTrashed":false},"credits":[]}]